#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MissionEditorServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MissionEditorServer")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertRating(Rating instance);
    partial void UpdateRating(Rating instance);
    partial void DeleteRating(Rating instance);
    partial void InsertScore(Score instance);
    partial void UpdateScore(Score instance);
    partial void DeleteScore(Score instance);
    partial void InsertMission(Mission instance);
    partial void UpdateMission(Mission instance);
    partial void DeleteMission(Mission instance);
    #endregion
		
		public dbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EditorServer"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<Rating> Ratings
		{
			get
			{
				return this.GetTable<Rating>();
			}
		}
		
		public System.Data.Linq.Table<Score> Scores
		{
			get
			{
				return this.GetTable<Score>();
			}
		}
		
		public System.Data.Linq.Table<Mission> Missions
		{
			get
			{
				return this.GetTable<Mission>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommentID;
		
		private int _MissionID;
		
		private string _Nick;
		
		private string _Text;
		
		private System.DateTime _Time;
		
		private EntityRef<Mission> _Mission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIDChanging(int value);
    partial void OnCommentIDChanged();
    partial void OnMissionIDChanging(int value);
    partial void OnMissionIDChanged();
    partial void OnNickChanging(string value);
    partial void OnNickChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    #endregion
		
		public Comment()
		{
			this._Mission = default(EntityRef<Mission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="Int NOT NULL")]
		public int MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nick", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nick
		{
			get
			{
				return this._Nick;
			}
			set
			{
				if ((this._Nick != value))
				{
					this.OnNickChanging(value);
					this.SendPropertyChanging();
					this._Nick = value;
					this.SendPropertyChanged("Nick");
					this.OnNickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Comment", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(int);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rating")]
	public partial class Rating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IP;
		
		private double _Rating1;
		
		private int _MissionID;
		
		private EntityRef<Mission> _Mission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnRating1Changing(double value);
    partial void OnRating1Changed();
    partial void OnMissionIDChanging(int value);
    partial void OnMissionIDChanged();
    #endregion
		
		public Rating()
		{
			this._Mission = default(EntityRef<Mission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Rating", Storage="_Rating1", DbType="Float NOT NULL")]
		public double Rating1
		{
			get
			{
				return this._Rating1;
			}
			set
			{
				if ((this._Rating1 != value))
				{
					this.OnRating1Changing(value);
					this.SendPropertyChanging();
					this._Rating1 = value;
					this.SendPropertyChanged("Rating1");
					this.OnRating1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Rating", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.Ratings.Remove(this);
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.Ratings.Add(this);
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(int);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Score")]
	public partial class Score : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MissionID;
		
		private string _PlayerName;
		
		private int _Score1;
		
		private int _TimeSeconds;
		
		private string _IP;
		
		private EntityRef<Mission> _Mission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMissionIDChanging(int value);
    partial void OnMissionIDChanged();
    partial void OnPlayerNameChanging(string value);
    partial void OnPlayerNameChanged();
    partial void OnScore1Changing(int value);
    partial void OnScore1Changed();
    partial void OnTimeSecondsChanging(int value);
    partial void OnTimeSecondsChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    #endregion
		
		public Score()
		{
			this._Mission = default(EntityRef<Mission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PlayerName
		{
			get
			{
				return this._PlayerName;
			}
			set
			{
				if ((this._PlayerName != value))
				{
					this.OnPlayerNameChanging(value);
					this.SendPropertyChanging();
					this._PlayerName = value;
					this.SendPropertyChanged("PlayerName");
					this.OnPlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Score", Storage="_Score1", DbType="Int NOT NULL")]
		public int Score1
		{
			get
			{
				return this._Score1;
			}
			set
			{
				if ((this._Score1 != value))
				{
					this.OnScore1Changing(value);
					this.SendPropertyChanging();
					this._Score1 = value;
					this.SendPropertyChanged("Score1");
					this.OnScore1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSeconds", DbType="Int NOT NULL")]
		public int TimeSeconds
		{
			get
			{
				return this._TimeSeconds;
			}
			set
			{
				if ((this._TimeSeconds != value))
				{
					this.OnTimeSecondsChanging(value);
					this.SendPropertyChanging();
					this._TimeSeconds = value;
					this.SendPropertyChanged("TimeSeconds");
					this.OnTimeSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Score", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.Scores.Remove(this);
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.Scores.Add(this);
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(int);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mission")]
	public partial class Mission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MissionID;
		
		private string _Name;
		
		private string _Mod;
		
		private string _Map;
		
		private string _Author;
		
		private string _Password;
		
		private System.Data.Linq.Binary _Mutator;
		
		private System.Data.Linq.Binary _Image;
		
		private string _Description;
		
		private int _DownloadCount;
		
		private System.Nullable<System.DateTime> _CreatedTime;
		
		private System.Nullable<System.DateTime> _ModifiedTime;
		
		private System.Nullable<System.DateTime> _LastCommentTime;
		
		private double _Rating;
		
		private int _CommentCount;
		
		private string _ScoringMethod;
		
		private string _TopScoreLine;
		
		private string _SpringVersion;
		
		private string _MissionEditorVersion;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<Rating> _Ratings;
		
		private EntitySet<Score> _Scores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMissionIDChanging(int value);
    partial void OnMissionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModChanging(string value);
    partial void OnModChanged();
    partial void OnMapChanging(string value);
    partial void OnMapChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMutatorChanging(System.Data.Linq.Binary value);
    partial void OnMutatorChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDownloadCountChanging(int value);
    partial void OnDownloadCountChanged();
    partial void OnCreatedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedTimeChanged();
    partial void OnModifiedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedTimeChanged();
    partial void OnLastCommentTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCommentTimeChanged();
    partial void OnRatingChanging(double value);
    partial void OnRatingChanged();
    partial void OnCommentCountChanging(int value);
    partial void OnCommentCountChanged();
    partial void OnScoringMethodChanging(string value);
    partial void OnScoringMethodChanged();
    partial void OnTopScoreLineChanging(string value);
    partial void OnTopScoreLineChanged();
    partial void OnSpringVersionChanging(string value);
    partial void OnSpringVersionChanged();
    partial void OnMissionEditorVersionChanging(string value);
    partial void OnMissionEditorVersionChanged();
    #endregion
		
		public Mission()
		{
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._Ratings = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings), new Action<Rating>(this.detach_Ratings));
			this._Scores = new EntitySet<Score>(new Action<Score>(this.attach_Scores), new Action<Score>(this.detach_Scores));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mod", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Mod
		{
			get
			{
				return this._Mod;
			}
			set
			{
				if ((this._Mod != value))
				{
					this.OnModChanging(value);
					this.SendPropertyChanging();
					this._Mod = value;
					this.SendPropertyChanged("Mod");
					this.OnModChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Map", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Map
		{
			get
			{
				return this._Map;
			}
			set
			{
				if ((this._Map != value))
				{
					this.OnMapChanging(value);
					this.SendPropertyChanging();
					this._Map = value;
					this.SendPropertyChanged("Map");
					this.OnMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mutator", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Mutator
		{
			get
			{
				return this._Mutator;
			}
			set
			{
				if ((this._Mutator != value))
				{
					this.OnMutatorChanging(value);
					this.SendPropertyChanging();
					this._Mutator = value;
					this.SendPropertyChanged("Mutator");
					this.OnMutatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadCount", DbType="Int NOT NULL")]
		public int DownloadCount
		{
			get
			{
				return this._DownloadCount;
			}
			set
			{
				if ((this._DownloadCount != value))
				{
					this.OnDownloadCountChanging(value);
					this.SendPropertyChanging();
					this._DownloadCount = value;
					this.SendPropertyChanged("DownloadCount");
					this.OnDownloadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedTime
		{
			get
			{
				return this._CreatedTime;
			}
			set
			{
				if ((this._CreatedTime != value))
				{
					this.OnCreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedTime = value;
					this.SendPropertyChanged("CreatedTime");
					this.OnCreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCommentTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCommentTime
		{
			get
			{
				return this._LastCommentTime;
			}
			set
			{
				if ((this._LastCommentTime != value))
				{
					this.OnLastCommentTimeChanging(value);
					this.SendPropertyChanging();
					this._LastCommentTime = value;
					this.SendPropertyChanged("LastCommentTime");
					this.OnLastCommentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Float NOT NULL")]
		public double Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentCount", DbType="Int NOT NULL")]
		public int CommentCount
		{
			get
			{
				return this._CommentCount;
			}
			set
			{
				if ((this._CommentCount != value))
				{
					this.OnCommentCountChanging(value);
					this.SendPropertyChanging();
					this._CommentCount = value;
					this.SendPropertyChanged("CommentCount");
					this.OnCommentCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoringMethod", DbType="NVarChar(100)")]
		public string ScoringMethod
		{
			get
			{
				return this._ScoringMethod;
			}
			set
			{
				if ((this._ScoringMethod != value))
				{
					this.OnScoringMethodChanging(value);
					this.SendPropertyChanging();
					this._ScoringMethod = value;
					this.SendPropertyChanged("ScoringMethod");
					this.OnScoringMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopScoreLine", DbType="NVarChar(100)")]
		public string TopScoreLine
		{
			get
			{
				return this._TopScoreLine;
			}
			set
			{
				if ((this._TopScoreLine != value))
				{
					this.OnTopScoreLineChanging(value);
					this.SendPropertyChanging();
					this._TopScoreLine = value;
					this.SendPropertyChanged("TopScoreLine");
					this.OnTopScoreLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringVersion", DbType="nvarchar(20)")]
		public string SpringVersion
		{
			get
			{
				return this._SpringVersion;
			}
			set
			{
				if ((this._SpringVersion != value))
				{
					this.OnSpringVersionChanging(value);
					this.SendPropertyChanging();
					this._SpringVersion = value;
					this.SendPropertyChanged("SpringVersion");
					this.OnSpringVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionEditorVersion", DbType="nvarchar(20)")]
		public string MissionEditorVersion
		{
			get
			{
				return this._MissionEditorVersion;
			}
			set
			{
				if ((this._MissionEditorVersion != value))
				{
					this.OnMissionEditorVersionChanging(value);
					this.SendPropertyChanging();
					this._MissionEditorVersion = value;
					this.SendPropertyChanged("MissionEditorVersion");
					this.OnMissionEditorVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Comment", Storage="_Comments", ThisKey="MissionID", OtherKey="MissionID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Rating", Storage="_Ratings", ThisKey="MissionID", OtherKey="MissionID")]
		public EntitySet<Rating> Ratings
		{
			get
			{
				return this._Ratings;
			}
			set
			{
				this._Ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Score", Storage="_Scores", ThisKey="MissionID", OtherKey="MissionID")]
		public EntitySet<Score> Scores
		{
			get
			{
				return this._Scores;
			}
			set
			{
				this._Scores.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Mission = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Mission = null;
		}
		
		private void attach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Mission = this;
		}
		
		private void detach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Mission = null;
		}
		
		private void attach_Scores(Score entity)
		{
			this.SendPropertyChanging();
			entity.Mission = this;
		}
		
		private void detach_Scores(Score entity)
		{
			this.SendPropertyChanging();
			entity.Mission = null;
		}
	}
}
#pragma warning restore 1591
