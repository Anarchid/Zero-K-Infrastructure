<UserControl x:Class="MissionEditor2.GiveOrdersPane" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:ad="clr-namespace:AvalonDock;assembly=AvalonDock" xmlns:local="clr-namespace:MissionEditor2" mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ListBox x:Key="orderTypeListBox" Tag="orderTypeListBox" IsSynchronizedWithCurrentItem="True">
            <ListBoxItem IsSelected="True">Move</ListBoxItem>
            <ListBoxItem>Patrol</ListBoxItem>
            <ListBoxItem>Stop</ListBoxItem>
            <ListBoxItem>Fight</ListBoxItem>
            <ListBoxItem>Attack</ListBoxItem>
            <ListBoxItem>Enable Repeat Mode</ListBoxItem>
            <ListBoxItem>Disable Repeat Mode</ListBoxItem>
        </ListBox>
        <local:TranslateConverter x:Key="translateConverter" />
        <local:ZoomConverter x:Key="log10Converter" />
        <ItemsPanelTemplate x:Key="orderMap_transparentMapTemplate">
            <Canvas Background="Transparent" MinHeight="{Binding ElementName=window, Path=Mission.Map.Texture.Height}"
                    MinWidth="{Binding ElementName=window, Path=Mission.Map.Texture.Height}" Loaded="TransparentCanvasLoaded">
                <Canvas.LayoutTransform>
                    <ScaleTransform ScaleX="{Binding Path=Value, ElementName=zoomSlider, Converter={StaticResource log10Converter}}"
                            ScaleY="{Binding Path=Value, ElementName=zoomSlider, Converter={StaticResource log10Converter}}" />
                </Canvas.LayoutTransform>
            </Canvas>
        </ItemsPanelTemplate>

        <Style x:Key="orderMap_orderStyle" TargetType="ListBoxItem">
            <Setter Property="Canvas.Left" Value="{Binding X, Converter={StaticResource translateConverter}, ConverterParameter=-4, FallbackValue=-100}" />
            <Setter Property="Canvas.Top" Value="{Binding Y, Converter={StaticResource translateConverter}, ConverterParameter=-2, FallbackValue=-100}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Viewbox Width="8" Height="4">
                            <Grid>
                                <Ellipse x:Name="border" Margin="-10" Stroke="Blue" StrokeThickness="2" PreviewMouseDown="OrderMouseDown" Fill="White" Opacity="0.5"
                                        Cursor="SizeAll" />
                                <ContentPresenter PreviewMouseDown="OrderMouseDown" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center"
                                        VerticalAlignment="Center" />
                            </Grid>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="Red" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataGrid x:Key="ordersListBox" Grid.Row="1" ItemsSource="{Binding Path=Orders}" AutoGenerateColumns="False" CanUserSortColumns="False" Background="White">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Name}" IsReadOnly="True" Header="Type" />
                <DataGridTextColumn Binding="{Binding X, StringFormat=#, FallbackValue=n/a }" Header="X" />
                <DataGridTextColumn Binding="{Binding Y, StringFormat=#, FallbackValue=n/a }" Header="Y" />
            </DataGrid.Columns>
        </DataGrid>
    </UserControl.Resources>
    <Grid>
        <ad:DockingManager>
            <ad:ResizingPanel Orientation="Horizontal">
                <ad:ResizingPanel Orientation="Vertical" ad:ResizingPanel.ResizeWidth="150">
                    <ad:DockablePane ad:ResizingPanel.ResizeHeight="139">
                        <ad:DockableContent Title="Help">
                            <ScrollViewer Background="White">
                                <TextBlock TextWrapping="WrapWithOverflow">
                    The orders are given to units that are are part of one of the selected groups. If no group is selected, all units created in this trigger so far are given the orders.
                    <LineBreak />
                    Delete orders by selecting them in the orders list and pressing the delete key.
                    <LineBreak />
                    If you want to give different sets of orders to different units, create more Give Orders actions.
                    <LineBreak />
                    You can add units to groups by editing the group column of the unit list in the Create Units display or by right-clicking on the unit icons.
                    <LineBreak />
                    Separate multiple groups with commas and no spaces.
                                </TextBlock>
                            </ScrollViewer>
                        </ad:DockableContent>

                        <ad:DockableContent Title="Order Type" Content="{Binding Source={StaticResource orderTypeListBox}}" />
                    </ad:DockablePane>
                    <ad:ResizingPanel>
                        <ad:DockablePane ad:ResizingPanel.ResizeHeight="139">
                            <ad:DockableContent Title="Groups">
                                <ListBox ItemsSource="{Binding Mission.AllGroups, ElementName=window}" SelectionMode="Multiple" Loaded="OrderGroupsListLoaded" />
                            </ad:DockableContent>
                        </ad:DockablePane>
                    </ad:ResizingPanel>
                    <ad:DockablePane>
                        <ad:DockableContent Title="Order List" Content="{Binding Source={StaticResource ordersListBox}}" />
                    </ad:DockablePane>
                </ad:ResizingPanel>
                <ScrollViewer HorizontalScrollBarVisibility="Auto">
                    <Grid>
                        <Canvas DataContext="{Binding Mission.Map.Texture, ElementName=window}" MinHeight="{Binding Height}" MinWidth="{Binding Width}"
                                Loaded="OrderLineCanvasLoaded">
                            <Canvas.LayoutTransform>
                                <ScaleTransform ScaleX="{Binding Value, ElementName=zoomSlider, Converter={StaticResource log10Converter}}"
                                        ScaleY="{Binding Value, ElementName=zoomSlider, Converter={StaticResource log10Converter}}" />
                            </Canvas.LayoutTransform>
                            <Canvas.Background>
                                <ImageBrush AlignmentX="Left" AlignmentY="Top" Stretch="None" ImageSource="{Binding}" />
                            </Canvas.Background>
                        </Canvas>
                        <ListBox ItemsSource="{Binding Orders}" ItemContainerStyle="{StaticResource orderMap_orderStyle}" SelectionMode="Extended"
                                ItemsPanel="{StaticResource orderMap_transparentMapTemplate}" Background="Transparent" IsSynchronizedWithCurrentItem="True"
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" />
                    </Grid>
                </ScrollViewer>
            </ad:ResizingPanel>
        </ad:DockingManager>

    </Grid>
</UserControl>
