//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace PlasmaShared.ContentService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ContentServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ContentService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetScriptMissionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyMissionRunOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitMissionScoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitStackTraceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ContentService() {
            this.Url = global::PlasmaShared.Properties.Settings.Default.PlasmaShared_ContentService_ContentService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetScriptMissionDataCompletedEventHandler GetScriptMissionDataCompleted;
        
        /// <remarks/>
        public event NotifyMissionRunCompletedEventHandler NotifyMissionRunCompleted;
        
        /// <remarks/>
        public event SubmitMissionScoreCompletedEventHandler SubmitMissionScoreCompleted;
        
        /// <remarks/>
        public event SubmitStackTraceCompletedEventHandler SubmitStackTraceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScriptMissionData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScriptMissionData GetScriptMissionData(string name) {
            object[] results = this.Invoke("GetScriptMissionData", new object[] {
                        name});
            return ((ScriptMissionData)(results[0]));
        }
        
        /// <remarks/>
        public void GetScriptMissionDataAsync(string name) {
            this.GetScriptMissionDataAsync(name, null);
        }
        
        /// <remarks/>
        public void GetScriptMissionDataAsync(string name, object userState) {
            if ((this.GetScriptMissionDataOperationCompleted == null)) {
                this.GetScriptMissionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScriptMissionDataOperationCompleted);
            }
            this.InvokeAsync("GetScriptMissionData", new object[] {
                        name}, this.GetScriptMissionDataOperationCompleted, userState);
        }
        
        private void OnGetScriptMissionDataOperationCompleted(object arg) {
            if ((this.GetScriptMissionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScriptMissionDataCompleted(this, new GetScriptMissionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyMissionRun", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyMissionRun(string login, string missionName) {
            this.Invoke("NotifyMissionRun", new object[] {
                        login,
                        missionName});
        }
        
        /// <remarks/>
        public void NotifyMissionRunAsync(string login, string missionName) {
            this.NotifyMissionRunAsync(login, missionName, null);
        }
        
        /// <remarks/>
        public void NotifyMissionRunAsync(string login, string missionName, object userState) {
            if ((this.NotifyMissionRunOperationCompleted == null)) {
                this.NotifyMissionRunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyMissionRunOperationCompleted);
            }
            this.InvokeAsync("NotifyMissionRun", new object[] {
                        login,
                        missionName}, this.NotifyMissionRunOperationCompleted, userState);
        }
        
        private void OnNotifyMissionRunOperationCompleted(object arg) {
            if ((this.NotifyMissionRunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyMissionRunCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitMissionScore", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitMissionScore(string login, string passwordHash, string missionName, int score, int gameSeconds) {
            this.Invoke("SubmitMissionScore", new object[] {
                        login,
                        passwordHash,
                        missionName,
                        score,
                        gameSeconds});
        }
        
        /// <remarks/>
        public void SubmitMissionScoreAsync(string login, string passwordHash, string missionName, int score, int gameSeconds) {
            this.SubmitMissionScoreAsync(login, passwordHash, missionName, score, gameSeconds, null);
        }
        
        /// <remarks/>
        public void SubmitMissionScoreAsync(string login, string passwordHash, string missionName, int score, int gameSeconds, object userState) {
            if ((this.SubmitMissionScoreOperationCompleted == null)) {
                this.SubmitMissionScoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitMissionScoreOperationCompleted);
            }
            this.InvokeAsync("SubmitMissionScore", new object[] {
                        login,
                        passwordHash,
                        missionName,
                        score,
                        gameSeconds}, this.SubmitMissionScoreOperationCompleted, userState);
        }
        
        private void OnSubmitMissionScoreOperationCompleted(object arg) {
            if ((this.SubmitMissionScoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitMissionScoreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitStackTrace", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitStackTrace(ProgramType programType, string playerName, string exception, string extraData, string programVersion) {
            this.Invoke("SubmitStackTrace", new object[] {
                        programType,
                        playerName,
                        exception,
                        extraData,
                        programVersion});
        }
        
        /// <remarks/>
        public void SubmitStackTraceAsync(ProgramType programType, string playerName, string exception, string extraData, string programVersion) {
            this.SubmitStackTraceAsync(programType, playerName, exception, extraData, programVersion, null);
        }
        
        /// <remarks/>
        public void SubmitStackTraceAsync(ProgramType programType, string playerName, string exception, string extraData, string programVersion, object userState) {
            if ((this.SubmitStackTraceOperationCompleted == null)) {
                this.SubmitStackTraceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitStackTraceOperationCompleted);
            }
            this.InvokeAsync("SubmitStackTrace", new object[] {
                        programType,
                        playerName,
                        exception,
                        extraData,
                        programVersion}, this.SubmitStackTraceOperationCompleted, userState);
        }
        
        private void OnSubmitStackTraceOperationCompleted(object arg) {
            if ((this.SubmitStackTraceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitStackTraceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ScriptMissionData {
        
        private string[] manualDependenciesField;
        
        private string mapNameField;
        
        private string modTagField;
        
        private string startScriptField;
        
        private string nameField;
        
        /// <remarks/>
        public string[] ManualDependencies {
            get {
                return this.manualDependenciesField;
            }
            set {
                this.manualDependenciesField = value;
            }
        }
        
        /// <remarks/>
        public string MapName {
            get {
                return this.mapNameField;
            }
            set {
                this.mapNameField = value;
            }
        }
        
        /// <remarks/>
        public string ModTag {
            get {
                return this.modTagField;
            }
            set {
                this.modTagField = value;
            }
        }
        
        /// <remarks/>
        public string StartScript {
            get {
                return this.startScriptField;
            }
            set {
                this.startScriptField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ProgramType {
        
        /// <remarks/>
        MissionEditor,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetScriptMissionDataCompletedEventHandler(object sender, GetScriptMissionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScriptMissionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScriptMissionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScriptMissionData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScriptMissionData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NotifyMissionRunCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SubmitMissionScoreCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SubmitStackTraceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591