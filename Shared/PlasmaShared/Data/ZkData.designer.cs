#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZkData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="zero-k")]
	public partial class ZkDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMission(Mission instance);
    partial void UpdateMission(Mission instance);
    partial void DeleteMission(Mission instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertLobbyMessage(LobbyMessage instance);
    partial void UpdateLobbyMessage(LobbyMessage instance);
    partial void DeleteLobbyMessage(LobbyMessage instance);
    partial void InsertLobbyChannelSubscription(LobbyChannelSubscription instance);
    partial void UpdateLobbyChannelSubscription(LobbyChannelSubscription instance);
    partial void DeleteLobbyChannelSubscription(LobbyChannelSubscription instance);
    partial void InsertForumThread(ForumThread instance);
    partial void UpdateForumThread(ForumThread instance);
    partial void DeleteForumThread(ForumThread instance);
    partial void InsertExceptionLog(ExceptionLog instance);
    partial void UpdateExceptionLog(ExceptionLog instance);
    partial void DeleteExceptionLog(ExceptionLog instance);
    partial void InsertResourceDependency(ResourceDependency instance);
    partial void UpdateResourceDependency(ResourceDependency instance);
    partial void DeleteResourceDependency(ResourceDependency instance);
    partial void InsertResourceContentFile(ResourceContentFile instance);
    partial void UpdateResourceContentFile(ResourceContentFile instance);
    partial void DeleteResourceContentFile(ResourceContentFile instance);
    partial void InsertResourceSpringHash(ResourceSpringHash instance);
    partial void UpdateResourceSpringHash(ResourceSpringHash instance);
    partial void DeleteResourceSpringHash(ResourceSpringHash instance);
    partial void InsertResource(Resource instance);
    partial void UpdateResource(Resource instance);
    partial void DeleteResource(Resource instance);
    partial void InsertMissionScore(MissionScore instance);
    partial void UpdateMissionScore(MissionScore instance);
    partial void DeleteMissionScore(MissionScore instance);
    partial void InsertRating(Rating instance);
    partial void UpdateRating(Rating instance);
    partial void DeleteRating(Rating instance);
    partial void InsertForumPost(ForumPost instance);
    partial void UpdateForumPost(ForumPost instance);
    partial void DeleteForumPost(ForumPost instance);
    partial void InsertMapRating(MapRating instance);
    partial void UpdateMapRating(MapRating instance);
    partial void DeleteMapRating(MapRating instance);
    partial void InsertSpringBattle(SpringBattle instance);
    partial void UpdateSpringBattle(SpringBattle instance);
    partial void DeleteSpringBattle(SpringBattle instance);
    partial void InsertSpringBattlePlayer(SpringBattlePlayer instance);
    partial void UpdateSpringBattlePlayer(SpringBattlePlayer instance);
    partial void DeleteSpringBattlePlayer(SpringBattlePlayer instance);
    partial void InsertForumCategory(ForumCategory instance);
    partial void UpdateForumCategory(ForumCategory instance);
    partial void DeleteForumCategory(ForumCategory instance);
    partial void InsertForumThreadLastRead(ForumThreadLastRead instance);
    partial void UpdateForumThreadLastRead(ForumThreadLastRead instance);
    partial void DeleteForumThreadLastRead(ForumThreadLastRead instance);
    partial void InsertAccountBattleAward(AccountBattleAward instance);
    partial void UpdateAccountBattleAward(AccountBattleAward instance);
    partial void DeleteAccountBattleAward(AccountBattleAward instance);
    partial void InsertAccountBattleStat(AccountBattleStat instance);
    partial void UpdateAccountBattleStat(AccountBattleStat instance);
    partial void DeleteAccountBattleStat(AccountBattleStat instance);
    partial void InsertUnlock(Unlock instance);
    partial void UpdateUnlock(Unlock instance);
    partial void DeleteUnlock(Unlock instance);
    partial void InsertAccountUnlock(AccountUnlock instance);
    partial void UpdateAccountUnlock(AccountUnlock instance);
    partial void DeleteAccountUnlock(AccountUnlock instance);
    partial void InsertCommander(Commander instance);
    partial void UpdateCommander(Commander instance);
    partial void DeleteCommander(Commander instance);
    partial void InsertCommanderModule(CommanderModule instance);
    partial void UpdateCommanderModule(CommanderModule instance);
    partial void DeleteCommanderModule(CommanderModule instance);
    partial void InsertCommanderSlot(CommanderSlot instance);
    partial void UpdateCommanderSlot(CommanderSlot instance);
    partial void DeleteCommanderSlot(CommanderSlot instance);
    #endregion
		
		public ZkDataContext() : 
				base(global::PlasmaShared.Properties.Settings.Default.zero_kConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ZkDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZkDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZkDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZkDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Battle> Battles
		{
			get
			{
				return this.GetTable<Battle>();
			}
		}
		
		public System.Data.Linq.Table<Transit> Transits
		{
			get
			{
				return this.GetTable<Transit>();
			}
		}
		
		public System.Data.Linq.Table<BattleEvent> BattleEvents
		{
			get
			{
				return this.GetTable<BattleEvent>();
			}
		}
		
		public System.Data.Linq.Table<CelestialObject> CelestialObjects
		{
			get
			{
				return this.GetTable<CelestialObject>();
			}
		}
		
		public System.Data.Linq.Table<CelestialObjectEvent> CelestialObjectEvents
		{
			get
			{
				return this.GetTable<CelestialObjectEvent>();
			}
		}
		
		public System.Data.Linq.Table<CelestialObjectLink> CelestialObjectLinks
		{
			get
			{
				return this.GetTable<CelestialObjectLink>();
			}
		}
		
		public System.Data.Linq.Table<CelestialObjectShip> CelestialObjectShips
		{
			get
			{
				return this.GetTable<CelestialObjectShip>();
			}
		}
		
		public System.Data.Linq.Table<CelestialObjectStructure> CelestialObjectStructures
		{
			get
			{
				return this.GetTable<CelestialObjectStructure>();
			}
		}
		
		public System.Data.Linq.Table<Coalition> Coalitions
		{
			get
			{
				return this.GetTable<Coalition>();
			}
		}
		
		public System.Data.Linq.Table<Config> Configs
		{
			get
			{
				return this.GetTable<Config>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<Fleet> Fleets
		{
			get
			{
				return this.GetTable<Fleet>();
			}
		}
		
		public System.Data.Linq.Table<FleetEvent> FleetEvents
		{
			get
			{
				return this.GetTable<FleetEvent>();
			}
		}
		
		public System.Data.Linq.Table<FleetShip> FleetShips
		{
			get
			{
				return this.GetTable<FleetShip>();
			}
		}
		
		public System.Data.Linq.Table<Mission> Missions
		{
			get
			{
				return this.GetTable<Mission>();
			}
		}
		
		public System.Data.Linq.Table<MothershipStructure> MothershipStructures
		{
			get
			{
				return this.GetTable<MothershipStructure>();
			}
		}
		
		public System.Data.Linq.Table<Player> Players
		{
			get
			{
				return this.GetTable<Player>();
			}
		}
		
		public System.Data.Linq.Table<PlayerEvent> PlayerEvents
		{
			get
			{
				return this.GetTable<PlayerEvent>();
			}
		}
		
		public System.Data.Linq.Table<PlayerTechSpent> PlayerTechSpents
		{
			get
			{
				return this.GetTable<PlayerTechSpent>();
			}
		}
		
		public System.Data.Linq.Table<PopulationTransport> PopulationTransports
		{
			get
			{
				return this.GetTable<PopulationTransport>();
			}
		}
		
		public System.Data.Linq.Table<Score> Scores
		{
			get
			{
				return this.GetTable<Score>();
			}
		}
		
		public System.Data.Linq.Table<ShipType> ShipTypes
		{
			get
			{
				return this.GetTable<ShipType>();
			}
		}
		
		public System.Data.Linq.Table<StarSystem> StarSystems
		{
			get
			{
				return this.GetTable<StarSystem>();
			}
		}
		
		public System.Data.Linq.Table<StarSystemTech> StarSystemTeches
		{
			get
			{
				return this.GetTable<StarSystemTech>();
			}
		}
		
		public System.Data.Linq.Table<StructureType> StructureTypes
		{
			get
			{
				return this.GetTable<StructureType>();
			}
		}
		
		public System.Data.Linq.Table<Tech> Teches
		{
			get
			{
				return this.GetTable<Tech>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<LobbyMessage> LobbyMessages
		{
			get
			{
				return this.GetTable<LobbyMessage>();
			}
		}
		
		public System.Data.Linq.Table<LobbyChannelSubscription> LobbyChannelSubscriptions
		{
			get
			{
				return this.GetTable<LobbyChannelSubscription>();
			}
		}
		
		public System.Data.Linq.Table<ForumThread> ForumThreads
		{
			get
			{
				return this.GetTable<ForumThread>();
			}
		}
		
		public System.Data.Linq.Table<ExceptionLog> ExceptionLogs
		{
			get
			{
				return this.GetTable<ExceptionLog>();
			}
		}
		
		public System.Data.Linq.Table<ResourceDependency> ResourceDependencies
		{
			get
			{
				return this.GetTable<ResourceDependency>();
			}
		}
		
		public System.Data.Linq.Table<ResourceContentFile> ResourceContentFiles
		{
			get
			{
				return this.GetTable<ResourceContentFile>();
			}
		}
		
		public System.Data.Linq.Table<ResourceSpringHash> ResourceSpringHashes
		{
			get
			{
				return this.GetTable<ResourceSpringHash>();
			}
		}
		
		public System.Data.Linq.Table<Resource> Resources
		{
			get
			{
				return this.GetTable<Resource>();
			}
		}
		
		public System.Data.Linq.Table<MissionScore> MissionScores
		{
			get
			{
				return this.GetTable<MissionScore>();
			}
		}
		
		public System.Data.Linq.Table<Rating> Ratings
		{
			get
			{
				return this.GetTable<Rating>();
			}
		}
		
		public System.Data.Linq.Table<ForumPost> ForumPosts
		{
			get
			{
				return this.GetTable<ForumPost>();
			}
		}
		
		public System.Data.Linq.Table<MapRating> MapRatings
		{
			get
			{
				return this.GetTable<MapRating>();
			}
		}
		
		public System.Data.Linq.Table<SpringBattle> SpringBattles
		{
			get
			{
				return this.GetTable<SpringBattle>();
			}
		}
		
		public System.Data.Linq.Table<SpringBattlePlayer> SpringBattlePlayers
		{
			get
			{
				return this.GetTable<SpringBattlePlayer>();
			}
		}
		
		public System.Data.Linq.Table<ForumCategory> ForumCategories
		{
			get
			{
				return this.GetTable<ForumCategory>();
			}
		}
		
		public System.Data.Linq.Table<ForumThreadLastRead> ForumThreadLastReads
		{
			get
			{
				return this.GetTable<ForumThreadLastRead>();
			}
		}
		
		public System.Data.Linq.Table<AccountBattleAward> AccountBattleAwards
		{
			get
			{
				return this.GetTable<AccountBattleAward>();
			}
		}
		
		public System.Data.Linq.Table<AccountBattleStat> AccountBattleStats
		{
			get
			{
				return this.GetTable<AccountBattleStat>();
			}
		}
		
		public System.Data.Linq.Table<Unlock> Unlocks
		{
			get
			{
				return this.GetTable<Unlock>();
			}
		}
		
		public System.Data.Linq.Table<AccountUnlock> AccountUnlocks
		{
			get
			{
				return this.GetTable<AccountUnlock>();
			}
		}
		
		public System.Data.Linq.Table<SpringBattleRating> SpringBattleRatings
		{
			get
			{
				return this.GetTable<SpringBattleRating>();
			}
		}
		
		public System.Data.Linq.Table<Commander> Commanders
		{
			get
			{
				return this.GetTable<Commander>();
			}
		}
		
		public System.Data.Linq.Table<CommanderModule> CommanderModules
		{
			get
			{
				return this.GetTable<CommanderModule>();
			}
		}
		
		public System.Data.Linq.Table<CommanderSlot> CommanderSlots
		{
			get
			{
				return this.GetTable<CommanderSlot>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Battle")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Battle
	{
		
		private int _BattleID;
		
		private System.Nullable<int> _CelestialObjectID;
		
		private bool _IsDone;
		
		public Battle()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BattleID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int BattleID
		{
			get
			{
				return this._BattleID;
			}
			set
			{
				if ((this._BattleID != value))
				{
					this._BattleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelestialObjectID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> CelestialObjectID
		{
			get
			{
				return this._CelestialObjectID;
			}
			set
			{
				if ((this._CelestialObjectID != value))
				{
					this._CelestialObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDone", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsDone
		{
			get
			{
				return this._IsDone;
			}
			set
			{
				if ((this._IsDone != value))
				{
					this._IsDone = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transit")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Transit
	{
		
		private int _TransitID;
		
		private System.Nullable<int> _FromObjectID;
		
		private System.Nullable<int> _ToObjectID;
		
		private float _FromX;
		
		private float _FromY;
		
		private float _ToX;
		
		private float _ToY;
		
		private int _StartBattleTurn;
		
		private int _EndBattleTurn;
		
		private int _Warp;
		
		private System.Nullable<int> _OrbitsObjectID;
		
		public Transit()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TransitID
		{
			get
			{
				return this._TransitID;
			}
			set
			{
				if ((this._TransitID != value))
				{
					this._TransitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromObjectID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> FromObjectID
		{
			get
			{
				return this._FromObjectID;
			}
			set
			{
				if ((this._FromObjectID != value))
				{
					this._FromObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToObjectID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ToObjectID
		{
			get
			{
				return this._ToObjectID;
			}
			set
			{
				if ((this._ToObjectID != value))
				{
					this._ToObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromX", DbType="Real NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public float FromX
		{
			get
			{
				return this._FromX;
			}
			set
			{
				if ((this._FromX != value))
				{
					this._FromX = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromY", DbType="Real NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public float FromY
		{
			get
			{
				return this._FromY;
			}
			set
			{
				if ((this._FromY != value))
				{
					this._FromY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToX", DbType="Real NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public float ToX
		{
			get
			{
				return this._ToX;
			}
			set
			{
				if ((this._ToX != value))
				{
					this._ToX = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToY", DbType="Real NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public float ToY
		{
			get
			{
				return this._ToY;
			}
			set
			{
				if ((this._ToY != value))
				{
					this._ToY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartBattleTurn", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int StartBattleTurn
		{
			get
			{
				return this._StartBattleTurn;
			}
			set
			{
				if ((this._StartBattleTurn != value))
				{
					this._StartBattleTurn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndBattleTurn", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int EndBattleTurn
		{
			get
			{
				return this._EndBattleTurn;
			}
			set
			{
				if ((this._EndBattleTurn != value))
				{
					this._EndBattleTurn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warp", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int Warp
		{
			get
			{
				return this._Warp;
			}
			set
			{
				if ((this._Warp != value))
				{
					this._Warp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrbitsObjectID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> OrbitsObjectID
		{
			get
			{
				return this._OrbitsObjectID;
			}
			set
			{
				if ((this._OrbitsObjectID != value))
				{
					this._OrbitsObjectID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BattleEvent")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BattleEvent
	{
		
		private int _BattleID;
		
		private int _EventID;
		
		public BattleEvent()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BattleID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int BattleID
		{
			get
			{
				return this._BattleID;
			}
			set
			{
				if ((this._BattleID != value))
				{
					this._BattleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this._EventID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CelestialObject")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CelestialObject
	{
		
		private int _CelestialObjectID;
		
		private int _CelestialObjectType;
		
		private double _OrbitSpeed;
		
		private double _OrbitDistance;
		
		private double _OrbitInitialAngle;
		
		private System.Nullable<int> _ParentObject;
		
		private string _Name;
		
		private double _X;
		
		private double _Y;
		
		private double _MetalDensity;
		
		private double _FoodDensity;
		
		private double _QuantiumDensity;
		
		private double _DarkMatterDensity;
		
		private int _Size;
		
		private System.Nullable<int> _OwnerID;
		
		private bool _IsStargate;
		
		private int _Population;
		
		private double _HitpointsDamaged;
		
		private bool _IsConnected;
		
		private int _MaxPopulation;
		
		private double _MetalIncome;
		
		private double _FoodIncome;
		
		private double _QuantiumIncome;
		
		private double _DarkMatterIncome;
		
		private double _Efficiency;
		
		private double _Buildpower;
		
		private double _ResearchIncome;
		
		private double _BuildpowerUsed;
		
		private bool _CanBeRenamed;
		
		private bool _CanMapBeChanged;
		
		private string _MapName;
		
		public CelestialObject()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelestialObjectID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CelestialObjectID
		{
			get
			{
				return this._CelestialObjectID;
			}
			set
			{
				if ((this._CelestialObjectID != value))
				{
					this._CelestialObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelestialObjectType", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CelestialObjectType
		{
			get
			{
				return this._CelestialObjectType;
			}
			set
			{
				if ((this._CelestialObjectType != value))
				{
					this._CelestialObjectType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrbitSpeed", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public double OrbitSpeed
		{
			get
			{
				return this._OrbitSpeed;
			}
			set
			{
				if ((this._OrbitSpeed != value))
				{
					this._OrbitSpeed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrbitDistance", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public double OrbitDistance
		{
			get
			{
				return this._OrbitDistance;
			}
			set
			{
				if ((this._OrbitDistance != value))
				{
					this._OrbitDistance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrbitInitialAngle", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public double OrbitInitialAngle
		{
			get
			{
				return this._OrbitInitialAngle;
			}
			set
			{
				if ((this._OrbitInitialAngle != value))
				{
					this._OrbitInitialAngle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentObject", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> ParentObject
		{
			get
			{
				return this._ParentObject;
			}
			set
			{
				if ((this._ParentObject != value))
				{
					this._ParentObject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public double X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this._X = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public double Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this._Y = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalDensity", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public double MetalDensity
		{
			get
			{
				return this._MetalDensity;
			}
			set
			{
				if ((this._MetalDensity != value))
				{
					this._MetalDensity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodDensity", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public double FoodDensity
		{
			get
			{
				return this._FoodDensity;
			}
			set
			{
				if ((this._FoodDensity != value))
				{
					this._FoodDensity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantiumDensity", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public double QuantiumDensity
		{
			get
			{
				return this._QuantiumDensity;
			}
			set
			{
				if ((this._QuantiumDensity != value))
				{
					this._QuantiumDensity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DarkMatterDensity", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public double DarkMatterDensity
		{
			get
			{
				return this._DarkMatterDensity;
			}
			set
			{
				if ((this._DarkMatterDensity != value))
				{
					this._DarkMatterDensity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public int Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<int> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStargate", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public bool IsStargate
		{
			get
			{
				return this._IsStargate;
			}
			set
			{
				if ((this._IsStargate != value))
				{
					this._IsStargate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public int Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this._Population = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitpointsDamaged", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public double HitpointsDamaged
		{
			get
			{
				return this._HitpointsDamaged;
			}
			set
			{
				if ((this._HitpointsDamaged != value))
				{
					this._HitpointsDamaged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConnected", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public bool IsConnected
		{
			get
			{
				return this._IsConnected;
			}
			set
			{
				if ((this._IsConnected != value))
				{
					this._IsConnected = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPopulation", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public int MaxPopulation
		{
			get
			{
				return this._MaxPopulation;
			}
			set
			{
				if ((this._MaxPopulation != value))
				{
					this._MaxPopulation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalIncome", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public double MetalIncome
		{
			get
			{
				return this._MetalIncome;
			}
			set
			{
				if ((this._MetalIncome != value))
				{
					this._MetalIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodIncome", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public double FoodIncome
		{
			get
			{
				return this._FoodIncome;
			}
			set
			{
				if ((this._FoodIncome != value))
				{
					this._FoodIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantiumIncome", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public double QuantiumIncome
		{
			get
			{
				return this._QuantiumIncome;
			}
			set
			{
				if ((this._QuantiumIncome != value))
				{
					this._QuantiumIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DarkMatterIncome", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public double DarkMatterIncome
		{
			get
			{
				return this._DarkMatterIncome;
			}
			set
			{
				if ((this._DarkMatterIncome != value))
				{
					this._DarkMatterIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Efficiency", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public double Efficiency
		{
			get
			{
				return this._Efficiency;
			}
			set
			{
				if ((this._Efficiency != value))
				{
					this._Efficiency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buildpower", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public double Buildpower
		{
			get
			{
				return this._Buildpower;
			}
			set
			{
				if ((this._Buildpower != value))
				{
					this._Buildpower = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchIncome", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public double ResearchIncome
		{
			get
			{
				return this._ResearchIncome;
			}
			set
			{
				if ((this._ResearchIncome != value))
				{
					this._ResearchIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildpowerUsed", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public double BuildpowerUsed
		{
			get
			{
				return this._BuildpowerUsed;
			}
			set
			{
				if ((this._BuildpowerUsed != value))
				{
					this._BuildpowerUsed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBeRenamed", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public bool CanBeRenamed
		{
			get
			{
				return this._CanBeRenamed;
			}
			set
			{
				if ((this._CanBeRenamed != value))
				{
					this._CanBeRenamed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanMapBeChanged", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public bool CanMapBeChanged
		{
			get
			{
				return this._CanMapBeChanged;
			}
			set
			{
				if ((this._CanMapBeChanged != value))
				{
					this._CanMapBeChanged = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapName", DbType="VarChar(150)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public string MapName
		{
			get
			{
				return this._MapName;
			}
			set
			{
				if ((this._MapName != value))
				{
					this._MapName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CelestialObjectEvent")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CelestialObjectEvent
	{
		
		private int _ObjectID;
		
		private int _EventID;
		
		public CelestialObjectEvent()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this._ObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this._EventID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CelestialObjectLink")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CelestialObjectLink
	{
		
		private int _FirstObjectID;
		
		private int _SecondObjectID;
		
		public CelestialObjectLink()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstObjectID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FirstObjectID
		{
			get
			{
				return this._FirstObjectID;
			}
			set
			{
				if ((this._FirstObjectID != value))
				{
					this._FirstObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondObjectID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SecondObjectID
		{
			get
			{
				return this._SecondObjectID;
			}
			set
			{
				if ((this._SecondObjectID != value))
				{
					this._SecondObjectID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CelestialObjectShip")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CelestialObjectShip
	{
		
		private int _CelestialObjectID;
		
		private int _ShipTypeID;
		
		private int _Count;
		
		public CelestialObjectShip()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelestialObjectID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CelestialObjectID
		{
			get
			{
				return this._CelestialObjectID;
			}
			set
			{
				if ((this._CelestialObjectID != value))
				{
					this._CelestialObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ShipTypeID
		{
			get
			{
				return this._ShipTypeID;
			}
			set
			{
				if ((this._ShipTypeID != value))
				{
					this._ShipTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CelestialObjectStructure")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CelestialObjectStructure
	{
		
		private int _CelestialObjectID;
		
		private int _StructureTypeID;
		
		private int _Count;
		
		public CelestialObjectStructure()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelestialObjectID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CelestialObjectID
		{
			get
			{
				return this._CelestialObjectID;
			}
			set
			{
				if ((this._CelestialObjectID != value))
				{
					this._CelestialObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int StructureTypeID
		{
			get
			{
				return this._StructureTypeID;
			}
			set
			{
				if ((this._StructureTypeID != value))
				{
					this._StructureTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coalition")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Coalition
	{
		
		private int _CoalitionID;
		
		private string _Name;
		
		public Coalition()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoalitionID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CoalitionID
		{
			get
			{
				return this._CoalitionID;
			}
			set
			{
				if ((this._CoalitionID != value))
				{
					this._CoalitionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Config")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Config
	{
		
		private System.Nullable<System.DateTime> _Started;
		
		private int _CombatTurn;
		
		private System.Nullable<System.DateTime> _StartOn;
		
		private int _GameID;
		
		private int _SecondsPerTurn;
		
		private int _ResourceTick;
		
		private int _PopulationTick;
		
		private int _WarpDistance;
		
		private int _DirtySecond;
		
		private System.Nullable<System.DateTime> _TurnStarted;
		
		public Config()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<System.DateTime> Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this._Started = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CombatTurn", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CombatTurn
		{
			get
			{
				return this._CombatTurn;
			}
			set
			{
				if ((this._CombatTurn != value))
				{
					this._CombatTurn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartOn", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> StartOn
		{
			get
			{
				return this._StartOn;
			}
			set
			{
				if ((this._StartOn != value))
				{
					this._StartOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int GameID
		{
			get
			{
				return this._GameID;
			}
			set
			{
				if ((this._GameID != value))
				{
					this._GameID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondsPerTurn", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int SecondsPerTurn
		{
			get
			{
				return this._SecondsPerTurn;
			}
			set
			{
				if ((this._SecondsPerTurn != value))
				{
					this._SecondsPerTurn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceTick", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int ResourceTick
		{
			get
			{
				return this._ResourceTick;
			}
			set
			{
				if ((this._ResourceTick != value))
				{
					this._ResourceTick = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PopulationTick", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int PopulationTick
		{
			get
			{
				return this._PopulationTick;
			}
			set
			{
				if ((this._PopulationTick != value))
				{
					this._PopulationTick = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarpDistance", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int WarpDistance
		{
			get
			{
				return this._WarpDistance;
			}
			set
			{
				if ((this._WarpDistance != value))
				{
					this._WarpDistance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirtySecond", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int DirtySecond
		{
			get
			{
				return this._DirtySecond;
			}
			set
			{
				if ((this._DirtySecond != value))
				{
					this._DirtySecond = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnStarted", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> TurnStarted
		{
			get
			{
				return this._TurnStarted;
			}
			set
			{
				if ((this._TurnStarted != value))
				{
					this._TurnStarted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Event
	{
		
		private int _EventID;
		
		private string _Text;
		
		private int _EventType;
		
		private System.DateTime _Time;
		
		private int _BattleTurn;
		
		public Event()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this._EventID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this._Text = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this._EventType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BattleTurn", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int BattleTurn
		{
			get
			{
				return this._BattleTurn;
			}
			set
			{
				if ((this._BattleTurn != value))
				{
					this._BattleTurn = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fleet")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Fleet
	{
		
		private int _FleetID;
		
		private System.Nullable<int> _OwnerID;
		
		private int _Tactics;
		
		private int _TransitID;
		
		private string _CustomName;
		
		private bool _CanPresidentControl;
		
		public Fleet()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FleetID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FleetID
		{
			get
			{
				return this._FleetID;
			}
			set
			{
				if ((this._FleetID != value))
				{
					this._FleetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tactics", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Tactics
		{
			get
			{
				return this._Tactics;
			}
			set
			{
				if ((this._Tactics != value))
				{
					this._Tactics = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int TransitID
		{
			get
			{
				return this._TransitID;
			}
			set
			{
				if ((this._TransitID != value))
				{
					this._TransitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomName", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CustomName
		{
			get
			{
				return this._CustomName;
			}
			set
			{
				if ((this._CustomName != value))
				{
					this._CustomName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPresidentControl", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool CanPresidentControl
		{
			get
			{
				return this._CanPresidentControl;
			}
			set
			{
				if ((this._CanPresidentControl != value))
				{
					this._CanPresidentControl = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FleetEvent")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FleetEvent
	{
		
		private int _FleetID;
		
		private int _EventID;
		
		public FleetEvent()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FleetID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FleetID
		{
			get
			{
				return this._FleetID;
			}
			set
			{
				if ((this._FleetID != value))
				{
					this._FleetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this._EventID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FleetShip")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FleetShip
	{
		
		private int _FleetID;
		
		private int _ShipTypeID;
		
		private int _Count;
		
		public FleetShip()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FleetID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FleetID
		{
			get
			{
				return this._FleetID;
			}
			set
			{
				if ((this._FleetID != value))
				{
					this._FleetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ShipTypeID
		{
			get
			{
				return this._ShipTypeID;
			}
			set
			{
				if ((this._ShipTypeID != value))
				{
					this._ShipTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mission")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Mission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MissionID;
		
		private string _Name;
		
		private string _Mod;
		
		private string _Map;
		
		private System.Data.Linq.Link<System.Data.Linq.Binary> _Mutator;
		
		private System.Data.Linq.Link<System.Data.Linq.Binary> _Image;
		
		private string _Description;
		
		private System.DateTime _CreatedTime;
		
		private System.DateTime _ModifiedTime;
		
		private string _ScoringMethod;
		
		private string _TopScoreLine;
		
		private string _MissionEditorVersion;
		
		private string _SpringVersion;
		
		private int _Revision;
		
		private System.Data.Linq.Link<string> _Script;
		
		private string _TokenCondition;
		
		private System.Nullable<int> _CampaignID;
		
		private int _AccountID;
		
		private string _ModOptions;
		
		private string _ModRapidTag;
		
		private int _MinHumans;
		
		private int _MaxHumans;
		
		private bool _IsScriptMission;
		
		private int _MissionRunCount;
		
		private bool _IsDeleted;
		
		private string _ManualDependencies;
		
		private System.Nullable<float> _Rating;
		
		private System.Nullable<float> _Difficulty;
		
		private bool _IsCoop;
		
		private int _ForumThreadID;
		
		private System.Nullable<float> _FeaturedOrder;
		
		private EntityRef<Mission> _ChildMission;
		
		private EntityRef<Resource> _Resources;
		
		private EntitySet<MissionScore> _MissionScores;
		
		private EntitySet<Rating> _Ratings;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Mission> _ParentMission;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMissionIDChanging(int value);
    partial void OnMissionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModChanging(string value);
    partial void OnModChanged();
    partial void OnMapChanging(string value);
    partial void OnMapChanged();
    partial void OnMutatorChanging(System.Data.Linq.Binary value);
    partial void OnMutatorChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedTimeChanging(System.DateTime value);
    partial void OnCreatedTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    partial void OnScoringMethodChanging(string value);
    partial void OnScoringMethodChanged();
    partial void OnTopScoreLineChanging(string value);
    partial void OnTopScoreLineChanged();
    partial void OnMissionEditorVersionChanging(string value);
    partial void OnMissionEditorVersionChanged();
    partial void OnSpringVersionChanging(string value);
    partial void OnSpringVersionChanged();
    partial void OnRevisionChanging(int value);
    partial void OnRevisionChanged();
    partial void OnScriptChanging(string value);
    partial void OnScriptChanged();
    partial void OnTokenConditionChanging(string value);
    partial void OnTokenConditionChanged();
    partial void OnCampaignIDChanging(System.Nullable<int> value);
    partial void OnCampaignIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnModOptionsChanging(string value);
    partial void OnModOptionsChanged();
    partial void OnModRapidTagChanging(string value);
    partial void OnModRapidTagChanged();
    partial void OnMinHumansChanging(int value);
    partial void OnMinHumansChanged();
    partial void OnMaxHumansChanging(int value);
    partial void OnMaxHumansChanged();
    partial void OnIsScriptMissionChanging(bool value);
    partial void OnIsScriptMissionChanged();
    partial void OnMissionRunCountChanging(int value);
    partial void OnMissionRunCountChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnManualDependenciesChanging(string value);
    partial void OnManualDependenciesChanged();
    partial void OnRatingChanging(System.Nullable<float> value);
    partial void OnRatingChanged();
    partial void OnDifficultyChanging(System.Nullable<float> value);
    partial void OnDifficultyChanged();
    partial void OnIsCoopChanging(bool value);
    partial void OnIsCoopChanged();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    partial void OnFeaturedOrderChanging(System.Nullable<float> value);
    partial void OnFeaturedOrderChanged();
    #endregion
		
		public Mission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._ParentMission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mod", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Mod
		{
			get
			{
				return this._Mod;
			}
			set
			{
				if ((this._Mod != value))
				{
					this.OnModChanging(value);
					this.SendPropertyChanging();
					this._Mod = value;
					this.SendPropertyChanged("Mod");
					this.OnModChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Map", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Map
		{
			get
			{
				return this._Map;
			}
			set
			{
				if ((this._Map != value))
				{
					this.OnMapChanging(value);
					this.SendPropertyChanging();
					this._Map = value;
					this.SendPropertyChanged("Map");
					this.OnMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mutator", DbType="varbinary(max)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Data.Linq.Binary Mutator
		{
			get
			{
				return this._Mutator.Value;
			}
			set
			{
				if ((this._Mutator.Value != value))
				{
					this.OnMutatorChanging(value);
					this.SendPropertyChanging();
					this._Mutator.Value = value;
					this.SendPropertyChanged("Mutator");
					this.OnMutatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="varbinary(max) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image.Value;
			}
			set
			{
				if ((this._Image.Value != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image.Value = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedTime", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime CreatedTime
		{
			get
			{
				return this._CreatedTime;
			}
			set
			{
				if ((this._CreatedTime != value))
				{
					this.OnCreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedTime = value;
					this.SendPropertyChanged("CreatedTime");
					this.OnCreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoringMethod", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string ScoringMethod
		{
			get
			{
				return this._ScoringMethod;
			}
			set
			{
				if ((this._ScoringMethod != value))
				{
					this.OnScoringMethodChanging(value);
					this.SendPropertyChanging();
					this._ScoringMethod = value;
					this.SendPropertyChanged("ScoringMethod");
					this.OnScoringMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopScoreLine", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string TopScoreLine
		{
			get
			{
				return this._TopScoreLine;
			}
			set
			{
				if ((this._TopScoreLine != value))
				{
					this.OnTopScoreLineChanging(value);
					this.SendPropertyChanging();
					this._TopScoreLine = value;
					this.SendPropertyChanged("TopScoreLine");
					this.OnTopScoreLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionEditorVersion", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string MissionEditorVersion
		{
			get
			{
				return this._MissionEditorVersion;
			}
			set
			{
				if ((this._MissionEditorVersion != value))
				{
					this.OnMissionEditorVersionChanging(value);
					this.SendPropertyChanging();
					this._MissionEditorVersion = value;
					this.SendPropertyChanged("MissionEditorVersion");
					this.OnMissionEditorVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringVersion", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string SpringVersion
		{
			get
			{
				return this._SpringVersion;
			}
			set
			{
				if ((this._SpringVersion != value))
				{
					this.OnSpringVersionChanging(value);
					this.SendPropertyChanging();
					this._SpringVersion = value;
					this.SendPropertyChanged("SpringVersion");
					this.OnSpringVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public int Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Script", DbType="nvarchar(max) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string Script
		{
			get
			{
				return this._Script.Value;
			}
			set
			{
				if ((this._Script.Value != value))
				{
					this.OnScriptChanging(value);
					this.SendPropertyChanging();
					this._Script.Value = value;
					this.SendPropertyChanged("Script");
					this.OnScriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenCondition", DbType="varchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string TokenCondition
		{
			get
			{
				return this._TokenCondition;
			}
			set
			{
				if ((this._TokenCondition != value))
				{
					this.OnTokenConditionChanging(value);
					this.SendPropertyChanging();
					this._TokenCondition = value;
					this.SendPropertyChanged("TokenCondition");
					this.OnTokenConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModOptions", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string ModOptions
		{
			get
			{
				return this._ModOptions;
			}
			set
			{
				if ((this._ModOptions != value))
				{
					this.OnModOptionsChanging(value);
					this.SendPropertyChanging();
					this._ModOptions = value;
					this.SendPropertyChanged("ModOptions");
					this.OnModOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModRapidTag", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string ModRapidTag
		{
			get
			{
				return this._ModRapidTag;
			}
			set
			{
				if ((this._ModRapidTag != value))
				{
					this.OnModRapidTagChanging(value);
					this.SendPropertyChanging();
					this._ModRapidTag = value;
					this.SendPropertyChanged("ModRapidTag");
					this.OnModRapidTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinHumans", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public int MinHumans
		{
			get
			{
				return this._MinHumans;
			}
			set
			{
				if ((this._MinHumans != value))
				{
					this.OnMinHumansChanging(value);
					this.SendPropertyChanging();
					this._MinHumans = value;
					this.SendPropertyChanged("MinHumans");
					this.OnMinHumansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxHumans", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public int MaxHumans
		{
			get
			{
				return this._MaxHumans;
			}
			set
			{
				if ((this._MaxHumans != value))
				{
					this.OnMaxHumansChanging(value);
					this.SendPropertyChanging();
					this._MaxHumans = value;
					this.SendPropertyChanged("MaxHumans");
					this.OnMaxHumansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScriptMission", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public bool IsScriptMission
		{
			get
			{
				return this._IsScriptMission;
			}
			set
			{
				if ((this._IsScriptMission != value))
				{
					this.OnIsScriptMissionChanging(value);
					this.SendPropertyChanging();
					this._IsScriptMission = value;
					this.SendPropertyChanged("IsScriptMission");
					this.OnIsScriptMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionRunCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public int MissionRunCount
		{
			get
			{
				return this._MissionRunCount;
			}
			set
			{
				if ((this._MissionRunCount != value))
				{
					this.OnMissionRunCountChanging(value);
					this.SendPropertyChanging();
					this._MissionRunCount = value;
					this.SendPropertyChanged("MissionRunCount");
					this.OnMissionRunCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualDependencies", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string ManualDependencies
		{
			get
			{
				return this._ManualDependencies;
			}
			set
			{
				if ((this._ManualDependencies != value))
				{
					this.OnManualDependenciesChanging(value);
					this.SendPropertyChanging();
					this._ManualDependencies = value;
					this.SendPropertyChanged("ManualDependencies");
					this.OnManualDependenciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="real", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<float> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difficulty", DbType="real", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<float> Difficulty
		{
			get
			{
				return this._Difficulty;
			}
			set
			{
				if ((this._Difficulty != value))
				{
					this.OnDifficultyChanging(value);
					this.SendPropertyChanging();
					this._Difficulty = value;
					this.SendPropertyChanged("Difficulty");
					this.OnDifficultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCoop", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public bool IsCoop
		{
			get
			{
				return this._IsCoop;
			}
			set
			{
				if ((this._IsCoop != value))
				{
					this.OnIsCoopChanging(value);
					this.SendPropertyChanging();
					this._IsCoop = value;
					this.SendPropertyChanged("IsCoop");
					this.OnIsCoopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeaturedOrder", DbType="real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.Nullable<float> FeaturedOrder
		{
			get
			{
				return this._FeaturedOrder;
			}
			set
			{
				if ((this._FeaturedOrder != value))
				{
					this.OnFeaturedOrderChanging(value);
					this.SendPropertyChanging();
					this._FeaturedOrder = value;
					this.SendPropertyChanged("FeaturedOrder");
					this.OnFeaturedOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Mission", Storage="_ChildMission", ThisKey="MissionID", OtherKey="MissionID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public Mission ChildMission
		{
			get
			{
				if ((this.serializing 
							&& (this._ChildMission.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._ChildMission.Entity;
			}
			set
			{
				Mission previousValue = this._ChildMission.Entity;
				if (((previousValue != value) 
							|| (this._ChildMission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChildMission.Entity = null;
						previousValue.ParentMission = null;
					}
					this._ChildMission.Entity = value;
					if ((value != null))
					{
						value.ParentMission = this;
					}
					this.SendPropertyChanged("ChildMission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Resource", Storage="_Resources", ThisKey="MissionID", OtherKey="MissionID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public Resource Resources
		{
			get
			{
				if ((this.serializing 
							&& (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Resources.Entity;
			}
			set
			{
				Resource previousValue = this._Resources.Entity;
				if (((previousValue != value) 
							|| (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resources.Entity = null;
						previousValue.Mission = null;
					}
					this._Resources.Entity = value;
					if ((value != null))
					{
						value.Mission = this;
					}
					this.SendPropertyChanged("Resources");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_MissionScore", Storage="_MissionScores", ThisKey="MissionID", OtherKey="MissionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public EntitySet<MissionScore> MissionScores
		{
			get
			{
				if ((this.serializing 
							&& (this._MissionScores.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MissionScores;
			}
			set
			{
				this._MissionScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Rating", Storage="_Ratings", ThisKey="MissionID", OtherKey="MissionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public EntitySet<Rating> Ratings
		{
			get
			{
				if ((this.serializing 
							&& (this._Ratings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Ratings;
			}
			set
			{
				this._Ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Mission", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Missions.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Missions.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Mission", Storage="_ParentMission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true)]
		public Mission ParentMission
		{
			get
			{
				return this._ParentMission.Entity;
			}
			set
			{
				Mission previousValue = this._ParentMission.Entity;
				if (((previousValue != value) 
							|| (this._ParentMission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentMission.Entity = null;
						previousValue.ChildMission = null;
					}
					this._ParentMission.Entity = value;
					if ((value != null))
					{
						value.ChildMission = this;
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(int);
					}
					this.SendPropertyChanged("ParentMission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Mission", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.Missions = null;
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.Missions = this;
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(int);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MissionScores(MissionScore entity)
		{
			this.SendPropertyChanging();
			entity.Mission = this;
		}
		
		private void detach_MissionScores(MissionScore entity)
		{
			this.SendPropertyChanging();
			entity.Mission = null;
		}
		
		private void attach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Mission = this;
		}
		
		private void detach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Mission = null;
		}
		
		private void Initialize()
		{
			this._ChildMission = default(EntityRef<Mission>);
			this._Resources = default(EntityRef<Resource>);
			this._MissionScores = new EntitySet<MissionScore>(new Action<MissionScore>(this.attach_MissionScores), new Action<MissionScore>(this.detach_MissionScores));
			this._Ratings = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings), new Action<Rating>(this.detach_Ratings));
			this._Account = default(EntityRef<Account>);
			this._ParentMission = default(EntityRef<Mission>);
			this._ForumThread = default(EntityRef<ForumThread>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MothershipStructure")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MothershipStructure
	{
		
		private int _PlayerID;
		
		private int _StructureTypeID;
		
		private int _Count;
		
		public MothershipStructure()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					this._PlayerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int StructureTypeID
		{
			get
			{
				return this._StructureTypeID;
			}
			set
			{
				if ((this._StructureTypeID != value))
				{
					this._StructureTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Player")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Player
	{
		
		private int _PlayerID;
		
		private int _SystemID;
		
		private int _SpringAccountID;
		
		private bool _IsActive;
		
		private string _MothershipName;
		
		private System.Nullable<int> _TransitID;
		
		private double _Credits;
		
		private double _Metal;
		
		private double _Food;
		
		private double _MetalIncome;
		
		private double _FoodIncome;
		
		private int _Population;
		
		private int _PopulationCapacity;
		
		private double _Quantium;
		
		private double _QuantiumIncome;
		
		private double _DarkMatter;
		
		private double _DarkMatterIncome;
		
		private int _XP;
		
		private int _Level;
		
		private double _ResearchIncome;
		
		private double _ResearchPoints;
		
		private System.Nullable<int> _HomeworldID;
		
		private System.Nullable<int> _PresidentVote;
		
		public Player()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					this._PlayerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SystemID
		{
			get
			{
				return this._SystemID;
			}
			set
			{
				if ((this._SystemID != value))
				{
					this._SystemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringAccountID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SpringAccountID
		{
			get
			{
				return this._SpringAccountID;
			}
			set
			{
				if ((this._SpringAccountID != value))
				{
					this._SpringAccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MothershipName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string MothershipName
		{
			get
			{
				return this._MothershipName;
			}
			set
			{
				if ((this._MothershipName != value))
				{
					this._MothershipName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> TransitID
		{
			get
			{
				return this._TransitID;
			}
			set
			{
				if ((this._TransitID != value))
				{
					this._TransitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credits", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public double Credits
		{
			get
			{
				return this._Credits;
			}
			set
			{
				if ((this._Credits != value))
				{
					this._Credits = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metal", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public double Metal
		{
			get
			{
				return this._Metal;
			}
			set
			{
				if ((this._Metal != value))
				{
					this._Metal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Food", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public double Food
		{
			get
			{
				return this._Food;
			}
			set
			{
				if ((this._Food != value))
				{
					this._Food = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalIncome", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public double MetalIncome
		{
			get
			{
				return this._MetalIncome;
			}
			set
			{
				if ((this._MetalIncome != value))
				{
					this._MetalIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodIncome", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public double FoodIncome
		{
			get
			{
				return this._FoodIncome;
			}
			set
			{
				if ((this._FoodIncome != value))
				{
					this._FoodIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public int Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this._Population = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PopulationCapacity", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public int PopulationCapacity
		{
			get
			{
				return this._PopulationCapacity;
			}
			set
			{
				if ((this._PopulationCapacity != value))
				{
					this._PopulationCapacity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantium", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public double Quantium
		{
			get
			{
				return this._Quantium;
			}
			set
			{
				if ((this._Quantium != value))
				{
					this._Quantium = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantiumIncome", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public double QuantiumIncome
		{
			get
			{
				return this._QuantiumIncome;
			}
			set
			{
				if ((this._QuantiumIncome != value))
				{
					this._QuantiumIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DarkMatter", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public double DarkMatter
		{
			get
			{
				return this._DarkMatter;
			}
			set
			{
				if ((this._DarkMatter != value))
				{
					this._DarkMatter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DarkMatterIncome", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public double DarkMatterIncome
		{
			get
			{
				return this._DarkMatterIncome;
			}
			set
			{
				if ((this._DarkMatterIncome != value))
				{
					this._DarkMatterIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XP", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public int XP
		{
			get
			{
				return this._XP;
			}
			set
			{
				if ((this._XP != value))
				{
					this._XP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this._Level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchIncome", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public double ResearchIncome
		{
			get
			{
				return this._ResearchIncome;
			}
			set
			{
				if ((this._ResearchIncome != value))
				{
					this._ResearchIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchPoints", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public double ResearchPoints
		{
			get
			{
				return this._ResearchPoints;
			}
			set
			{
				if ((this._ResearchPoints != value))
				{
					this._ResearchPoints = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeworldID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<int> HomeworldID
		{
			get
			{
				return this._HomeworldID;
			}
			set
			{
				if ((this._HomeworldID != value))
				{
					this._HomeworldID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresidentVote", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<int> PresidentVote
		{
			get
			{
				return this._PresidentVote;
			}
			set
			{
				if ((this._PresidentVote != value))
				{
					this._PresidentVote = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlayerEvent")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlayerEvent
	{
		
		private int _PlayerID;
		
		private int _EventID;
		
		public PlayerEvent()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					this._PlayerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this._EventID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlayerTechSpent")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlayerTechSpent
	{
		
		private int _PlayerID;
		
		private int _TechID;
		
		private int _SpentResearch;
		
		private int _SpentQuantium;
		
		public PlayerTechSpent()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					this._PlayerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int TechID
		{
			get
			{
				return this._TechID;
			}
			set
			{
				if ((this._TechID != value))
				{
					this._TechID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpentResearch", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SpentResearch
		{
			get
			{
				return this._SpentResearch;
			}
			set
			{
				if ((this._SpentResearch != value))
				{
					this._SpentResearch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpentQuantium", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int SpentQuantium
		{
			get
			{
				return this._SpentQuantium;
			}
			set
			{
				if ((this._SpentQuantium != value))
				{
					this._SpentQuantium = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PopulationTransport")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PopulationTransport
	{
		
		private int _PopulationTransportID;
		
		private int _OwnerID;
		
		private int _TransitID;
		
		private int _Count;
		
		public PopulationTransport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PopulationTransportID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PopulationTransportID
		{
			get
			{
				return this._PopulationTransportID;
			}
			set
			{
				if ((this._PopulationTransportID != value))
				{
					this._PopulationTransportID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int TransitID
		{
			get
			{
				return this._TransitID;
			}
			set
			{
				if ((this._TransitID != value))
				{
					this._TransitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Score")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Score
	{
		
		private int _MissionID;
		
		private string _PlayerName;
		
		private int _Score1;
		
		private int _TimeSeconds;
		
		private string _IP;
		
		public Score()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					this._MissionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string PlayerName
		{
			get
			{
				return this._PlayerName;
			}
			set
			{
				if ((this._PlayerName != value))
				{
					this._PlayerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Score", Storage="_Score1", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Score1
		{
			get
			{
				return this._Score1;
			}
			set
			{
				if ((this._Score1 != value))
				{
					this._Score1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSeconds", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int TimeSeconds
		{
			get
			{
				return this._TimeSeconds;
			}
			set
			{
				if ((this._TimeSeconds != value))
				{
					this._TimeSeconds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this._IP = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShipType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ShipType
	{
		
		private int _ShipTypeID;
		
		private int _Class;
		
		private int _LaserDamage;
		
		private int _MissileDamage;
		
		private int _BombDamage;
		
		private string _Name;
		
		private string _Shortcut;
		
		private System.Nullable<int> _NeedsTechID;
		
		private int _MetalCost;
		
		private int _Hitpoints;
		
		private int _QuantiumCost;
		
		private int _DarkMetalCost;
		
		private bool _IsInterdictor;
		
		private bool _IsStealthy;
		
		public ShipType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ShipTypeID
		{
			get
			{
				return this._ShipTypeID;
			}
			set
			{
				if ((this._ShipTypeID != value))
				{
					this._ShipTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this._Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaserDamage", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int LaserDamage
		{
			get
			{
				return this._LaserDamage;
			}
			set
			{
				if ((this._LaserDamage != value))
				{
					this._LaserDamage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissileDamage", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int MissileDamage
		{
			get
			{
				return this._MissileDamage;
			}
			set
			{
				if ((this._MissileDamage != value))
				{
					this._MissileDamage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BombDamage", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int BombDamage
		{
			get
			{
				return this._BombDamage;
			}
			set
			{
				if ((this._BombDamage != value))
				{
					this._BombDamage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortcut", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Shortcut
		{
			get
			{
				return this._Shortcut;
			}
			set
			{
				if ((this._Shortcut != value))
				{
					this._Shortcut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsTechID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> NeedsTechID
		{
			get
			{
				return this._NeedsTechID;
			}
			set
			{
				if ((this._NeedsTechID != value))
				{
					this._NeedsTechID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalCost", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int MetalCost
		{
			get
			{
				return this._MetalCost;
			}
			set
			{
				if ((this._MetalCost != value))
				{
					this._MetalCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hitpoints", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int Hitpoints
		{
			get
			{
				return this._Hitpoints;
			}
			set
			{
				if ((this._Hitpoints != value))
				{
					this._Hitpoints = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantiumCost", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public int QuantiumCost
		{
			get
			{
				return this._QuantiumCost;
			}
			set
			{
				if ((this._QuantiumCost != value))
				{
					this._QuantiumCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DarkMetalCost", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public int DarkMetalCost
		{
			get
			{
				return this._DarkMetalCost;
			}
			set
			{
				if ((this._DarkMetalCost != value))
				{
					this._DarkMetalCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInterdictor", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public bool IsInterdictor
		{
			get
			{
				return this._IsInterdictor;
			}
			set
			{
				if ((this._IsInterdictor != value))
				{
					this._IsInterdictor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStealthy", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsStealthy
		{
			get
			{
				return this._IsStealthy;
			}
			set
			{
				if ((this._IsStealthy != value))
				{
					this._IsStealthy = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StarSystem")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StarSystem
	{
		
		private int _SystemID;
		
		private int _HomeStarID;
		
		private string _Name;
		
		private System.Nullable<int> _PresidentID;
		
		private System.Nullable<int> _CoalitionID;
		
		public StarSystem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SystemID
		{
			get
			{
				return this._SystemID;
			}
			set
			{
				if ((this._SystemID != value))
				{
					this._SystemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeStarID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int HomeStarID
		{
			get
			{
				return this._HomeStarID;
			}
			set
			{
				if ((this._HomeStarID != value))
				{
					this._HomeStarID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresidentID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> PresidentID
		{
			get
			{
				return this._PresidentID;
			}
			set
			{
				if ((this._PresidentID != value))
				{
					this._PresidentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoalitionID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> CoalitionID
		{
			get
			{
				return this._CoalitionID;
			}
			set
			{
				if ((this._CoalitionID != value))
				{
					this._CoalitionID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StarSystemTech")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StarSystemTech
	{
		
		private int _StarSystemID;
		
		private int _TechID;
		
		public StarSystemTech()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StarSystemID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int StarSystemID
		{
			get
			{
				return this._StarSystemID;
			}
			set
			{
				if ((this._StarSystemID != value))
				{
					this._StarSystemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int TechID
		{
			get
			{
				return this._TechID;
			}
			set
			{
				if ((this._TechID != value))
				{
					this._TechID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StructureType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StructureType
	{
		
		private int _StructureTypeID;
		
		private string _Name;
		
		private int _CostMetal;
		
		private int _MakesMetal;
		
		private int _MakesFood;
		
		private int _BuildsMetal;
		
		private int _MakesPeople;
		
		private int _NeedsPeople;
		
		private int _StoresPeople;
		
		private System.Nullable<int> _NeedsTechID;
		
		private int _HitPoints;
		
		private int _MakesResearch;
		
		private int _LaserDamage;
		
		private int _MissileDamage;
		
		public StructureType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int StructureTypeID
		{
			get
			{
				return this._StructureTypeID;
			}
			set
			{
				if ((this._StructureTypeID != value))
				{
					this._StructureTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostMetal", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CostMetal
		{
			get
			{
				return this._CostMetal;
			}
			set
			{
				if ((this._CostMetal != value))
				{
					this._CostMetal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakesMetal", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int MakesMetal
		{
			get
			{
				return this._MakesMetal;
			}
			set
			{
				if ((this._MakesMetal != value))
				{
					this._MakesMetal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakesFood", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int MakesFood
		{
			get
			{
				return this._MakesFood;
			}
			set
			{
				if ((this._MakesFood != value))
				{
					this._MakesFood = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildsMetal", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int BuildsMetal
		{
			get
			{
				return this._BuildsMetal;
			}
			set
			{
				if ((this._BuildsMetal != value))
				{
					this._BuildsMetal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakesPeople", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int MakesPeople
		{
			get
			{
				return this._MakesPeople;
			}
			set
			{
				if ((this._MakesPeople != value))
				{
					this._MakesPeople = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsPeople", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int NeedsPeople
		{
			get
			{
				return this._NeedsPeople;
			}
			set
			{
				if ((this._NeedsPeople != value))
				{
					this._NeedsPeople = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoresPeople", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int StoresPeople
		{
			get
			{
				return this._StoresPeople;
			}
			set
			{
				if ((this._StoresPeople != value))
				{
					this._StoresPeople = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsTechID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> NeedsTechID
		{
			get
			{
				return this._NeedsTechID;
			}
			set
			{
				if ((this._NeedsTechID != value))
				{
					this._NeedsTechID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitPoints", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public int HitPoints
		{
			get
			{
				return this._HitPoints;
			}
			set
			{
				if ((this._HitPoints != value))
				{
					this._HitPoints = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakesResearch", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public int MakesResearch
		{
			get
			{
				return this._MakesResearch;
			}
			set
			{
				if ((this._MakesResearch != value))
				{
					this._MakesResearch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaserDamage", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public int LaserDamage
		{
			get
			{
				return this._LaserDamage;
			}
			set
			{
				if ((this._LaserDamage != value))
				{
					this._LaserDamage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissileDamage", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public int MissileDamage
		{
			get
			{
				return this._MissileDamage;
			}
			set
			{
				if ((this._MissileDamage != value))
				{
					this._MissileDamage = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tech")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Tech
	{
		
		private int _TechID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _NeedsTechID;
		
		private int _CostResearch;
		
		private int _CostQuantium;
		
		public Tech()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TechID
		{
			get
			{
				return this._TechID;
			}
			set
			{
				if ((this._TechID != value))
				{
					this._TechID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsTechID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> NeedsTechID
		{
			get
			{
				return this._NeedsTechID;
			}
			set
			{
				if ((this._NeedsTechID != value))
				{
					this._NeedsTechID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostResearch", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CostResearch
		{
			get
			{
				return this._CostResearch;
			}
			set
			{
				if ((this._CostResearch != value))
				{
					this._CostResearch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostQuantium", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int CostQuantium
		{
			get
			{
				return this._CostQuantium;
			}
			set
			{
				if ((this._CostQuantium != value))
				{
					this._CostQuantium = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.DateTime _FirstLogin;
		
		private System.DateTime _LastLogin;
		
		private string _Aliases;
		
		private float _Elo;
		
		private float _EloWeight;
		
		private bool _IsLobbyAdministrator;
		
		private bool _IsBot;
		
		private string _Password;
		
		private string _Country;
		
		private int _LobbyTimeRank;
		
		private int _MissionRunCount;
		
		private bool _IsZeroKAdmin;
		
		private int _XP;
		
		private int _Level;
		
		private EntitySet<Mission> _Missions;
		
		private EntitySet<LobbyMessage> _LobbyMessagesBySourceAccountID;
		
		private EntitySet<LobbyMessage> _LobbyMessagesByTargetAccountID;
		
		private EntitySet<ForumThread> _ForumThreadsByCreatedAccountID;
		
		private EntitySet<ForumThread> _ForumThreadsByLastPostAccountID;
		
		private EntitySet<Resource> _Resources;
		
		private EntitySet<MissionScore> _MissionScores;
		
		private EntitySet<Rating> _Ratings;
		
		private EntitySet<ForumPost> _ForumPosts;
		
		private EntitySet<MapRating> _MapRatings;
		
		private EntitySet<SpringBattle> _SpringBattles;
		
		private EntitySet<SpringBattlePlayer> _SpringBattlePlayers;
		
		private EntitySet<ForumThreadLastRead> _ForumThreadLastReads;
		
		private EntitySet<AccountBattleAward> _AccountBattleAwards;
		
		private EntitySet<AccountBattleStat> _AccountBattleStats;
		
		private EntitySet<AccountUnlock> _AccountUnlocks;
		
		private EntitySet<Commander> _Commanders;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFirstLoginChanging(System.DateTime value);
    partial void OnFirstLoginChanged();
    partial void OnLastLoginChanging(System.DateTime value);
    partial void OnLastLoginChanged();
    partial void OnAliasesChanging(string value);
    partial void OnAliasesChanged();
    partial void OnEloChanging(float value);
    partial void OnEloChanged();
    partial void OnEloWeightChanging(float value);
    partial void OnEloWeightChanged();
    partial void OnIsLobbyAdministratorChanging(bool value);
    partial void OnIsLobbyAdministratorChanged();
    partial void OnIsBotChanging(bool value);
    partial void OnIsBotChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLobbyTimeRankChanging(int value);
    partial void OnLobbyTimeRankChanged();
    partial void OnMissionRunCountChanging(int value);
    partial void OnMissionRunCountChanged();
    partial void OnIsZeroKAdminChanging(bool value);
    partial void OnIsZeroKAdminChanged();
    partial void OnXPChanging(int value);
    partial void OnXPChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    #endregion
		
		public Account()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="varchar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLogin", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime FirstLogin
		{
			get
			{
				return this._FirstLogin;
			}
			set
			{
				if ((this._FirstLogin != value))
				{
					this.OnFirstLoginChanging(value);
					this.SendPropertyChanging();
					this._FirstLogin = value;
					this.SendPropertyChanged("FirstLogin");
					this.OnFirstLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aliases", DbType="varchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Aliases
		{
			get
			{
				return this._Aliases;
			}
			set
			{
				if ((this._Aliases != value))
				{
					this.OnAliasesChanging(value);
					this.SendPropertyChanging();
					this._Aliases = value;
					this.SendPropertyChanged("Aliases");
					this.OnAliasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elo", DbType="real NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public float Elo
		{
			get
			{
				return this._Elo;
			}
			set
			{
				if ((this._Elo != value))
				{
					this.OnEloChanging(value);
					this.SendPropertyChanging();
					this._Elo = value;
					this.SendPropertyChanged("Elo");
					this.OnEloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EloWeight", DbType="real NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public float EloWeight
		{
			get
			{
				return this._EloWeight;
			}
			set
			{
				if ((this._EloWeight != value))
				{
					this.OnEloWeightChanging(value);
					this.SendPropertyChanging();
					this._EloWeight = value;
					this.SendPropertyChanged("EloWeight");
					this.OnEloWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLobbyAdministrator", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsLobbyAdministrator
		{
			get
			{
				return this._IsLobbyAdministrator;
			}
			set
			{
				if ((this._IsLobbyAdministrator != value))
				{
					this.OnIsLobbyAdministratorChanging(value);
					this.SendPropertyChanging();
					this._IsLobbyAdministrator = value;
					this.SendPropertyChanged("IsLobbyAdministrator");
					this.OnIsLobbyAdministratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBot", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsBot
		{
			get
			{
				return this._IsBot;
			}
			set
			{
				if ((this._IsBot != value))
				{
					this.OnIsBotChanging(value);
					this.SendPropertyChanging();
					this._IsBot = value;
					this.SendPropertyChanged("IsBot");
					this.OnIsBotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="varchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="varchar(5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LobbyTimeRank", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public int LobbyTimeRank
		{
			get
			{
				return this._LobbyTimeRank;
			}
			set
			{
				if ((this._LobbyTimeRank != value))
				{
					this.OnLobbyTimeRankChanging(value);
					this.SendPropertyChanging();
					this._LobbyTimeRank = value;
					this.SendPropertyChanged("LobbyTimeRank");
					this.OnLobbyTimeRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionRunCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public int MissionRunCount
		{
			get
			{
				return this._MissionRunCount;
			}
			set
			{
				if ((this._MissionRunCount != value))
				{
					this.OnMissionRunCountChanging(value);
					this.SendPropertyChanging();
					this._MissionRunCount = value;
					this.SendPropertyChanged("MissionRunCount");
					this.OnMissionRunCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsZeroKAdmin", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsZeroKAdmin
		{
			get
			{
				return this._IsZeroKAdmin;
			}
			set
			{
				if ((this._IsZeroKAdmin != value))
				{
					this.OnIsZeroKAdminChanging(value);
					this.SendPropertyChanging();
					this._IsZeroKAdmin = value;
					this.SendPropertyChanged("IsZeroKAdmin");
					this.OnIsZeroKAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Xp", Storage="_XP", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public int XP
		{
			get
			{
				return this._XP;
			}
			set
			{
				if ((this._XP != value))
				{
					this.OnXPChanging(value);
					this.SendPropertyChanging();
					this._XP = value;
					this.SendPropertyChanged("XP");
					this.OnXPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Mission", Storage="_Missions", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<Mission> Missions
		{
			get
			{
				if ((this.serializing 
							&& (this._Missions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Missions;
			}
			set
			{
				this._Missions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_LobbyMessage", Storage="_LobbyMessagesBySourceAccountID", ThisKey="AccountID", OtherKey="SourceAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<LobbyMessage> LobbyMessagesBySourceAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._LobbyMessagesBySourceAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LobbyMessagesBySourceAccountID;
			}
			set
			{
				this._LobbyMessagesBySourceAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_LobbyMessage1", Storage="_LobbyMessagesByTargetAccountID", ThisKey="AccountID", OtherKey="TargetAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<LobbyMessage> LobbyMessagesByTargetAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._LobbyMessagesByTargetAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LobbyMessagesByTargetAccountID;
			}
			set
			{
				this._LobbyMessagesByTargetAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThread", Storage="_ForumThreadsByCreatedAccountID", ThisKey="AccountID", OtherKey="CreatedAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<ForumThread> ForumThreadsByCreatedAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreadsByCreatedAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreadsByCreatedAccountID;
			}
			set
			{
				this._ForumThreadsByCreatedAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThread1", Storage="_ForumThreadsByLastPostAccountID", ThisKey="AccountID", OtherKey="LastPostAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<ForumThread> ForumThreadsByLastPostAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreadsByLastPostAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreadsByLastPostAccountID;
			}
			set
			{
				this._ForumThreadsByLastPostAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Resource", Storage="_Resources", ThisKey="AccountID", OtherKey="TaggedByAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<Resource> Resources
		{
			get
			{
				if ((this.serializing 
							&& (this._Resources.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Resources;
			}
			set
			{
				this._Resources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MissionScore", Storage="_MissionScores", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<MissionScore> MissionScores
		{
			get
			{
				if ((this.serializing 
							&& (this._MissionScores.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MissionScores;
			}
			set
			{
				this._MissionScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Rating", Storage="_Ratings", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<Rating> Ratings
		{
			get
			{
				if ((this.serializing 
							&& (this._Ratings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Ratings;
			}
			set
			{
				this._Ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumPost", Storage="_ForumPosts", ThisKey="AccountID", OtherKey="AuthorAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<ForumPost> ForumPosts
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumPosts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumPosts;
			}
			set
			{
				this._ForumPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MapRating", Storage="_MapRatings", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<MapRating> MapRatings
		{
			get
			{
				if ((this.serializing 
							&& (this._MapRatings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MapRatings;
			}
			set
			{
				this._MapRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SpringBattle", Storage="_SpringBattles", ThisKey="AccountID", OtherKey="HostAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<SpringBattle> SpringBattles
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattles;
			}
			set
			{
				this._SpringBattles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SpringBattlePlayer", Storage="_SpringBattlePlayers", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<SpringBattlePlayer> SpringBattlePlayers
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattlePlayers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattlePlayers;
			}
			set
			{
				this._SpringBattlePlayers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThreadLastRead", Storage="_ForumThreadLastReads", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<ForumThreadLastRead> ForumThreadLastReads
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreadLastReads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreadLastReads;
			}
			set
			{
				this._ForumThreadLastReads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountBattleAward", Storage="_AccountBattleAwards", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<AccountBattleAward> AccountBattleAwards
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountBattleAwards.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountBattleAwards;
			}
			set
			{
				this._AccountBattleAwards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountBattleStat", Storage="_AccountBattleStats", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<AccountBattleStat> AccountBattleStats
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountBattleStats.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountBattleStats;
			}
			set
			{
				this._AccountBattleStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountUnlock", Storage="_AccountUnlocks", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<AccountUnlock> AccountUnlocks
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountUnlocks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountUnlocks;
			}
			set
			{
				this._AccountUnlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Commander", Storage="_Commanders", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public EntitySet<Commander> Commanders
		{
			get
			{
				if ((this.serializing 
							&& (this._Commanders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Commanders;
			}
			set
			{
				this._Commanders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Missions(Mission entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Missions(Mission entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_LobbyMessagesBySourceAccountID(LobbyMessage entity)
		{
			this.SendPropertyChanging();
			entity.AccountBySourceAccountID = this;
		}
		
		private void detach_LobbyMessagesBySourceAccountID(LobbyMessage entity)
		{
			this.SendPropertyChanging();
			entity.AccountBySourceAccountID = null;
		}
		
		private void attach_LobbyMessagesByTargetAccountID(LobbyMessage entity)
		{
			this.SendPropertyChanging();
			entity.AccountByTargetAccountID = this;
		}
		
		private void detach_LobbyMessagesByTargetAccountID(LobbyMessage entity)
		{
			this.SendPropertyChanging();
			entity.AccountByTargetAccountID = null;
		}
		
		private void attach_ForumThreadsByCreatedAccountID(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.AccountByCreatedAccountID = this;
		}
		
		private void detach_ForumThreadsByCreatedAccountID(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.AccountByCreatedAccountID = null;
		}
		
		private void attach_ForumThreadsByLastPostAccountID(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.AccountByLastPostAccountID = this;
		}
		
		private void detach_ForumThreadsByLastPostAccountID(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.AccountByLastPostAccountID = null;
		}
		
		private void attach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_MissionScores(MissionScore entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_MissionScores(MissionScore entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_MapRatings(MapRating entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_MapRatings(MapRating entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_SpringBattles(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_SpringBattles(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_SpringBattlePlayers(SpringBattlePlayer entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_SpringBattlePlayers(SpringBattlePlayer entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_ForumThreadLastReads(ForumThreadLastRead entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_ForumThreadLastReads(ForumThreadLastRead entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountBattleAwards(AccountBattleAward entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountBattleAwards(AccountBattleAward entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountBattleStats(AccountBattleStat entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountBattleStats(AccountBattleStat entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountUnlocks(AccountUnlock entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountUnlocks(AccountUnlock entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Commanders(Commander entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = this;
		}
		
		private void detach_Commanders(Commander entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = null;
		}
		
		private void Initialize()
		{
			this._Missions = new EntitySet<Mission>(new Action<Mission>(this.attach_Missions), new Action<Mission>(this.detach_Missions));
			this._LobbyMessagesBySourceAccountID = new EntitySet<LobbyMessage>(new Action<LobbyMessage>(this.attach_LobbyMessagesBySourceAccountID), new Action<LobbyMessage>(this.detach_LobbyMessagesBySourceAccountID));
			this._LobbyMessagesByTargetAccountID = new EntitySet<LobbyMessage>(new Action<LobbyMessage>(this.attach_LobbyMessagesByTargetAccountID), new Action<LobbyMessage>(this.detach_LobbyMessagesByTargetAccountID));
			this._ForumThreadsByCreatedAccountID = new EntitySet<ForumThread>(new Action<ForumThread>(this.attach_ForumThreadsByCreatedAccountID), new Action<ForumThread>(this.detach_ForumThreadsByCreatedAccountID));
			this._ForumThreadsByLastPostAccountID = new EntitySet<ForumThread>(new Action<ForumThread>(this.attach_ForumThreadsByLastPostAccountID), new Action<ForumThread>(this.detach_ForumThreadsByLastPostAccountID));
			this._Resources = new EntitySet<Resource>(new Action<Resource>(this.attach_Resources), new Action<Resource>(this.detach_Resources));
			this._MissionScores = new EntitySet<MissionScore>(new Action<MissionScore>(this.attach_MissionScores), new Action<MissionScore>(this.detach_MissionScores));
			this._Ratings = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings), new Action<Rating>(this.detach_Ratings));
			this._ForumPosts = new EntitySet<ForumPost>(new Action<ForumPost>(this.attach_ForumPosts), new Action<ForumPost>(this.detach_ForumPosts));
			this._MapRatings = new EntitySet<MapRating>(new Action<MapRating>(this.attach_MapRatings), new Action<MapRating>(this.detach_MapRatings));
			this._SpringBattles = new EntitySet<SpringBattle>(new Action<SpringBattle>(this.attach_SpringBattles), new Action<SpringBattle>(this.detach_SpringBattles));
			this._SpringBattlePlayers = new EntitySet<SpringBattlePlayer>(new Action<SpringBattlePlayer>(this.attach_SpringBattlePlayers), new Action<SpringBattlePlayer>(this.detach_SpringBattlePlayers));
			this._ForumThreadLastReads = new EntitySet<ForumThreadLastRead>(new Action<ForumThreadLastRead>(this.attach_ForumThreadLastReads), new Action<ForumThreadLastRead>(this.detach_ForumThreadLastReads));
			this._AccountBattleAwards = new EntitySet<AccountBattleAward>(new Action<AccountBattleAward>(this.attach_AccountBattleAwards), new Action<AccountBattleAward>(this.detach_AccountBattleAwards));
			this._AccountBattleStats = new EntitySet<AccountBattleStat>(new Action<AccountBattleStat>(this.attach_AccountBattleStats), new Action<AccountBattleStat>(this.detach_AccountBattleStats));
			this._AccountUnlocks = new EntitySet<AccountUnlock>(new Action<AccountUnlock>(this.attach_AccountUnlocks), new Action<AccountUnlock>(this.detach_AccountUnlocks));
			this._Commanders = new EntitySet<Commander>(new Action<Commander>(this.attach_Commanders), new Action<Commander>(this.detach_Commanders));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LobbyMessage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LobbyMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private string _SourceName;
		
		private string _TargetName;
		
		private System.Nullable<int> _SourceAccountID;
		
		private string _Message;
		
		private System.DateTime _Created;
		
		private System.Nullable<int> _TargetAccountID;
		
		private string _Channel;
		
		private EntityRef<Account> _AccountBySourceAccountID;
		
		private EntityRef<Account> _AccountByTargetAccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnSourceNameChanging(string value);
    partial void OnSourceNameChanged();
    partial void OnTargetNameChanging(string value);
    partial void OnTargetNameChanged();
    partial void OnSourceAccountIDChanging(System.Nullable<int> value);
    partial void OnSourceAccountIDChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnTargetAccountIDChanging(System.Nullable<int> value);
    partial void OnTargetAccountIDChanged();
    partial void OnChannelChanging(string value);
    partial void OnChannelChanged();
    #endregion
		
		public LobbyMessage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceName", DbType="nvarchar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SourceName
		{
			get
			{
				return this._SourceName;
			}
			set
			{
				if ((this._SourceName != value))
				{
					this.OnSourceNameChanging(value);
					this.SendPropertyChanging();
					this._SourceName = value;
					this.SendPropertyChanged("SourceName");
					this.OnSourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetName", DbType="nvarchar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TargetName
		{
			get
			{
				return this._TargetName;
			}
			set
			{
				if ((this._TargetName != value))
				{
					this.OnTargetNameChanging(value);
					this.SendPropertyChanging();
					this._TargetName = value;
					this.SendPropertyChanged("TargetName");
					this.OnTargetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> SourceAccountID
		{
			get
			{
				return this._SourceAccountID;
			}
			set
			{
				if ((this._SourceAccountID != value))
				{
					if (this._AccountBySourceAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._SourceAccountID = value;
					this.SendPropertyChanged("SourceAccountID");
					this.OnSourceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="nvarchar(2000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> TargetAccountID
		{
			get
			{
				return this._TargetAccountID;
			}
			set
			{
				if ((this._TargetAccountID != value))
				{
					if (this._AccountByTargetAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetAccountIDChanging(value);
					this.SendPropertyChanging();
					this._TargetAccountID = value;
					this.SendPropertyChanged("TargetAccountID");
					this.OnTargetAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Channel
		{
			get
			{
				return this._Channel;
			}
			set
			{
				if ((this._Channel != value))
				{
					this.OnChannelChanging(value);
					this.SendPropertyChanging();
					this._Channel = value;
					this.SendPropertyChanged("Channel");
					this.OnChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_LobbyMessage", Storage="_AccountBySourceAccountID", ThisKey="SourceAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountBySourceAccountID
		{
			get
			{
				return this._AccountBySourceAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountBySourceAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountBySourceAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountBySourceAccountID.Entity = null;
						previousValue.LobbyMessagesBySourceAccountID.Remove(this);
					}
					this._AccountBySourceAccountID.Entity = value;
					if ((value != null))
					{
						value.LobbyMessagesBySourceAccountID.Add(this);
						this._SourceAccountID = value.AccountID;
					}
					else
					{
						this._SourceAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountBySourceAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_LobbyMessage1", Storage="_AccountByTargetAccountID", ThisKey="TargetAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByTargetAccountID
		{
			get
			{
				return this._AccountByTargetAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByTargetAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByTargetAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByTargetAccountID.Entity = null;
						previousValue.LobbyMessagesByTargetAccountID.Remove(this);
					}
					this._AccountByTargetAccountID.Entity = value;
					if ((value != null))
					{
						value.LobbyMessagesByTargetAccountID.Add(this);
						this._TargetAccountID = value.AccountID;
					}
					else
					{
						this._TargetAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByTargetAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AccountBySourceAccountID = default(EntityRef<Account>);
			this._AccountByTargetAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LobbyChannelSubscription")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LobbyChannelSubscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _Channel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnChannelChanging(string value);
    partial void OnChannelChanged();
    #endregion
		
		public LobbyChannelSubscription()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel", DbType="nvarchar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Channel
		{
			get
			{
				return this._Channel;
			}
			set
			{
				if ((this._Channel != value))
				{
					this.OnChannelChanging(value);
					this.SendPropertyChanging();
					this._Channel = value;
					this.SendPropertyChanged("Channel");
					this.OnChannelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumThread")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumThread : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumThreadID;
		
		private string _Title;
		
		private System.DateTime _Created;
		
		private System.Nullable<int> _CreatedAccountID;
		
		private System.Nullable<System.DateTime> _LastPost;
		
		private System.Nullable<int> _LastPostAccountID;
		
		private int _PostCount;
		
		private int _ViewCount;
		
		private bool _IsLocked;
		
		private System.Nullable<int> _ForumCategoryID;
		
		private bool _IsPinned;
		
		private EntityRef<Mission> _Missions;
		
		private EntityRef<Resource> _Resources;
		
		private EntitySet<ForumPost> _ForumPosts;
		
		private EntityRef<SpringBattle> _SpringBattles;
		
		private EntitySet<ForumThreadLastRead> _ForumThreadLastReads;
		
		private EntityRef<ForumCategory> _ForumCategory;
		
		private EntityRef<Account> _AccountByCreatedAccountID;
		
		private EntityRef<Account> _AccountByLastPostAccountID;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnCreatedAccountIDChanging(System.Nullable<int> value);
    partial void OnCreatedAccountIDChanged();
    partial void OnLastPostChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPostChanged();
    partial void OnLastPostAccountIDChanging(System.Nullable<int> value);
    partial void OnLastPostAccountIDChanged();
    partial void OnPostCountChanging(int value);
    partial void OnPostCountChanged();
    partial void OnViewCountChanging(int value);
    partial void OnViewCountChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnForumCategoryIDChanging(System.Nullable<int> value);
    partial void OnForumCategoryIDChanged();
    partial void OnIsPinnedChanging(bool value);
    partial void OnIsPinnedChanged();
    #endregion
		
		public ForumThread()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="nvarchar(300) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CreatedAccountID
		{
			get
			{
				return this._CreatedAccountID;
			}
			set
			{
				if ((this._CreatedAccountID != value))
				{
					if (this._AccountByCreatedAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedAccountIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedAccountID = value;
					this.SendPropertyChanged("CreatedAccountID");
					this.OnCreatedAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPost", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> LastPost
		{
			get
			{
				return this._LastPost;
			}
			set
			{
				if ((this._LastPost != value))
				{
					this.OnLastPostChanging(value);
					this.SendPropertyChanging();
					this._LastPost = value;
					this.SendPropertyChanged("LastPost");
					this.OnLastPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPostAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> LastPostAccountID
		{
			get
			{
				return this._LastPostAccountID;
			}
			set
			{
				if ((this._LastPostAccountID != value))
				{
					if (this._AccountByLastPostAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastPostAccountIDChanging(value);
					this.SendPropertyChanging();
					this._LastPostAccountID = value;
					this.SendPropertyChanged("LastPostAccountID");
					this.OnLastPostAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int PostCount
		{
			get
			{
				return this._PostCount;
			}
			set
			{
				if ((this._PostCount != value))
				{
					this.OnPostCountChanging(value);
					this.SendPropertyChanging();
					this._PostCount = value;
					this.SendPropertyChanged("PostCount");
					this.OnPostCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int ViewCount
		{
			get
			{
				return this._ViewCount;
			}
			set
			{
				if ((this._ViewCount != value))
				{
					this.OnViewCountChanging(value);
					this.SendPropertyChanging();
					this._ViewCount = value;
					this.SendPropertyChanged("ViewCount");
					this.OnViewCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumCategoryID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> ForumCategoryID
		{
			get
			{
				return this._ForumCategoryID;
			}
			set
			{
				if ((this._ForumCategoryID != value))
				{
					if (this._ForumCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ForumCategoryID = value;
					this.SendPropertyChanged("ForumCategoryID");
					this.OnForumCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPinned", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsPinned
		{
			get
			{
				return this._IsPinned;
			}
			set
			{
				if ((this._IsPinned != value))
				{
					this.OnIsPinnedChanging(value);
					this.SendPropertyChanging();
					this._IsPinned = value;
					this.SendPropertyChanged("IsPinned");
					this.OnIsPinnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Mission", Storage="_Missions", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public Mission Missions
		{
			get
			{
				if ((this.serializing 
							&& (this._Missions.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Missions.Entity;
			}
			set
			{
				Mission previousValue = this._Missions.Entity;
				if (((previousValue != value) 
							|| (this._Missions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Missions.Entity = null;
						previousValue.ForumThread = null;
					}
					this._Missions.Entity = value;
					if ((value != null))
					{
						value.ForumThread = this;
					}
					this.SendPropertyChanged("Missions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Resource", Storage="_Resources", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public Resource Resources
		{
			get
			{
				if ((this.serializing 
							&& (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Resources.Entity;
			}
			set
			{
				Resource previousValue = this._Resources.Entity;
				if (((previousValue != value) 
							|| (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resources.Entity = null;
						previousValue.ForumThread = null;
					}
					this._Resources.Entity = value;
					if ((value != null))
					{
						value.ForumThread = this;
					}
					this.SendPropertyChanged("Resources");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumPost", Storage="_ForumPosts", ThisKey="ForumThreadID", OtherKey="ForumThreadID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<ForumPost> ForumPosts
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumPosts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumPosts;
			}
			set
			{
				this._ForumPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_SpringBattle", Storage="_SpringBattles", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public SpringBattle SpringBattles
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattles.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._SpringBattles.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattles.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattles.Entity = null;
						previousValue.ForumThread = null;
					}
					this._SpringBattles.Entity = value;
					if ((value != null))
					{
						value.ForumThread = this;
					}
					this.SendPropertyChanged("SpringBattles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumThreadLastRead", Storage="_ForumThreadLastReads", ThisKey="ForumThreadID", OtherKey="ForumThreadID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<ForumThreadLastRead> ForumThreadLastReads
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreadLastReads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreadLastReads;
			}
			set
			{
				this._ForumThreadLastReads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumThread", Storage="_ForumCategory", ThisKey="ForumCategoryID", OtherKey="ForumCategoryID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ForumCategory ForumCategory
		{
			get
			{
				return this._ForumCategory.Entity;
			}
			set
			{
				ForumCategory previousValue = this._ForumCategory.Entity;
				if (((previousValue != value) 
							|| (this._ForumCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumCategory.Entity = null;
						previousValue.ForumThreads.Remove(this);
					}
					this._ForumCategory.Entity = value;
					if ((value != null))
					{
						value.ForumThreads.Add(this);
						this._ForumCategoryID = value.ForumCategoryID;
					}
					else
					{
						this._ForumCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ForumCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThread", Storage="_AccountByCreatedAccountID", ThisKey="CreatedAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByCreatedAccountID
		{
			get
			{
				return this._AccountByCreatedAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByCreatedAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByCreatedAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByCreatedAccountID.Entity = null;
						previousValue.ForumThreadsByCreatedAccountID.Remove(this);
					}
					this._AccountByCreatedAccountID.Entity = value;
					if ((value != null))
					{
						value.ForumThreadsByCreatedAccountID.Add(this);
						this._CreatedAccountID = value.AccountID;
					}
					else
					{
						this._CreatedAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByCreatedAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThread1", Storage="_AccountByLastPostAccountID", ThisKey="LastPostAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByLastPostAccountID
		{
			get
			{
				return this._AccountByLastPostAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByLastPostAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByLastPostAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByLastPostAccountID.Entity = null;
						previousValue.ForumThreadsByLastPostAccountID.Remove(this);
					}
					this._AccountByLastPostAccountID.Entity = value;
					if ((value != null))
					{
						value.ForumThreadsByLastPostAccountID.Add(this);
						this._LastPostAccountID = value.AccountID;
					}
					else
					{
						this._LastPostAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByLastPostAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = this;
		}
		
		private void detach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = null;
		}
		
		private void attach_ForumThreadLastReads(ForumThreadLastRead entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = this;
		}
		
		private void detach_ForumThreadLastReads(ForumThreadLastRead entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = null;
		}
		
		private void Initialize()
		{
			this._Missions = default(EntityRef<Mission>);
			this._Resources = default(EntityRef<Resource>);
			this._ForumPosts = new EntitySet<ForumPost>(new Action<ForumPost>(this.attach_ForumPosts), new Action<ForumPost>(this.detach_ForumPosts));
			this._SpringBattles = default(EntityRef<SpringBattle>);
			this._ForumThreadLastReads = new EntitySet<ForumThreadLastRead>(new Action<ForumThreadLastRead>(this.attach_ForumThreadLastReads), new Action<ForumThreadLastRead>(this.detach_ForumThreadLastReads));
			this._ForumCategory = default(EntityRef<ForumCategory>);
			this._AccountByCreatedAccountID = default(EntityRef<Account>);
			this._AccountByLastPostAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExceptionLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ExceptionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExceptionLogID;
		
		private global::ZkData.ProgramType _ProgramID;
		
		private string _Exception;
		
		private string _ExtraData;
		
		private string _RemoteIP;
		
		private string _PlayerName;
		
		private System.DateTime _Time;
		
		private string _ProgramVersion;
		
		private string _ExceptionHash;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExceptionLogIDChanging(int value);
    partial void OnExceptionLogIDChanged();
    partial void OnProgramIDChanging(global::ZkData.ProgramType value);
    partial void OnProgramIDChanged();
    partial void OnExceptionChanging(string value);
    partial void OnExceptionChanged();
    partial void OnExtraDataChanging(string value);
    partial void OnExtraDataChanged();
    partial void OnRemoteIPChanging(string value);
    partial void OnRemoteIPChanged();
    partial void OnPlayerNameChanging(string value);
    partial void OnPlayerNameChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnProgramVersionChanging(string value);
    partial void OnProgramVersionChanged();
    partial void OnExceptionHashChanging(string value);
    partial void OnExceptionHashChanged();
    #endregion
		
		public ExceptionLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionLogID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ExceptionLogID
		{
			get
			{
				return this._ExceptionLogID;
			}
			set
			{
				if ((this._ExceptionLogID != value))
				{
					this.OnExceptionLogIDChanging(value);
					this.SendPropertyChanging();
					this._ExceptionLogID = value;
					this.SendPropertyChanged("ExceptionLogID");
					this.OnExceptionLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramID", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public global::ZkData.ProgramType ProgramID
		{
			get
			{
				return this._ProgramID;
			}
			set
			{
				if ((this._ProgramID != value))
				{
					this.OnProgramIDChanging(value);
					this.SendPropertyChanging();
					this._ProgramID = value;
					this.SendPropertyChanged("ProgramID");
					this.OnProgramIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Exception]", Storage="_Exception", DbType="nvarchar(max) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				if ((this._Exception != value))
				{
					this.OnExceptionChanging(value);
					this.SendPropertyChanging();
					this._Exception = value;
					this.SendPropertyChanged("Exception");
					this.OnExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraData", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ExtraData
		{
			get
			{
				return this._ExtraData;
			}
			set
			{
				if ((this._ExtraData != value))
				{
					this.OnExtraDataChanging(value);
					this.SendPropertyChanging();
					this._ExtraData = value;
					this.SendPropertyChanged("ExtraData");
					this.OnExtraDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteIP", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string RemoteIP
		{
			get
			{
				return this._RemoteIP;
			}
			set
			{
				if ((this._RemoteIP != value))
				{
					this.OnRemoteIPChanging(value);
					this.SendPropertyChanging();
					this._RemoteIP = value;
					this.SendPropertyChanged("RemoteIP");
					this.OnRemoteIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerName", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PlayerName
		{
			get
			{
				return this._PlayerName;
			}
			set
			{
				if ((this._PlayerName != value))
				{
					this.OnPlayerNameChanging(value);
					this.SendPropertyChanging();
					this._PlayerName = value;
					this.SendPropertyChanged("PlayerName");
					this.OnPlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Time]", Storage="_Time", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramVersion", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ProgramVersion
		{
			get
			{
				return this._ProgramVersion;
			}
			set
			{
				if ((this._ProgramVersion != value))
				{
					this.OnProgramVersionChanging(value);
					this.SendPropertyChanging();
					this._ProgramVersion = value;
					this.SendPropertyChanged("ProgramVersion");
					this.OnProgramVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionHash", DbType="char(32) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ExceptionHash
		{
			get
			{
				return this._ExceptionHash;
			}
			set
			{
				if ((this._ExceptionHash != value))
				{
					this.OnExceptionHashChanging(value);
					this.SendPropertyChanging();
					this._ExceptionHash = value;
					this.SendPropertyChanged("ExceptionHash");
					this.OnExceptionHashChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceDependency")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ResourceDependency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private string _NeedsInternalName;
		
		private EntityRef<Resource> _Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnNeedsInternalNameChanging(string value);
    partial void OnNeedsInternalNameChanged();
    #endregion
		
		public ResourceDependency()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsInternalName", DbType="varchar(250) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NeedsInternalName
		{
			get
			{
				return this._NeedsInternalName;
			}
			set
			{
				if ((this._NeedsInternalName != value))
				{
					this.OnNeedsInternalNameChanging(value);
					this.SendPropertyChanging();
					this._NeedsInternalName = value;
					this.SendPropertyChanged("NeedsInternalName");
					this.OnNeedsInternalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceDependency", Storage="_Resource", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.ResourceDependencies.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.ResourceDependencies.Add(this);
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Resource = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceContentFile")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ResourceContentFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private string _Md5;
		
		private int _Length;
		
		private string _FileName;
		
		private string _Links;
		
		private int _LinkCount;
		
		private EntityRef<Resource> _Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnMd5Changing(string value);
    partial void OnMd5Changed();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnLinksChanging(string value);
    partial void OnLinksChanged();
    partial void OnLinkCountChanging(int value);
    partial void OnLinkCountChanged();
    #endregion
		
		public ResourceContentFile()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Md5", DbType="char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Md5
		{
			get
			{
				return this._Md5;
			}
			set
			{
				if ((this._Md5 != value))
				{
					this.OnMd5Changing(value);
					this.SendPropertyChanging();
					this._Md5 = value;
					this.SendPropertyChanged("Md5");
					this.OnMd5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Links", DbType="text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Links
		{
			get
			{
				return this._Links;
			}
			set
			{
				if ((this._Links != value))
				{
					this.OnLinksChanging(value);
					this.SendPropertyChanging();
					this._Links = value;
					this.SendPropertyChanged("Links");
					this.OnLinksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int LinkCount
		{
			get
			{
				return this._LinkCount;
			}
			set
			{
				if ((this._LinkCount != value))
				{
					this.OnLinkCountChanging(value);
					this.SendPropertyChanging();
					this._LinkCount = value;
					this.SendPropertyChanged("LinkCount");
					this.OnLinkCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceContentFile", Storage="_Resource", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.ResourceContentFiles.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.ResourceContentFiles.Add(this);
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Resource = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceSpringHash")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ResourceSpringHash : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private string _SpringVersion;
		
		private int _SpringHash;
		
		private EntityRef<Resource> _Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnSpringVersionChanging(string value);
    partial void OnSpringVersionChanged();
    partial void OnSpringHashChanging(int value);
    partial void OnSpringHashChanged();
    #endregion
		
		public ResourceSpringHash()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringVersion", DbType="nvarchar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SpringVersion
		{
			get
			{
				return this._SpringVersion;
			}
			set
			{
				if ((this._SpringVersion != value))
				{
					this.OnSpringVersionChanging(value);
					this.SendPropertyChanging();
					this._SpringVersion = value;
					this.SendPropertyChanged("SpringVersion");
					this.OnSpringVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringHash", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SpringHash
		{
			get
			{
				return this._SpringHash;
			}
			set
			{
				if ((this._SpringHash != value))
				{
					this.OnSpringHashChanging(value);
					this.SendPropertyChanging();
					this._SpringHash = value;
					this.SendPropertyChanged("SpringHash");
					this.OnSpringHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceSpringHash", Storage="_Resource", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.ResourceSpringHashes.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.ResourceSpringHashes.Add(this);
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Resource = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private string _InternalName;
		
		private global::ZkData.ResourceType _TypeID;
		
		private System.Nullable<System.DateTime> _LastLinkCheck;
		
		private int _DownloadCount;
		
		private int _NoLinkDownloadCount;
		
		private System.Nullable<int> _MissionID;
		
		private System.Nullable<System.DateTime> _LastChange;
		
		private System.Nullable<bool> _MapIsSpecial;
		
		private System.Nullable<int> _MapSizeSquared;
		
		private System.Nullable<float> _MapSizeRatio;
		
		private System.Nullable<int> _MapWaterLevel;
		
		private System.Nullable<bool> _MapIsFfa;
		
		private System.Nullable<int> _MapHills;
		
		private string _AuthorName;
		
		private System.Nullable<int> _MapRatingCount;
		
		private System.Nullable<int> _MapRatingSum;
		
		private System.Nullable<bool> _MapIsAssymetrical;
		
		private System.Nullable<int> _TaggedByAccountID;
		
		private System.Nullable<int> _MapWidth;
		
		private System.Nullable<int> _MapHeight;
		
		private System.Nullable<int> _ForumThreadID;
		
		private System.Nullable<float> _FeaturedOrder;
		
		private EntitySet<ResourceDependency> _ResourceDependencies;
		
		private EntitySet<ResourceContentFile> _ResourceContentFiles;
		
		private EntitySet<ResourceSpringHash> _ResourceSpringHashes;
		
		private EntitySet<MapRating> _MapRatings;
		
		private EntitySet<SpringBattle> _SpringBattlesByMapResourceID;
		
		private EntitySet<SpringBattle> _SpringBattlesByModResourceID;
		
		private EntityRef<Mission> _Mission;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnInternalNameChanging(string value);
    partial void OnInternalNameChanged();
    partial void OnTypeIDChanging(global::ZkData.ResourceType value);
    partial void OnTypeIDChanged();
    partial void OnLastLinkCheckChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLinkCheckChanged();
    partial void OnDownloadCountChanging(int value);
    partial void OnDownloadCountChanged();
    partial void OnNoLinkDownloadCountChanging(int value);
    partial void OnNoLinkDownloadCountChanged();
    partial void OnMissionIDChanging(System.Nullable<int> value);
    partial void OnMissionIDChanged();
    partial void OnLastChangeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastChangeChanged();
    partial void OnMapIsSpecialChanging(System.Nullable<bool> value);
    partial void OnMapIsSpecialChanged();
    partial void OnMapSizeSquaredChanging(System.Nullable<int> value);
    partial void OnMapSizeSquaredChanged();
    partial void OnMapSizeRatioChanging(System.Nullable<float> value);
    partial void OnMapSizeRatioChanged();
    partial void OnMapWaterLevelChanging(System.Nullable<int> value);
    partial void OnMapWaterLevelChanged();
    partial void OnMapIsFfaChanging(System.Nullable<bool> value);
    partial void OnMapIsFfaChanged();
    partial void OnMapHillsChanging(System.Nullable<int> value);
    partial void OnMapHillsChanged();
    partial void OnAuthorNameChanging(string value);
    partial void OnAuthorNameChanged();
    partial void OnMapRatingCountChanging(System.Nullable<int> value);
    partial void OnMapRatingCountChanged();
    partial void OnMapRatingSumChanging(System.Nullable<int> value);
    partial void OnMapRatingSumChanged();
    partial void OnMapIsAssymetricalChanging(System.Nullable<bool> value);
    partial void OnMapIsAssymetricalChanged();
    partial void OnTaggedByAccountIDChanging(System.Nullable<int> value);
    partial void OnTaggedByAccountIDChanged();
    partial void OnMapWidthChanging(System.Nullable<int> value);
    partial void OnMapWidthChanged();
    partial void OnMapHeightChanging(System.Nullable<int> value);
    partial void OnMapHeightChanged();
    partial void OnForumThreadIDChanging(System.Nullable<int> value);
    partial void OnForumThreadIDChanged();
    partial void OnFeaturedOrderChanging(System.Nullable<float> value);
    partial void OnFeaturedOrderChanged();
    #endregion
		
		public Resource()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string InternalName
		{
			get
			{
				return this._InternalName;
			}
			set
			{
				if ((this._InternalName != value))
				{
					this.OnInternalNameChanging(value);
					this.SendPropertyChanging();
					this._InternalName = value;
					this.SendPropertyChanged("InternalName");
					this.OnInternalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public global::ZkData.ResourceType TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLinkCheck", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> LastLinkCheck
		{
			get
			{
				return this._LastLinkCheck;
			}
			set
			{
				if ((this._LastLinkCheck != value))
				{
					this.OnLastLinkCheckChanging(value);
					this.SendPropertyChanging();
					this._LastLinkCheck = value;
					this.SendPropertyChanged("LastLinkCheck");
					this.OnLastLinkCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int DownloadCount
		{
			get
			{
				return this._DownloadCount;
			}
			set
			{
				if ((this._DownloadCount != value))
				{
					this.OnDownloadCountChanging(value);
					this.SendPropertyChanging();
					this._DownloadCount = value;
					this.SendPropertyChanged("DownloadCount");
					this.OnDownloadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoLinkDownloadCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int NoLinkDownloadCount
		{
			get
			{
				return this._NoLinkDownloadCount;
			}
			set
			{
				if ((this._NoLinkDownloadCount != value))
				{
					this.OnNoLinkDownloadCountChanging(value);
					this.SendPropertyChanging();
					this._NoLinkDownloadCount = value;
					this.SendPropertyChanged("NoLinkDownloadCount");
					this.OnNoLinkDownloadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChange", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> LastChange
		{
			get
			{
				return this._LastChange;
			}
			set
			{
				if ((this._LastChange != value))
				{
					this.OnLastChangeChanging(value);
					this.SendPropertyChanging();
					this._LastChange = value;
					this.SendPropertyChanged("LastChange");
					this.OnLastChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapIsSpecial", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> MapIsSpecial
		{
			get
			{
				return this._MapIsSpecial;
			}
			set
			{
				if ((this._MapIsSpecial != value))
				{
					this.OnMapIsSpecialChanging(value);
					this.SendPropertyChanging();
					this._MapIsSpecial = value;
					this.SendPropertyChanged("MapIsSpecial");
					this.OnMapIsSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapSizeSquared", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> MapSizeSquared
		{
			get
			{
				return this._MapSizeSquared;
			}
			set
			{
				if ((this._MapSizeSquared != value))
				{
					this.OnMapSizeSquaredChanging(value);
					this.SendPropertyChanging();
					this._MapSizeSquared = value;
					this.SendPropertyChanged("MapSizeSquared");
					this.OnMapSizeSquaredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapSizeRatio", DbType="real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<float> MapSizeRatio
		{
			get
			{
				return this._MapSizeRatio;
			}
			set
			{
				if ((this._MapSizeRatio != value))
				{
					this.OnMapSizeRatioChanging(value);
					this.SendPropertyChanging();
					this._MapSizeRatio = value;
					this.SendPropertyChanged("MapSizeRatio");
					this.OnMapSizeRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapWaterLevel", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> MapWaterLevel
		{
			get
			{
				return this._MapWaterLevel;
			}
			set
			{
				if ((this._MapWaterLevel != value))
				{
					this.OnMapWaterLevelChanging(value);
					this.SendPropertyChanging();
					this._MapWaterLevel = value;
					this.SendPropertyChanged("MapWaterLevel");
					this.OnMapWaterLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapIsFfa", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> MapIsFfa
		{
			get
			{
				return this._MapIsFfa;
			}
			set
			{
				if ((this._MapIsFfa != value))
				{
					this.OnMapIsFfaChanging(value);
					this.SendPropertyChanging();
					this._MapIsFfa = value;
					this.SendPropertyChanged("MapIsFfa");
					this.OnMapIsFfaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapHills", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<int> MapHills
		{
			get
			{
				return this._MapHills;
			}
			set
			{
				if ((this._MapHills != value))
				{
					this.OnMapHillsChanging(value);
					this.SendPropertyChanging();
					this._MapHills = value;
					this.SendPropertyChanged("MapHills");
					this.OnMapHillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this.OnAuthorNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorName = value;
					this.SendPropertyChanged("AuthorName");
					this.OnAuthorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapRatingCount", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<int> MapRatingCount
		{
			get
			{
				return this._MapRatingCount;
			}
			set
			{
				if ((this._MapRatingCount != value))
				{
					this.OnMapRatingCountChanging(value);
					this.SendPropertyChanging();
					this._MapRatingCount = value;
					this.SendPropertyChanged("MapRatingCount");
					this.OnMapRatingCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapRatingSum", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> MapRatingSum
		{
			get
			{
				return this._MapRatingSum;
			}
			set
			{
				if ((this._MapRatingSum != value))
				{
					this.OnMapRatingSumChanging(value);
					this.SendPropertyChanging();
					this._MapRatingSum = value;
					this.SendPropertyChanged("MapRatingSum");
					this.OnMapRatingSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapIsAssymetrical", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<bool> MapIsAssymetrical
		{
			get
			{
				return this._MapIsAssymetrical;
			}
			set
			{
				if ((this._MapIsAssymetrical != value))
				{
					this.OnMapIsAssymetricalChanging(value);
					this.SendPropertyChanging();
					this._MapIsAssymetrical = value;
					this.SendPropertyChanged("MapIsAssymetrical");
					this.OnMapIsAssymetricalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaggedByAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> TaggedByAccountID
		{
			get
			{
				return this._TaggedByAccountID;
			}
			set
			{
				if ((this._TaggedByAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaggedByAccountIDChanging(value);
					this.SendPropertyChanging();
					this._TaggedByAccountID = value;
					this.SendPropertyChanged("TaggedByAccountID");
					this.OnTaggedByAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapWidth", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> MapWidth
		{
			get
			{
				return this._MapWidth;
			}
			set
			{
				if ((this._MapWidth != value))
				{
					this.OnMapWidthChanging(value);
					this.SendPropertyChanging();
					this._MapWidth = value;
					this.SendPropertyChanged("MapWidth");
					this.OnMapWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapHeight", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<int> MapHeight
		{
			get
			{
				return this._MapHeight;
			}
			set
			{
				if ((this._MapHeight != value))
				{
					this.OnMapHeightChanging(value);
					this.SendPropertyChanging();
					this._MapHeight = value;
					this.SendPropertyChanged("MapHeight");
					this.OnMapHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<int> ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeaturedOrder", DbType="real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<float> FeaturedOrder
		{
			get
			{
				return this._FeaturedOrder;
			}
			set
			{
				if ((this._FeaturedOrder != value))
				{
					this.OnFeaturedOrderChanging(value);
					this.SendPropertyChanging();
					this._FeaturedOrder = value;
					this.SendPropertyChanged("FeaturedOrder");
					this.OnFeaturedOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceDependency", Storage="_ResourceDependencies", ThisKey="ResourceID", OtherKey="ResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<ResourceDependency> ResourceDependencies
		{
			get
			{
				if ((this.serializing 
							&& (this._ResourceDependencies.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ResourceDependencies;
			}
			set
			{
				this._ResourceDependencies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceContentFile", Storage="_ResourceContentFiles", ThisKey="ResourceID", OtherKey="ResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<ResourceContentFile> ResourceContentFiles
		{
			get
			{
				if ((this.serializing 
							&& (this._ResourceContentFiles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ResourceContentFiles;
			}
			set
			{
				this._ResourceContentFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceSpringHash", Storage="_ResourceSpringHashes", ThisKey="ResourceID", OtherKey="ResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<ResourceSpringHash> ResourceSpringHashes
		{
			get
			{
				if ((this.serializing 
							&& (this._ResourceSpringHashes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ResourceSpringHashes;
			}
			set
			{
				this._ResourceSpringHashes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_MapRating", Storage="_MapRatings", ThisKey="ResourceID", OtherKey="ResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<MapRating> MapRatings
		{
			get
			{
				if ((this.serializing 
							&& (this._MapRatings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MapRatings;
			}
			set
			{
				this._MapRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_SpringBattle", Storage="_SpringBattlesByMapResourceID", ThisKey="ResourceID", OtherKey="MapResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<SpringBattle> SpringBattlesByMapResourceID
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattlesByMapResourceID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattlesByMapResourceID;
			}
			set
			{
				this._SpringBattlesByMapResourceID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_SpringBattle1", Storage="_SpringBattlesByModResourceID", ThisKey="ResourceID", OtherKey="ModResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<SpringBattle> SpringBattlesByModResourceID
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattlesByModResourceID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattlesByModResourceID;
			}
			set
			{
				this._SpringBattlesByModResourceID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Resource", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.Resources = null;
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.Resources = this;
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Resource", Storage="_Account", ThisKey="TaggedByAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Resources.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Resources.Add(this);
						this._TaggedByAccountID = value.AccountID;
					}
					else
					{
						this._TaggedByAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Resource", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.Resources = null;
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.Resources = this;
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResourceDependencies(ResourceDependency entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_ResourceDependencies(ResourceDependency entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_ResourceContentFiles(ResourceContentFile entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_ResourceContentFiles(ResourceContentFile entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_ResourceSpringHashes(ResourceSpringHash entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_ResourceSpringHashes(ResourceSpringHash entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_MapRatings(MapRating entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_MapRatings(MapRating entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_SpringBattlesByMapResourceID(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.ResourceByMapResourceID = this;
		}
		
		private void detach_SpringBattlesByMapResourceID(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.ResourceByMapResourceID = null;
		}
		
		private void attach_SpringBattlesByModResourceID(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.ResourceByModResourceID = this;
		}
		
		private void detach_SpringBattlesByModResourceID(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.ResourceByModResourceID = null;
		}
		
		private void Initialize()
		{
			this._ResourceDependencies = new EntitySet<ResourceDependency>(new Action<ResourceDependency>(this.attach_ResourceDependencies), new Action<ResourceDependency>(this.detach_ResourceDependencies));
			this._ResourceContentFiles = new EntitySet<ResourceContentFile>(new Action<ResourceContentFile>(this.attach_ResourceContentFiles), new Action<ResourceContentFile>(this.detach_ResourceContentFiles));
			this._ResourceSpringHashes = new EntitySet<ResourceSpringHash>(new Action<ResourceSpringHash>(this.attach_ResourceSpringHashes), new Action<ResourceSpringHash>(this.detach_ResourceSpringHashes));
			this._MapRatings = new EntitySet<MapRating>(new Action<MapRating>(this.attach_MapRatings), new Action<MapRating>(this.detach_MapRatings));
			this._SpringBattlesByMapResourceID = new EntitySet<SpringBattle>(new Action<SpringBattle>(this.attach_SpringBattlesByMapResourceID), new Action<SpringBattle>(this.detach_SpringBattlesByMapResourceID));
			this._SpringBattlesByModResourceID = new EntitySet<SpringBattle>(new Action<SpringBattle>(this.attach_SpringBattlesByModResourceID), new Action<SpringBattle>(this.detach_SpringBattlesByModResourceID));
			this._Mission = default(EntityRef<Mission>);
			this._Account = default(EntityRef<Account>);
			this._ForumThread = default(EntityRef<ForumThread>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MissionScore")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MissionScore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MissionID;
		
		private int _AccountID;
		
		private int _Score;
		
		private System.DateTime _Time;
		
		private int _MissionRevision;
		
		private int _GameSeconds;
		
		private EntityRef<Mission> _Mission;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMissionIDChanging(int value);
    partial void OnMissionIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnMissionRevisionChanging(int value);
    partial void OnMissionRevisionChanged();
    partial void OnGameSecondsChanging(int value);
    partial void OnGameSecondsChanged();
    #endregion
		
		public MissionScore()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Time]", Storage="_Time", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionRevision", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int MissionRevision
		{
			get
			{
				return this._MissionRevision;
			}
			set
			{
				if ((this._MissionRevision != value))
				{
					this.OnMissionRevisionChanging(value);
					this.SendPropertyChanging();
					this._MissionRevision = value;
					this.SendPropertyChanged("MissionRevision");
					this.OnMissionRevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameSeconds", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int GameSeconds
		{
			get
			{
				return this._GameSeconds;
			}
			set
			{
				if ((this._GameSeconds != value))
				{
					this.OnGameSecondsChanging(value);
					this.SendPropertyChanging();
					this._GameSeconds = value;
					this.SendPropertyChanged("GameSeconds");
					this.OnGameSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_MissionScore", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.MissionScores.Remove(this);
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.MissionScores.Add(this);
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(int);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MissionScore", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.MissionScores.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.MissionScores.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Mission = default(EntityRef<Mission>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rating")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Rating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingID;
		
		private int _AccountID;
		
		private System.Nullable<int> _MissionID;
		
		private System.Nullable<int> _Rating1;
		
		private System.Nullable<int> _Difficulty;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Mission> _Mission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingIDChanging(int value);
    partial void OnRatingIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnMissionIDChanging(System.Nullable<int> value);
    partial void OnMissionIDChanged();
    partial void OnRating1Changing(System.Nullable<int> value);
    partial void OnRating1Changed();
    partial void OnDifficultyChanging(System.Nullable<int> value);
    partial void OnDifficultyChanged();
    #endregion
		
		public Rating()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RatingID
		{
			get
			{
				return this._RatingID;
			}
			set
			{
				if ((this._RatingID != value))
				{
					this.OnRatingIDChanging(value);
					this.SendPropertyChanging();
					this._RatingID = value;
					this.SendPropertyChanged("RatingID");
					this.OnRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Rating", Storage="_Rating1", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> Rating1
		{
			get
			{
				return this._Rating1;
			}
			set
			{
				if ((this._Rating1 != value))
				{
					this.OnRating1Changing(value);
					this.SendPropertyChanging();
					this._Rating1 = value;
					this.SendPropertyChanged("Rating1");
					this.OnRating1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difficulty", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> Difficulty
		{
			get
			{
				return this._Difficulty;
			}
			set
			{
				if ((this._Difficulty != value))
				{
					this.OnDifficultyChanging(value);
					this.SendPropertyChanging();
					this._Difficulty = value;
					this.SendPropertyChanged("Difficulty");
					this.OnDifficultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Rating", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Ratings.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Ratings.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Rating", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.Ratings.Remove(this);
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.Ratings.Add(this);
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._Mission = default(EntityRef<Mission>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumPost")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumPostID;
		
		private int _AuthorAccountID;
		
		private System.DateTime _Created;
		
		private string _Text;
		
		private int _ForumThreadID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<ForumThread> _ForumThread;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumPostIDChanging(int value);
    partial void OnForumPostIDChanged();
    partial void OnAuthorAccountIDChanging(int value);
    partial void OnAuthorAccountIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    #endregion
		
		public ForumPost()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumPostID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumPostID
		{
			get
			{
				return this._ForumPostID;
			}
			set
			{
				if ((this._ForumPostID != value))
				{
					this.OnForumPostIDChanging(value);
					this.SendPropertyChanging();
					this._ForumPostID = value;
					this.SendPropertyChanged("ForumPostID");
					this.OnForumPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorAccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AuthorAccountID
		{
			get
			{
				return this._AuthorAccountID;
			}
			set
			{
				if ((this._AuthorAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorAccountID = value;
					this.SendPropertyChanged("AuthorAccountID");
					this.OnAuthorAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="nvarchar(max) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumPost", Storage="_Account", ThisKey="AuthorAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.ForumPosts.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.ForumPosts.Add(this);
						this._AuthorAccountID = value.AccountID;
					}
					else
					{
						this._AuthorAccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumPost", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.ForumPosts.Remove(this);
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.ForumPosts.Add(this);
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(int);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._ForumThread = default(EntityRef<ForumThread>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapRating")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MapRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private int _AccountID;
		
		private int _Rating;
		
		private EntityRef<Resource> _Resource;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    #endregion
		
		public MapRating()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_MapRating", Storage="_Resource", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.MapRatings.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.MapRatings.Add(this);
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MapRating", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.MapRatings.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.MapRatings.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Resource = default(EntityRef<Resource>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpringBattle")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SpringBattle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpringBattleID;
		
		private string _EngineGameID;
		
		private int _HostAccountID;
		
		private string _Title;
		
		private int _MapResourceID;
		
		private int _ModResourceID;
		
		private System.DateTime _StartTime;
		
		private int _Duration;
		
		private int _PlayerCount;
		
		private bool _HasBots;
		
		private bool _IsMission;
		
		private string _ReplayFileName;
		
		private string _EngineVersion;
		
		private bool _IsEloProcessed;
		
		private System.Nullable<int> _WinnerTeamXpChange;
		
		private System.Nullable<int> _LoserTeamXpChange;
		
		private System.Nullable<int> _RatingSum;
		
		private System.Nullable<int> _RatingCount;
		
		private System.Nullable<int> _ForumThreadID;
		
		private EntitySet<SpringBattlePlayer> _SpringBattlePlayers;
		
		private EntitySet<AccountBattleAward> _AccountBattleAwards;
		
		private EntitySet<AccountBattleStat> _AccountBattleStats;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Resource> _ResourceByMapResourceID;
		
		private EntityRef<Resource> _ResourceByModResourceID;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    partial void OnEngineGameIDChanging(string value);
    partial void OnEngineGameIDChanged();
    partial void OnHostAccountIDChanging(int value);
    partial void OnHostAccountIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMapResourceIDChanging(int value);
    partial void OnMapResourceIDChanged();
    partial void OnModResourceIDChanging(int value);
    partial void OnModResourceIDChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnDurationChanging(int value);
    partial void OnDurationChanged();
    partial void OnPlayerCountChanging(int value);
    partial void OnPlayerCountChanged();
    partial void OnHasBotsChanging(bool value);
    partial void OnHasBotsChanged();
    partial void OnIsMissionChanging(bool value);
    partial void OnIsMissionChanged();
    partial void OnReplayFileNameChanging(string value);
    partial void OnReplayFileNameChanged();
    partial void OnEngineVersionChanging(string value);
    partial void OnEngineVersionChanged();
    partial void OnIsEloProcessedChanging(bool value);
    partial void OnIsEloProcessedChanged();
    partial void OnWinnerTeamXpChangeChanging(System.Nullable<int> value);
    partial void OnWinnerTeamXpChangeChanged();
    partial void OnLoserTeamXpChangeChanging(System.Nullable<int> value);
    partial void OnLoserTeamXpChangeChanged();
    partial void OnRatingSumChanging(System.Nullable<int> value);
    partial void OnRatingSumChanged();
    partial void OnRatingCountChanging(System.Nullable<int> value);
    partial void OnRatingCountChanged();
    partial void OnForumThreadIDChanging(System.Nullable<int> value);
    partial void OnForumThreadIDChanged();
    #endregion
		
		public SpringBattle()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineGameID", DbType="varchar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string EngineGameID
		{
			get
			{
				return this._EngineGameID;
			}
			set
			{
				if ((this._EngineGameID != value))
				{
					this.OnEngineGameIDChanging(value);
					this.SendPropertyChanging();
					this._EngineGameID = value;
					this.SendPropertyChanged("EngineGameID");
					this.OnEngineGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostAccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int HostAccountID
		{
			get
			{
				return this._HostAccountID;
			}
			set
			{
				if ((this._HostAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostAccountIDChanging(value);
					this.SendPropertyChanging();
					this._HostAccountID = value;
					this.SendPropertyChanged("HostAccountID");
					this.OnHostAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapResourceID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int MapResourceID
		{
			get
			{
				return this._MapResourceID;
			}
			set
			{
				if ((this._MapResourceID != value))
				{
					if (this._ResourceByMapResourceID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMapResourceIDChanging(value);
					this.SendPropertyChanging();
					this._MapResourceID = value;
					this.SendPropertyChanged("MapResourceID");
					this.OnMapResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModResourceID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int ModResourceID
		{
			get
			{
				return this._ModResourceID;
			}
			set
			{
				if ((this._ModResourceID != value))
				{
					if (this._ResourceByModResourceID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ModResourceID = value;
					this.SendPropertyChanged("ModResourceID");
					this.OnModResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerCount", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int PlayerCount
		{
			get
			{
				return this._PlayerCount;
			}
			set
			{
				if ((this._PlayerCount != value))
				{
					this.OnPlayerCountChanging(value);
					this.SendPropertyChanging();
					this._PlayerCount = value;
					this.SendPropertyChanged("PlayerCount");
					this.OnPlayerCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBots", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool HasBots
		{
			get
			{
				return this._HasBots;
			}
			set
			{
				if ((this._HasBots != value))
				{
					this.OnHasBotsChanging(value);
					this.SendPropertyChanging();
					this._HasBots = value;
					this.SendPropertyChanged("HasBots");
					this.OnHasBotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMission", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsMission
		{
			get
			{
				return this._IsMission;
			}
			set
			{
				if ((this._IsMission != value))
				{
					this.OnIsMissionChanging(value);
					this.SendPropertyChanging();
					this._IsMission = value;
					this.SendPropertyChanged("IsMission");
					this.OnIsMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplayFileName", DbType="nvarchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string ReplayFileName
		{
			get
			{
				return this._ReplayFileName;
			}
			set
			{
				if ((this._ReplayFileName != value))
				{
					this.OnReplayFileNameChanging(value);
					this.SendPropertyChanging();
					this._ReplayFileName = value;
					this.SendPropertyChanged("ReplayFileName");
					this.OnReplayFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineVersion", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string EngineVersion
		{
			get
			{
				return this._EngineVersion;
			}
			set
			{
				if ((this._EngineVersion != value))
				{
					this.OnEngineVersionChanging(value);
					this.SendPropertyChanging();
					this._EngineVersion = value;
					this.SendPropertyChanged("EngineVersion");
					this.OnEngineVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEloProcessed", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsEloProcessed
		{
			get
			{
				return this._IsEloProcessed;
			}
			set
			{
				if ((this._IsEloProcessed != value))
				{
					this.OnIsEloProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsEloProcessed = value;
					this.SendPropertyChanged("IsEloProcessed");
					this.OnIsEloProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinnerTeamXpChange", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<int> WinnerTeamXpChange
		{
			get
			{
				return this._WinnerTeamXpChange;
			}
			set
			{
				if ((this._WinnerTeamXpChange != value))
				{
					this.OnWinnerTeamXpChangeChanging(value);
					this.SendPropertyChanging();
					this._WinnerTeamXpChange = value;
					this.SendPropertyChanged("WinnerTeamXpChange");
					this.OnWinnerTeamXpChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoserTeamXpChange", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<int> LoserTeamXpChange
		{
			get
			{
				return this._LoserTeamXpChange;
			}
			set
			{
				if ((this._LoserTeamXpChange != value))
				{
					this.OnLoserTeamXpChangeChanging(value);
					this.SendPropertyChanging();
					this._LoserTeamXpChange = value;
					this.SendPropertyChanged("LoserTeamXpChange");
					this.OnLoserTeamXpChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingSum", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> RatingSum
		{
			get
			{
				return this._RatingSum;
			}
			set
			{
				if ((this._RatingSum != value))
				{
					this.OnRatingSumChanging(value);
					this.SendPropertyChanging();
					this._RatingSum = value;
					this.SendPropertyChanged("RatingSum");
					this.OnRatingSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingCount", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> RatingCount
		{
			get
			{
				return this._RatingCount;
			}
			set
			{
				if ((this._RatingCount != value))
				{
					this.OnRatingCountChanging(value);
					this.SendPropertyChanging();
					this._RatingCount = value;
					this.SendPropertyChanged("RatingCount");
					this.OnRatingCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_SpringBattlePlayer", Storage="_SpringBattlePlayers", ThisKey="SpringBattleID", OtherKey="SpringBattleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<SpringBattlePlayer> SpringBattlePlayers
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattlePlayers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattlePlayers;
			}
			set
			{
				this._SpringBattlePlayers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_AccountBattleAward", Storage="_AccountBattleAwards", ThisKey="SpringBattleID", OtherKey="SpringBattleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<AccountBattleAward> AccountBattleAwards
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountBattleAwards.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountBattleAwards;
			}
			set
			{
				this._AccountBattleAwards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_AccountBattleStat", Storage="_AccountBattleStats", ThisKey="SpringBattleID", OtherKey="SpringBattleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<AccountBattleStat> AccountBattleStats
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountBattleStats.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountBattleStats;
			}
			set
			{
				this._AccountBattleStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SpringBattle", Storage="_Account", ThisKey="HostAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.SpringBattles.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.SpringBattles.Add(this);
						this._HostAccountID = value.AccountID;
					}
					else
					{
						this._HostAccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_SpringBattle", Storage="_ResourceByMapResourceID", ThisKey="MapResourceID", OtherKey="ResourceID", IsForeignKey=true)]
		public Resource ResourceByMapResourceID
		{
			get
			{
				return this._ResourceByMapResourceID.Entity;
			}
			set
			{
				Resource previousValue = this._ResourceByMapResourceID.Entity;
				if (((previousValue != value) 
							|| (this._ResourceByMapResourceID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceByMapResourceID.Entity = null;
						previousValue.SpringBattlesByMapResourceID.Remove(this);
					}
					this._ResourceByMapResourceID.Entity = value;
					if ((value != null))
					{
						value.SpringBattlesByMapResourceID.Add(this);
						this._MapResourceID = value.ResourceID;
					}
					else
					{
						this._MapResourceID = default(int);
					}
					this.SendPropertyChanged("ResourceByMapResourceID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_SpringBattle1", Storage="_ResourceByModResourceID", ThisKey="ModResourceID", OtherKey="ResourceID", IsForeignKey=true)]
		public Resource ResourceByModResourceID
		{
			get
			{
				return this._ResourceByModResourceID.Entity;
			}
			set
			{
				Resource previousValue = this._ResourceByModResourceID.Entity;
				if (((previousValue != value) 
							|| (this._ResourceByModResourceID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceByModResourceID.Entity = null;
						previousValue.SpringBattlesByModResourceID.Remove(this);
					}
					this._ResourceByModResourceID.Entity = value;
					if ((value != null))
					{
						value.SpringBattlesByModResourceID.Add(this);
						this._ModResourceID = value.ResourceID;
					}
					else
					{
						this._ModResourceID = default(int);
					}
					this.SendPropertyChanged("ResourceByModResourceID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_SpringBattle", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.SpringBattles = null;
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.SpringBattles = this;
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SpringBattlePlayers(SpringBattlePlayer entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = this;
		}
		
		private void detach_SpringBattlePlayers(SpringBattlePlayer entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = null;
		}
		
		private void attach_AccountBattleAwards(AccountBattleAward entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = this;
		}
		
		private void detach_AccountBattleAwards(AccountBattleAward entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = null;
		}
		
		private void attach_AccountBattleStats(AccountBattleStat entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = this;
		}
		
		private void detach_AccountBattleStats(AccountBattleStat entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = null;
		}
		
		private void Initialize()
		{
			this._SpringBattlePlayers = new EntitySet<SpringBattlePlayer>(new Action<SpringBattlePlayer>(this.attach_SpringBattlePlayers), new Action<SpringBattlePlayer>(this.detach_SpringBattlePlayers));
			this._AccountBattleAwards = new EntitySet<AccountBattleAward>(new Action<AccountBattleAward>(this.attach_AccountBattleAwards), new Action<AccountBattleAward>(this.detach_AccountBattleAwards));
			this._AccountBattleStats = new EntitySet<AccountBattleStat>(new Action<AccountBattleStat>(this.attach_AccountBattleStats), new Action<AccountBattleStat>(this.detach_AccountBattleStats));
			this._Account = default(EntityRef<Account>);
			this._ResourceByMapResourceID = default(EntityRef<Resource>);
			this._ResourceByModResourceID = default(EntityRef<Resource>);
			this._ForumThread = default(EntityRef<ForumThread>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpringBattlePlayer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SpringBattlePlayer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpringBattleID;
		
		private int _AccountID;
		
		private bool _IsSpectator;
		
		private bool _IsInVictoryTeam;
		
		private string _CommanderType;
		
		private System.Nullable<int> _LoseTime;
		
		private int _AllyNumber;
		
		private int _Rank;
		
		private System.Nullable<float> _EloChange;
		
		private System.Nullable<int> _XpChange;
		
		private EntityRef<SpringBattle> _SpringBattle;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnIsSpectatorChanging(bool value);
    partial void OnIsSpectatorChanged();
    partial void OnIsInVictoryTeamChanging(bool value);
    partial void OnIsInVictoryTeamChanged();
    partial void OnCommanderTypeChanging(string value);
    partial void OnCommanderTypeChanged();
    partial void OnLoseTimeChanging(System.Nullable<int> value);
    partial void OnLoseTimeChanged();
    partial void OnAllyNumberChanging(int value);
    partial void OnAllyNumberChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnEloChangeChanging(System.Nullable<float> value);
    partial void OnEloChangeChanged();
    partial void OnXpChangeChanging(System.Nullable<int> value);
    partial void OnXpChangeChanged();
    #endregion
		
		public SpringBattlePlayer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					if (this._SpringBattle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpectator", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsSpectator
		{
			get
			{
				return this._IsSpectator;
			}
			set
			{
				if ((this._IsSpectator != value))
				{
					this.OnIsSpectatorChanging(value);
					this.SendPropertyChanging();
					this._IsSpectator = value;
					this.SendPropertyChanged("IsSpectator");
					this.OnIsSpectatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInVictoryTeam", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsInVictoryTeam
		{
			get
			{
				return this._IsInVictoryTeam;
			}
			set
			{
				if ((this._IsInVictoryTeam != value))
				{
					this.OnIsInVictoryTeamChanging(value);
					this.SendPropertyChanging();
					this._IsInVictoryTeam = value;
					this.SendPropertyChanged("IsInVictoryTeam");
					this.OnIsInVictoryTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderType", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CommanderType
		{
			get
			{
				return this._CommanderType;
			}
			set
			{
				if ((this._CommanderType != value))
				{
					this.OnCommanderTypeChanging(value);
					this.SendPropertyChanging();
					this._CommanderType = value;
					this.SendPropertyChanged("CommanderType");
					this.OnCommanderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoseTime", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> LoseTime
		{
			get
			{
				return this._LoseTime;
			}
			set
			{
				if ((this._LoseTime != value))
				{
					this.OnLoseTimeChanging(value);
					this.SendPropertyChanging();
					this._LoseTime = value;
					this.SendPropertyChanged("LoseTime");
					this.OnLoseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllyNumber", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int AllyNumber
		{
			get
			{
				return this._AllyNumber;
			}
			set
			{
				if ((this._AllyNumber != value))
				{
					this.OnAllyNumberChanging(value);
					this.SendPropertyChanging();
					this._AllyNumber = value;
					this.SendPropertyChanged("AllyNumber");
					this.OnAllyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EloChange", DbType="real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<float> EloChange
		{
			get
			{
				return this._EloChange;
			}
			set
			{
				if ((this._EloChange != value))
				{
					this.OnEloChangeChanging(value);
					this.SendPropertyChanging();
					this._EloChange = value;
					this.SendPropertyChanged("EloChange");
					this.OnEloChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XpChange", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> XpChange
		{
			get
			{
				return this._XpChange;
			}
			set
			{
				if ((this._XpChange != value))
				{
					this.OnXpChangeChanging(value);
					this.SendPropertyChanging();
					this._XpChange = value;
					this.SendPropertyChanged("XpChange");
					this.OnXpChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_SpringBattlePlayer", Storage="_SpringBattle", ThisKey="SpringBattleID", OtherKey="SpringBattleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SpringBattle SpringBattle
		{
			get
			{
				return this._SpringBattle.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattle.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattle.Entity = null;
						previousValue.SpringBattlePlayers.Remove(this);
					}
					this._SpringBattle.Entity = value;
					if ((value != null))
					{
						value.SpringBattlePlayers.Add(this);
						this._SpringBattleID = value.SpringBattleID;
					}
					else
					{
						this._SpringBattleID = default(int);
					}
					this.SendPropertyChanged("SpringBattle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SpringBattlePlayer", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.SpringBattlePlayers.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.SpringBattlePlayers.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SpringBattle = default(EntityRef<SpringBattle>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumCategory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumCategoryID;
		
		private string _Title;
		
		private System.Nullable<int> _ParentForumCategoryID;
		
		private bool _IsLocked;
		
		private bool _IsMissions;
		
		private bool _IsMaps;
		
		private int _SortOrder;
		
		private bool _IsSpringBattles;
		
		private EntitySet<ForumThread> _ForumThreads;
		
		private EntitySet<ForumCategory> _ChildForumCategories;
		
		private EntityRef<ForumCategory> _ParentForumCategory;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumCategoryIDChanging(int value);
    partial void OnForumCategoryIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnParentForumCategoryIDChanging(System.Nullable<int> value);
    partial void OnParentForumCategoryIDChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnIsMissionsChanging(bool value);
    partial void OnIsMissionsChanged();
    partial void OnIsMapsChanging(bool value);
    partial void OnIsMapsChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnIsSpringBattlesChanging(bool value);
    partial void OnIsSpringBattlesChanged();
    #endregion
		
		public ForumCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumCategoryID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumCategoryID
		{
			get
			{
				return this._ForumCategoryID;
			}
			set
			{
				if ((this._ForumCategoryID != value))
				{
					this.OnForumCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ForumCategoryID = value;
					this.SendPropertyChanged("ForumCategoryID");
					this.OnForumCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="nvarchar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentForumCategoryID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ParentForumCategoryID
		{
			get
			{
				return this._ParentForumCategoryID;
			}
			set
			{
				if ((this._ParentForumCategoryID != value))
				{
					if (this._ParentForumCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentForumCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ParentForumCategoryID = value;
					this.SendPropertyChanged("ParentForumCategoryID");
					this.OnParentForumCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMissions", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsMissions
		{
			get
			{
				return this._IsMissions;
			}
			set
			{
				if ((this._IsMissions != value))
				{
					this.OnIsMissionsChanging(value);
					this.SendPropertyChanging();
					this._IsMissions = value;
					this.SendPropertyChanged("IsMissions");
					this.OnIsMissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMaps", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsMaps
		{
			get
			{
				return this._IsMaps;
			}
			set
			{
				if ((this._IsMaps != value))
				{
					this.OnIsMapsChanging(value);
					this.SendPropertyChanging();
					this._IsMaps = value;
					this.SendPropertyChanged("IsMaps");
					this.OnIsMapsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpringBattles", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsSpringBattles
		{
			get
			{
				return this._IsSpringBattles;
			}
			set
			{
				if ((this._IsSpringBattles != value))
				{
					this.OnIsSpringBattlesChanging(value);
					this.SendPropertyChanging();
					this._IsSpringBattles = value;
					this.SendPropertyChanged("IsSpringBattles");
					this.OnIsSpringBattlesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumThread", Storage="_ForumThreads", ThisKey="ForumCategoryID", OtherKey="ForumCategoryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<ForumThread> ForumThreads
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreads;
			}
			set
			{
				this._ForumThreads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumCategory", Storage="_ChildForumCategories", ThisKey="ForumCategoryID", OtherKey="ParentForumCategoryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<ForumCategory> ChildForumCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._ChildForumCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChildForumCategories;
			}
			set
			{
				this._ChildForumCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumCategory", Storage="_ParentForumCategory", ThisKey="ParentForumCategoryID", OtherKey="ForumCategoryID", IsForeignKey=true)]
		public ForumCategory ParentForumCategory
		{
			get
			{
				return this._ParentForumCategory.Entity;
			}
			set
			{
				ForumCategory previousValue = this._ParentForumCategory.Entity;
				if (((previousValue != value) 
							|| (this._ParentForumCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentForumCategory.Entity = null;
						previousValue.ChildForumCategories.Remove(this);
					}
					this._ParentForumCategory.Entity = value;
					if ((value != null))
					{
						value.ChildForumCategories.Add(this);
						this._ParentForumCategoryID = value.ForumCategoryID;
					}
					else
					{
						this._ParentForumCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentForumCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ForumThreads(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.ForumCategory = this;
		}
		
		private void detach_ForumThreads(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.ForumCategory = null;
		}
		
		private void attach_ChildForumCategories(ForumCategory entity)
		{
			this.SendPropertyChanging();
			entity.ParentForumCategory = this;
		}
		
		private void detach_ChildForumCategories(ForumCategory entity)
		{
			this.SendPropertyChanging();
			entity.ParentForumCategory = null;
		}
		
		private void Initialize()
		{
			this._ForumThreads = new EntitySet<ForumThread>(new Action<ForumThread>(this.attach_ForumThreads), new Action<ForumThread>(this.detach_ForumThreads));
			this._ChildForumCategories = new EntitySet<ForumCategory>(new Action<ForumCategory>(this.attach_ChildForumCategories), new Action<ForumCategory>(this.detach_ChildForumCategories));
			this._ParentForumCategory = default(EntityRef<ForumCategory>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumThreadLastRead")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumThreadLastRead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumThreadID;
		
		private int _AccountID;
		
		private System.Nullable<System.DateTime> _LastRead;
		
		private System.Nullable<System.DateTime> _LastPosted;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnLastReadChanging(System.Nullable<System.DateTime> value);
    partial void OnLastReadChanged();
    partial void OnLastPostedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPostedChanged();
    #endregion
		
		public ForumThreadLastRead()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRead", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> LastRead
		{
			get
			{
				return this._LastRead;
			}
			set
			{
				if ((this._LastRead != value))
				{
					this.OnLastReadChanging(value);
					this.SendPropertyChanging();
					this._LastRead = value;
					this.SendPropertyChanged("LastRead");
					this.OnLastReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPosted", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> LastPosted
		{
			get
			{
				return this._LastPosted;
			}
			set
			{
				if ((this._LastPosted != value))
				{
					this.OnLastPostedChanging(value);
					this.SendPropertyChanging();
					this._LastPosted = value;
					this.SendPropertyChanged("LastPosted");
					this.OnLastPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumThreadLastRead", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.ForumThreadLastReads.Remove(this);
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.ForumThreadLastReads.Add(this);
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(int);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThreadLastRead", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.ForumThreadLastReads.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.ForumThreadLastReads.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ForumThread = default(EntityRef<ForumThread>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountBattleAward")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountBattleAward : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _SpringBattleID;
		
		private string _AwardKey;
		
		private string _AwardDescription;
		
		private EntityRef<SpringBattle> _SpringBattle;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    partial void OnAwardKeyChanging(string value);
    partial void OnAwardKeyChanged();
    partial void OnAwardDescriptionChanging(string value);
    partial void OnAwardDescriptionChanged();
    #endregion
		
		public AccountBattleAward()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					if (this._SpringBattle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AwardKey", DbType="varchar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string AwardKey
		{
			get
			{
				return this._AwardKey;
			}
			set
			{
				if ((this._AwardKey != value))
				{
					this.OnAwardKeyChanging(value);
					this.SendPropertyChanging();
					this._AwardKey = value;
					this.SendPropertyChanged("AwardKey");
					this.OnAwardKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AwardDescription", DbType="nvarchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string AwardDescription
		{
			get
			{
				return this._AwardDescription;
			}
			set
			{
				if ((this._AwardDescription != value))
				{
					this.OnAwardDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AwardDescription = value;
					this.SendPropertyChanged("AwardDescription");
					this.OnAwardDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_AccountBattleAward", Storage="_SpringBattle", ThisKey="SpringBattleID", OtherKey="SpringBattleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SpringBattle SpringBattle
		{
			get
			{
				return this._SpringBattle.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattle.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattle.Entity = null;
						previousValue.AccountBattleAwards.Remove(this);
					}
					this._SpringBattle.Entity = value;
					if ((value != null))
					{
						value.AccountBattleAwards.Add(this);
						this._SpringBattleID = value.SpringBattleID;
					}
					else
					{
						this._SpringBattleID = default(int);
					}
					this.SendPropertyChanged("SpringBattle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountBattleAward", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountBattleAwards.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountBattleAwards.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SpringBattle = default(EntityRef<SpringBattle>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountBattleStats")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountBattleStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _SpringBattleID;
		
		private string _StatsKey;
		
		private double _Value;
		
		private EntityRef<SpringBattle> _SpringBattle;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    partial void OnStatsKeyChanging(string value);
    partial void OnStatsKeyChanged();
    partial void OnValueChanging(double value);
    partial void OnValueChanged();
    #endregion
		
		public AccountBattleStat()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					if (this._SpringBattle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatsKey", DbType="varchar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string StatsKey
		{
			get
			{
				return this._StatsKey;
			}
			set
			{
				if ((this._StatsKey != value))
				{
					this.OnStatsKeyChanging(value);
					this.SendPropertyChanging();
					this._StatsKey = value;
					this.SendPropertyChanged("StatsKey");
					this.OnStatsKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Value]", Storage="_Value", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public double Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_AccountBattleStat", Storage="_SpringBattle", ThisKey="SpringBattleID", OtherKey="SpringBattleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SpringBattle SpringBattle
		{
			get
			{
				return this._SpringBattle.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattle.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattle.Entity = null;
						previousValue.AccountBattleStats.Remove(this);
					}
					this._SpringBattle.Entity = value;
					if ((value != null))
					{
						value.AccountBattleStats.Add(this);
						this._SpringBattleID = value.SpringBattleID;
					}
					else
					{
						this._SpringBattleID = default(int);
					}
					this.SendPropertyChanged("SpringBattle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountBattleStat", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountBattleStats.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountBattleStats.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SpringBattle = default(EntityRef<SpringBattle>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unlock")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Unlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UnlockID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private int _NeededLevel;
		
		private string _LimitForChassis;
		
		private UnlockTypes _UnlockType;
		
		private System.Nullable<int> _RequiredUnlockID;
		
		private int _MorphLevel;
		
		private EntitySet<Unlock> _ChildUnlocks;
		
		private EntitySet<AccountUnlock> _AccountUnlocks;
		
		private EntitySet<Commander> _Commanders;
		
		private EntitySet<CommanderModule> _CommanderModules;
		
		private EntityRef<Unlock> _ParentUnlock;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnlockIDChanging(int value);
    partial void OnUnlockIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNeededLevelChanging(int value);
    partial void OnNeededLevelChanged();
    partial void OnLimitForChassisChanging(string value);
    partial void OnLimitForChassisChanged();
    partial void OnUnlockTypeChanging(UnlockTypes value);
    partial void OnUnlockTypeChanged();
    partial void OnRequiredUnlockIDChanging(System.Nullable<int> value);
    partial void OnRequiredUnlockIDChanged();
    partial void OnMorphLevelChanging(int value);
    partial void OnMorphLevelChanged();
    #endregion
		
		public Unlock()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UnlockID
		{
			get
			{
				return this._UnlockID;
			}
			set
			{
				if ((this._UnlockID != value))
				{
					this.OnUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._UnlockID = value;
					this.SendPropertyChanged("UnlockID");
					this.OnUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="nvarchar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="nvarchar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeededLevel", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int NeededLevel
		{
			get
			{
				return this._NeededLevel;
			}
			set
			{
				if ((this._NeededLevel != value))
				{
					this.OnNeededLevelChanging(value);
					this.SendPropertyChanging();
					this._NeededLevel = value;
					this.SendPropertyChanged("NeededLevel");
					this.OnNeededLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitForChassis", DbType="nvarchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string LimitForChassis
		{
			get
			{
				return this._LimitForChassis;
			}
			set
			{
				if ((this._LimitForChassis != value))
				{
					this.OnLimitForChassisChanging(value);
					this.SendPropertyChanging();
					this._LimitForChassis = value;
					this.SendPropertyChanged("LimitForChassis");
					this.OnLimitForChassisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockType", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public UnlockTypes UnlockType
		{
			get
			{
				return this._UnlockType;
			}
			set
			{
				if ((this._UnlockType != value))
				{
					this.OnUnlockTypeChanging(value);
					this.SendPropertyChanging();
					this._UnlockType = value;
					this.SendPropertyChanged("UnlockType");
					this.OnUnlockTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredUnlockID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> RequiredUnlockID
		{
			get
			{
				return this._RequiredUnlockID;
			}
			set
			{
				if ((this._RequiredUnlockID != value))
				{
					if (this._ParentUnlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequiredUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._RequiredUnlockID = value;
					this.SendPropertyChanged("RequiredUnlockID");
					this.OnRequiredUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorphLevel", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int MorphLevel
		{
			get
			{
				return this._MorphLevel;
			}
			set
			{
				if ((this._MorphLevel != value))
				{
					this.OnMorphLevelChanging(value);
					this.SendPropertyChanging();
					this._MorphLevel = value;
					this.SendPropertyChanged("MorphLevel");
					this.OnMorphLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_Unlock", Storage="_ChildUnlocks", ThisKey="UnlockID", OtherKey="RequiredUnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Unlock> ChildUnlocks
		{
			get
			{
				if ((this.serializing 
							&& (this._ChildUnlocks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChildUnlocks;
			}
			set
			{
				this._ChildUnlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_AccountUnlock", Storage="_AccountUnlocks", ThisKey="UnlockID", OtherKey="UnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<AccountUnlock> AccountUnlocks
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountUnlocks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountUnlocks;
			}
			set
			{
				this._AccountUnlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_Commander", Storage="_Commanders", ThisKey="UnlockID", OtherKey="ChassisUnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<Commander> Commanders
		{
			get
			{
				if ((this.serializing 
							&& (this._Commanders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Commanders;
			}
			set
			{
				this._Commanders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_CommanderModule", Storage="_CommanderModules", ThisKey="UnlockID", OtherKey="ModuleUnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<CommanderModule> CommanderModules
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderModules.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommanderModules;
			}
			set
			{
				this._CommanderModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_Unlock", Storage="_ParentUnlock", ThisKey="RequiredUnlockID", OtherKey="UnlockID", IsForeignKey=true)]
		public Unlock ParentUnlock
		{
			get
			{
				return this._ParentUnlock.Entity;
			}
			set
			{
				Unlock previousValue = this._ParentUnlock.Entity;
				if (((previousValue != value) 
							|| (this._ParentUnlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentUnlock.Entity = null;
						previousValue.ChildUnlocks.Remove(this);
					}
					this._ParentUnlock.Entity = value;
					if ((value != null))
					{
						value.ChildUnlocks.Add(this);
						this._RequiredUnlockID = value.UnlockID;
					}
					else
					{
						this._RequiredUnlockID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentUnlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChildUnlocks(Unlock entity)
		{
			this.SendPropertyChanging();
			entity.ParentUnlock = this;
		}
		
		private void detach_ChildUnlocks(Unlock entity)
		{
			this.SendPropertyChanging();
			entity.ParentUnlock = null;
		}
		
		private void attach_AccountUnlocks(AccountUnlock entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = this;
		}
		
		private void detach_AccountUnlocks(AccountUnlock entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = null;
		}
		
		private void attach_Commanders(Commander entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = this;
		}
		
		private void detach_Commanders(Commander entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = null;
		}
		
		private void attach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = this;
		}
		
		private void detach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = null;
		}
		
		private void Initialize()
		{
			this._ChildUnlocks = new EntitySet<Unlock>(new Action<Unlock>(this.attach_ChildUnlocks), new Action<Unlock>(this.detach_ChildUnlocks));
			this._AccountUnlocks = new EntitySet<AccountUnlock>(new Action<AccountUnlock>(this.attach_AccountUnlocks), new Action<AccountUnlock>(this.detach_AccountUnlocks));
			this._Commanders = new EntitySet<Commander>(new Action<Commander>(this.attach_Commanders), new Action<Commander>(this.detach_Commanders));
			this._CommanderModules = new EntitySet<CommanderModule>(new Action<CommanderModule>(this.attach_CommanderModules), new Action<CommanderModule>(this.detach_CommanderModules));
			this._ParentUnlock = default(EntityRef<Unlock>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountUnlock")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountUnlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _UnlockID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Unlock> _Unlock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnUnlockIDChanging(int value);
    partial void OnUnlockIDChanged();
    #endregion
		
		public AccountUnlock()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UnlockID
		{
			get
			{
				return this._UnlockID;
			}
			set
			{
				if ((this._UnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._UnlockID = value;
					this.SendPropertyChanged("UnlockID");
					this.OnUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountUnlock", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountUnlocks.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountUnlocks.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_AccountUnlock", Storage="_Unlock", ThisKey="UnlockID", OtherKey="UnlockID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.AccountUnlocks.Remove(this);
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.AccountUnlocks.Add(this);
						this._UnlockID = value.UnlockID;
					}
					else
					{
						this._UnlockID = default(int);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._Unlock = default(EntityRef<Unlock>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpringBattleRating")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SpringBattleRating
	{
		
		private int _SpringBattleID;
		
		private int _AccountID;
		
		private int _Rating;
		
		public SpringBattleRating()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					this._SpringBattleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this._AccountID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this._Rating = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commander")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Commander : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommanderID;
		
		private int _AccountID;
		
		private int _ProfileNumber;
		
		private string _Name;
		
		private int _ChassisUnlockID;
		
		private EntitySet<CommanderModule> _CommanderModules;
		
		private EntityRef<Unlock> _Unlock;
		
		private EntityRef<Account> _AccountByAccountID;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommanderIDChanging(int value);
    partial void OnCommanderIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnProfileNumberChanging(int value);
    partial void OnProfileNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnChassisUnlockIDChanging(int value);
    partial void OnChassisUnlockIDChanged();
    #endregion
		
		public Commander()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CommanderID
		{
			get
			{
				return this._CommanderID;
			}
			set
			{
				if ((this._CommanderID != value))
				{
					this.OnCommanderIDChanging(value);
					this.SendPropertyChanging();
					this._CommanderID = value;
					this.SendPropertyChanged("CommanderID");
					this.OnCommanderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._AccountByAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileNumber", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ProfileNumber
		{
			get
			{
				return this._ProfileNumber;
			}
			set
			{
				if ((this._ProfileNumber != value))
				{
					this.OnProfileNumberChanging(value);
					this.SendPropertyChanging();
					this._ProfileNumber = value;
					this.SendPropertyChanged("ProfileNumber");
					this.OnProfileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChassisUnlockID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int ChassisUnlockID
		{
			get
			{
				return this._ChassisUnlockID;
			}
			set
			{
				if ((this._ChassisUnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChassisUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._ChassisUnlockID = value;
					this.SendPropertyChanged("ChassisUnlockID");
					this.OnChassisUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commander_CommanderModule", Storage="_CommanderModules", ThisKey="CommanderID", OtherKey="CommanderID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CommanderModule> CommanderModules
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderModules.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommanderModules;
			}
			set
			{
				this._CommanderModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_Commander", Storage="_Unlock", ThisKey="ChassisUnlockID", OtherKey="UnlockID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.Commanders.Remove(this);
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.Commanders.Add(this);
						this._ChassisUnlockID = value.UnlockID;
					}
					else
					{
						this._ChassisUnlockID = default(int);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Commander", Storage="_AccountByAccountID", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByAccountID
		{
			get
			{
				return this._AccountByAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByAccountID.Entity = null;
						previousValue.Commanders.Remove(this);
					}
					this._AccountByAccountID.Entity = value;
					if ((value != null))
					{
						value.Commanders.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("AccountByAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.Commander = this;
		}
		
		private void detach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.Commander = null;
		}
		
		private void Initialize()
		{
			this._CommanderModules = new EntitySet<CommanderModule>(new Action<CommanderModule>(this.attach_CommanderModules), new Action<CommanderModule>(this.detach_CommanderModules));
			this._Unlock = default(EntityRef<Unlock>);
			this._AccountByAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommanderModule")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommanderModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommanderID;
		
		private int _ModuleUnlockID;
		
		private int _SlotID;
		
		private EntityRef<Unlock> _Unlock;
		
		private EntityRef<Commander> _Commander;
		
		private EntityRef<CommanderSlot> _CommanderSlot;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommanderIDChanging(int value);
    partial void OnCommanderIDChanged();
    partial void OnModuleUnlockIDChanging(int value);
    partial void OnModuleUnlockIDChanged();
    partial void OnSlotIDChanging(int value);
    partial void OnSlotIDChanged();
    #endregion
		
		public CommanderModule()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CommanderID
		{
			get
			{
				return this._CommanderID;
			}
			set
			{
				if ((this._CommanderID != value))
				{
					if (this._Commander.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommanderIDChanging(value);
					this.SendPropertyChanging();
					this._CommanderID = value;
					this.SendPropertyChanged("CommanderID");
					this.OnCommanderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleUnlockID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ModuleUnlockID
		{
			get
			{
				return this._ModuleUnlockID;
			}
			set
			{
				if ((this._ModuleUnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleUnlockID = value;
					this.SendPropertyChanged("ModuleUnlockID");
					this.OnModuleUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlotID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SlotID
		{
			get
			{
				return this._SlotID;
			}
			set
			{
				if ((this._SlotID != value))
				{
					if (this._CommanderSlot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSlotIDChanging(value);
					this.SendPropertyChanging();
					this._SlotID = value;
					this.SendPropertyChanged("SlotID");
					this.OnSlotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_CommanderModule", Storage="_Unlock", ThisKey="ModuleUnlockID", OtherKey="UnlockID", IsForeignKey=true)]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.CommanderModules.Remove(this);
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.CommanderModules.Add(this);
						this._ModuleUnlockID = value.UnlockID;
					}
					else
					{
						this._ModuleUnlockID = default(int);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commander_CommanderModule", Storage="_Commander", ThisKey="CommanderID", OtherKey="CommanderID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Commander Commander
		{
			get
			{
				return this._Commander.Entity;
			}
			set
			{
				Commander previousValue = this._Commander.Entity;
				if (((previousValue != value) 
							|| (this._Commander.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Commander.Entity = null;
						previousValue.CommanderModules.Remove(this);
					}
					this._Commander.Entity = value;
					if ((value != null))
					{
						value.CommanderModules.Add(this);
						this._CommanderID = value.CommanderID;
					}
					else
					{
						this._CommanderID = default(int);
					}
					this.SendPropertyChanged("Commander");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommanderSlot_CommanderModule", Storage="_CommanderSlot", ThisKey="SlotID", OtherKey="CommanderSlotID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CommanderSlot CommanderSlot
		{
			get
			{
				return this._CommanderSlot.Entity;
			}
			set
			{
				CommanderSlot previousValue = this._CommanderSlot.Entity;
				if (((previousValue != value) 
							|| (this._CommanderSlot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommanderSlot.Entity = null;
						previousValue.CommanderModules.Remove(this);
					}
					this._CommanderSlot.Entity = value;
					if ((value != null))
					{
						value.CommanderModules.Add(this);
						this._SlotID = value.CommanderSlotID;
					}
					else
					{
						this._SlotID = default(int);
					}
					this.SendPropertyChanged("CommanderSlot");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Unlock = default(EntityRef<Unlock>);
			this._Commander = default(EntityRef<Commander>);
			this._CommanderSlot = default(EntityRef<CommanderSlot>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommanderSlot")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommanderSlot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommanderSlotID;
		
		private int _MorphLevel;
		
		private UnlockTypes _UnlockType;
		
		private EntitySet<CommanderModule> _CommanderModules;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommanderSlotIDChanging(int value);
    partial void OnCommanderSlotIDChanged();
    partial void OnMorphLevelChanging(int value);
    partial void OnMorphLevelChanged();
    partial void OnUnlockTypeChanging(UnlockTypes value);
    partial void OnUnlockTypeChanged();
    #endregion
		
		public CommanderSlot()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderSlotID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CommanderSlotID
		{
			get
			{
				return this._CommanderSlotID;
			}
			set
			{
				if ((this._CommanderSlotID != value))
				{
					this.OnCommanderSlotIDChanging(value);
					this.SendPropertyChanging();
					this._CommanderSlotID = value;
					this.SendPropertyChanged("CommanderSlotID");
					this.OnCommanderSlotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorphLevel", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int MorphLevel
		{
			get
			{
				return this._MorphLevel;
			}
			set
			{
				if ((this._MorphLevel != value))
				{
					this.OnMorphLevelChanging(value);
					this.SendPropertyChanging();
					this._MorphLevel = value;
					this.SendPropertyChanged("MorphLevel");
					this.OnMorphLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockType", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public UnlockTypes UnlockType
		{
			get
			{
				return this._UnlockType;
			}
			set
			{
				if ((this._UnlockType != value))
				{
					this.OnUnlockTypeChanging(value);
					this.SendPropertyChanging();
					this._UnlockType = value;
					this.SendPropertyChanged("UnlockType");
					this.OnUnlockTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommanderSlot_CommanderModule", Storage="_CommanderModules", ThisKey="CommanderSlotID", OtherKey="SlotID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<CommanderModule> CommanderModules
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderModules.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommanderModules;
			}
			set
			{
				this._CommanderModules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.CommanderSlot = this;
		}
		
		private void detach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.CommanderSlot = null;
		}
		
		private void Initialize()
		{
			this._CommanderModules = new EntitySet<CommanderModule>(new Action<CommanderModule>(this.attach_CommanderModules), new Action<CommanderModule>(this.detach_CommanderModules));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
}
#pragma warning restore 1591
