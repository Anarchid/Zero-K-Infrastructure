#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZkData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="zero-k")]
	public partial class ZkDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertMission(Mission instance);
    partial void UpdateMission(Mission instance);
    partial void DeleteMission(Mission instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertLobbyMessage(LobbyMessage instance);
    partial void UpdateLobbyMessage(LobbyMessage instance);
    partial void DeleteLobbyMessage(LobbyMessage instance);
    partial void InsertLobbyChannelSubscription(LobbyChannelSubscription instance);
    partial void UpdateLobbyChannelSubscription(LobbyChannelSubscription instance);
    partial void DeleteLobbyChannelSubscription(LobbyChannelSubscription instance);
    partial void InsertForumThread(ForumThread instance);
    partial void UpdateForumThread(ForumThread instance);
    partial void DeleteForumThread(ForumThread instance);
    partial void InsertExceptionLog(ExceptionLog instance);
    partial void UpdateExceptionLog(ExceptionLog instance);
    partial void DeleteExceptionLog(ExceptionLog instance);
    partial void InsertResourceDependency(ResourceDependency instance);
    partial void UpdateResourceDependency(ResourceDependency instance);
    partial void DeleteResourceDependency(ResourceDependency instance);
    partial void InsertResourceContentFile(ResourceContentFile instance);
    partial void UpdateResourceContentFile(ResourceContentFile instance);
    partial void DeleteResourceContentFile(ResourceContentFile instance);
    partial void InsertResourceSpringHash(ResourceSpringHash instance);
    partial void UpdateResourceSpringHash(ResourceSpringHash instance);
    partial void DeleteResourceSpringHash(ResourceSpringHash instance);
    partial void InsertResource(Resource instance);
    partial void UpdateResource(Resource instance);
    partial void DeleteResource(Resource instance);
    partial void InsertMissionScore(MissionScore instance);
    partial void UpdateMissionScore(MissionScore instance);
    partial void DeleteMissionScore(MissionScore instance);
    partial void InsertRating(Rating instance);
    partial void UpdateRating(Rating instance);
    partial void DeleteRating(Rating instance);
    partial void InsertForumPost(ForumPost instance);
    partial void UpdateForumPost(ForumPost instance);
    partial void DeleteForumPost(ForumPost instance);
    partial void InsertMapRating(MapRating instance);
    partial void UpdateMapRating(MapRating instance);
    partial void DeleteMapRating(MapRating instance);
    partial void InsertSpringBattle(SpringBattle instance);
    partial void UpdateSpringBattle(SpringBattle instance);
    partial void DeleteSpringBattle(SpringBattle instance);
    partial void InsertSpringBattlePlayer(SpringBattlePlayer instance);
    partial void UpdateSpringBattlePlayer(SpringBattlePlayer instance);
    partial void DeleteSpringBattlePlayer(SpringBattlePlayer instance);
    partial void InsertForumCategory(ForumCategory instance);
    partial void UpdateForumCategory(ForumCategory instance);
    partial void DeleteForumCategory(ForumCategory instance);
    partial void InsertForumThreadLastRead(ForumThreadLastRead instance);
    partial void UpdateForumThreadLastRead(ForumThreadLastRead instance);
    partial void DeleteForumThreadLastRead(ForumThreadLastRead instance);
    partial void InsertAccountBattleAward(AccountBattleAward instance);
    partial void UpdateAccountBattleAward(AccountBattleAward instance);
    partial void DeleteAccountBattleAward(AccountBattleAward instance);
    partial void InsertAccountBattleStat(AccountBattleStat instance);
    partial void UpdateAccountBattleStat(AccountBattleStat instance);
    partial void DeleteAccountBattleStat(AccountBattleStat instance);
    partial void InsertUnlock(Unlock instance);
    partial void UpdateUnlock(Unlock instance);
    partial void DeleteUnlock(Unlock instance);
    partial void InsertAccountUnlock(AccountUnlock instance);
    partial void UpdateAccountUnlock(AccountUnlock instance);
    partial void DeleteAccountUnlock(AccountUnlock instance);
    partial void InsertCommander(Commander instance);
    partial void UpdateCommander(Commander instance);
    partial void DeleteCommander(Commander instance);
    partial void InsertCommanderModule(CommanderModule instance);
    partial void UpdateCommanderModule(CommanderModule instance);
    partial void DeleteCommanderModule(CommanderModule instance);
    partial void InsertCommanderSlot(CommanderSlot instance);
    partial void UpdateCommanderSlot(CommanderSlot instance);
    partial void DeleteCommanderSlot(CommanderSlot instance);
    partial void InsertPoll(Poll instance);
    partial void UpdatePoll(Poll instance);
    partial void DeletePoll(Poll instance);
    partial void InsertPollVote(PollVote instance);
    partial void UpdatePollVote(PollVote instance);
    partial void DeletePollVote(PollVote instance);
    partial void InsertPollOption(PollOption instance);
    partial void UpdatePollOption(PollOption instance);
    partial void DeletePollOption(PollOption instance);
    partial void InsertTreatyOffer(TreatyOffer instance);
    partial void UpdateTreatyOffer(TreatyOffer instance);
    partial void DeleteTreatyOffer(TreatyOffer instance);
    partial void InsertLink(Link instance);
    partial void UpdateLink(Link instance);
    partial void DeleteLink(Link instance);
    partial void InsertClan(Clan instance);
    partial void UpdateClan(Clan instance);
    partial void DeleteClan(Clan instance);
    partial void InsertPlanet(Planet instance);
    partial void UpdatePlanet(Planet instance);
    partial void DeletePlanet(Planet instance);
    partial void InsertMarketOffer(MarketOffer instance);
    partial void UpdateMarketOffer(MarketOffer instance);
    partial void DeleteMarketOffer(MarketOffer instance);
    partial void InsertAccountPlanet(AccountPlanet instance);
    partial void UpdateAccountPlanet(AccountPlanet instance);
    partial void DeleteAccountPlanet(AccountPlanet instance);
    partial void InsertPlanetwarsConfig(PlanetwarsConfig instance);
    partial void UpdatePlanetwarsConfig(PlanetwarsConfig instance);
    partial void DeletePlanetwarsConfig(PlanetwarsConfig instance);
    partial void InsertEventClan(EventClan instance);
    partial void UpdateEventClan(EventClan instance);
    partial void DeleteEventClan(EventClan instance);
    partial void InsertEventAccount(EventAccount instance);
    partial void UpdateEventAccount(EventAccount instance);
    partial void DeleteEventAccount(EventAccount instance);
    partial void InsertEventPlanet(EventPlanet instance);
    partial void UpdateEventPlanet(EventPlanet instance);
    partial void DeleteEventPlanet(EventPlanet instance);
    partial void InsertEventSpringBattle(EventSpringBattle instance);
    partial void UpdateEventSpringBattle(EventSpringBattle instance);
    partial void DeleteEventSpringBattle(EventSpringBattle instance);
    partial void InsertPlanetOwnerHistory(PlanetOwnerHistory instance);
    partial void UpdatePlanetOwnerHistory(PlanetOwnerHistory instance);
    partial void DeletePlanetOwnerHistory(PlanetOwnerHistory instance);
    partial void InsertPlanetInfluenceHistory(PlanetInfluenceHistory instance);
    partial void UpdatePlanetInfluenceHistory(PlanetInfluenceHistory instance);
    partial void DeletePlanetInfluenceHistory(PlanetInfluenceHistory instance);
    #endregion
		
		public ZkDataContext() : 
				base(global::PlasmaShared.Properties.Settings.Default.zero_kConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ZkDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZkDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZkDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZkDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<Mission> Missions
		{
			get
			{
				return this.GetTable<Mission>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<LobbyMessage> LobbyMessages
		{
			get
			{
				return this.GetTable<LobbyMessage>();
			}
		}
		
		public System.Data.Linq.Table<LobbyChannelSubscription> LobbyChannelSubscriptions
		{
			get
			{
				return this.GetTable<LobbyChannelSubscription>();
			}
		}
		
		public System.Data.Linq.Table<ForumThread> ForumThreads
		{
			get
			{
				return this.GetTable<ForumThread>();
			}
		}
		
		public System.Data.Linq.Table<ExceptionLog> ExceptionLogs
		{
			get
			{
				return this.GetTable<ExceptionLog>();
			}
		}
		
		public System.Data.Linq.Table<ResourceDependency> ResourceDependencies
		{
			get
			{
				return this.GetTable<ResourceDependency>();
			}
		}
		
		public System.Data.Linq.Table<ResourceContentFile> ResourceContentFiles
		{
			get
			{
				return this.GetTable<ResourceContentFile>();
			}
		}
		
		public System.Data.Linq.Table<ResourceSpringHash> ResourceSpringHashes
		{
			get
			{
				return this.GetTable<ResourceSpringHash>();
			}
		}
		
		public System.Data.Linq.Table<Resource> Resources
		{
			get
			{
				return this.GetTable<Resource>();
			}
		}
		
		public System.Data.Linq.Table<MissionScore> MissionScores
		{
			get
			{
				return this.GetTable<MissionScore>();
			}
		}
		
		public System.Data.Linq.Table<Rating> Ratings
		{
			get
			{
				return this.GetTable<Rating>();
			}
		}
		
		public System.Data.Linq.Table<ForumPost> ForumPosts
		{
			get
			{
				return this.GetTable<ForumPost>();
			}
		}
		
		public System.Data.Linq.Table<MapRating> MapRatings
		{
			get
			{
				return this.GetTable<MapRating>();
			}
		}
		
		public System.Data.Linq.Table<SpringBattle> SpringBattles
		{
			get
			{
				return this.GetTable<SpringBattle>();
			}
		}
		
		public System.Data.Linq.Table<SpringBattlePlayer> SpringBattlePlayers
		{
			get
			{
				return this.GetTable<SpringBattlePlayer>();
			}
		}
		
		public System.Data.Linq.Table<ForumCategory> ForumCategories
		{
			get
			{
				return this.GetTable<ForumCategory>();
			}
		}
		
		public System.Data.Linq.Table<ForumThreadLastRead> ForumThreadLastReads
		{
			get
			{
				return this.GetTable<ForumThreadLastRead>();
			}
		}
		
		public System.Data.Linq.Table<AccountBattleAward> AccountBattleAwards
		{
			get
			{
				return this.GetTable<AccountBattleAward>();
			}
		}
		
		public System.Data.Linq.Table<AccountBattleStat> AccountBattleStats
		{
			get
			{
				return this.GetTable<AccountBattleStat>();
			}
		}
		
		public System.Data.Linq.Table<Unlock> Unlocks
		{
			get
			{
				return this.GetTable<Unlock>();
			}
		}
		
		public System.Data.Linq.Table<AccountUnlock> AccountUnlocks
		{
			get
			{
				return this.GetTable<AccountUnlock>();
			}
		}
		
		public System.Data.Linq.Table<Commander> Commanders
		{
			get
			{
				return this.GetTable<Commander>();
			}
		}
		
		public System.Data.Linq.Table<CommanderModule> CommanderModules
		{
			get
			{
				return this.GetTable<CommanderModule>();
			}
		}
		
		public System.Data.Linq.Table<CommanderSlot> CommanderSlots
		{
			get
			{
				return this.GetTable<CommanderSlot>();
			}
		}
		
		public System.Data.Linq.Table<Poll> Polls
		{
			get
			{
				return this.GetTable<Poll>();
			}
		}
		
		public System.Data.Linq.Table<PollVote> PollVotes
		{
			get
			{
				return this.GetTable<PollVote>();
			}
		}
		
		public System.Data.Linq.Table<PollOption> PollOptions
		{
			get
			{
				return this.GetTable<PollOption>();
			}
		}
		
		public System.Data.Linq.Table<TreatyOffer> TreatyOffers
		{
			get
			{
				return this.GetTable<TreatyOffer>();
			}
		}
		
		public System.Data.Linq.Table<Link> Links
		{
			get
			{
				return this.GetTable<Link>();
			}
		}
		
		public System.Data.Linq.Table<Clan> Clans
		{
			get
			{
				return this.GetTable<Clan>();
			}
		}
		
		public System.Data.Linq.Table<Planet> Planets
		{
			get
			{
				return this.GetTable<Planet>();
			}
		}
		
		public System.Data.Linq.Table<MarketOffer> MarketOffers
		{
			get
			{
				return this.GetTable<MarketOffer>();
			}
		}
		
		public System.Data.Linq.Table<AccountPlanet> AccountPlanets
		{
			get
			{
				return this.GetTable<AccountPlanet>();
			}
		}
		
		public System.Data.Linq.Table<PlanetwarsConfig> PlanetwarsConfigs
		{
			get
			{
				return this.GetTable<PlanetwarsConfig>();
			}
		}
		
		public System.Data.Linq.Table<EventClan> EventClans
		{
			get
			{
				return this.GetTable<EventClan>();
			}
		}
		
		public System.Data.Linq.Table<EventAccount> EventAccounts
		{
			get
			{
				return this.GetTable<EventAccount>();
			}
		}
		
		public System.Data.Linq.Table<EventPlanet> EventPlanets
		{
			get
			{
				return this.GetTable<EventPlanet>();
			}
		}
		
		public System.Data.Linq.Table<EventSpringBattle> EventSpringBattles
		{
			get
			{
				return this.GetTable<EventSpringBattle>();
			}
		}
		
		public System.Data.Linq.Table<PlanetOwnerHistory> PlanetOwnerHistories
		{
			get
			{
				return this.GetTable<PlanetOwnerHistory>();
			}
		}
		
		public System.Data.Linq.Table<PlanetInfluenceHistory> PlanetInfluenceHistories
		{
			get
			{
				return this.GetTable<PlanetInfluenceHistory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private string _Text;
		
		private int _EventType;
		
		private System.DateTime _Time;
		
		private int _Turn;
		
		private EntitySet<EventClan> _EventClans;
		
		private EntitySet<EventAccount> _EventAccounts;
		
		private EntitySet<EventPlanet> _EventPlanets;
		
		private EntitySet<EventSpringBattle> _EventSpringBattles;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnEventTypeChanging(int value);
    partial void OnEventTypeChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnTurnChanging(int value);
    partial void OnTurnChanged();
    #endregion
		
		public Event()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Turn", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int Turn
		{
			get
			{
				return this._Turn;
			}
			set
			{
				if ((this._Turn != value))
				{
					this.OnTurnChanging(value);
					this.SendPropertyChanging();
					this._Turn = value;
					this.SendPropertyChanged("Turn");
					this.OnTurnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventClan", Storage="_EventClans", ThisKey="EventID", OtherKey="EventID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<EventClan> EventClans
		{
			get
			{
				if ((this.serializing 
							&& (this._EventClans.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventClans;
			}
			set
			{
				this._EventClans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventAccount", Storage="_EventAccounts", ThisKey="EventID", OtherKey="EventID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<EventAccount> EventAccounts
		{
			get
			{
				if ((this.serializing 
							&& (this._EventAccounts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventAccounts;
			}
			set
			{
				this._EventAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventPlanet", Storage="_EventPlanets", ThisKey="EventID", OtherKey="EventID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<EventPlanet> EventPlanets
		{
			get
			{
				if ((this.serializing 
							&& (this._EventPlanets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventPlanets;
			}
			set
			{
				this._EventPlanets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventSpringBattle", Storage="_EventSpringBattles", ThisKey="EventID", OtherKey="EventID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<EventSpringBattle> EventSpringBattles
		{
			get
			{
				if ((this.serializing 
							&& (this._EventSpringBattles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventSpringBattles;
			}
			set
			{
				this._EventSpringBattles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventClans(EventClan entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = this;
		}
		
		private void detach_EventClans(EventClan entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = null;
		}
		
		private void attach_EventAccounts(EventAccount entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = this;
		}
		
		private void detach_EventAccounts(EventAccount entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = null;
		}
		
		private void attach_EventPlanets(EventPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = this;
		}
		
		private void detach_EventPlanets(EventPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = null;
		}
		
		private void attach_EventSpringBattles(EventSpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = this;
		}
		
		private void detach_EventSpringBattles(EventSpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = null;
		}
		
		private void Initialize()
		{
			this._EventClans = new EntitySet<EventClan>(new Action<EventClan>(this.attach_EventClans), new Action<EventClan>(this.detach_EventClans));
			this._EventAccounts = new EntitySet<EventAccount>(new Action<EventAccount>(this.attach_EventAccounts), new Action<EventAccount>(this.detach_EventAccounts));
			this._EventPlanets = new EntitySet<EventPlanet>(new Action<EventPlanet>(this.attach_EventPlanets), new Action<EventPlanet>(this.detach_EventPlanets));
			this._EventSpringBattles = new EntitySet<EventSpringBattle>(new Action<EventSpringBattle>(this.attach_EventSpringBattles), new Action<EventSpringBattle>(this.detach_EventSpringBattles));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mission")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Mission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MissionID;
		
		private string _Name;
		
		private string _Mod;
		
		private string _Map;
		
		private System.Data.Linq.Link<System.Data.Linq.Binary> _Mutator;
		
		private System.Data.Linq.Link<System.Data.Linq.Binary> _Image;
		
		private string _Description;
		
		private System.DateTime _CreatedTime;
		
		private System.DateTime _ModifiedTime;
		
		private string _ScoringMethod;
		
		private string _TopScoreLine;
		
		private string _MissionEditorVersion;
		
		private string _SpringVersion;
		
		private int _Revision;
		
		private System.Data.Linq.Link<string> _Script;
		
		private string _TokenCondition;
		
		private System.Nullable<int> _CampaignID;
		
		private int _AccountID;
		
		private string _ModOptions;
		
		private string _ModRapidTag;
		
		private int _MinHumans;
		
		private int _MaxHumans;
		
		private bool _IsScriptMission;
		
		private int _MissionRunCount;
		
		private bool _IsDeleted;
		
		private string _ManualDependencies;
		
		private System.Nullable<float> _Rating;
		
		private System.Nullable<float> _Difficulty;
		
		private bool _IsCoop;
		
		private int _ForumThreadID;
		
		private System.Nullable<float> _FeaturedOrder;
		
		private EntityRef<Mission> _ChildMission;
		
		private EntityRef<Resource> _Resources;
		
		private EntitySet<MissionScore> _MissionScores;
		
		private EntitySet<Rating> _Ratings;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Mission> _ParentMission;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMissionIDChanging(int value);
    partial void OnMissionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModChanging(string value);
    partial void OnModChanged();
    partial void OnMapChanging(string value);
    partial void OnMapChanged();
    partial void OnMutatorChanging(System.Data.Linq.Binary value);
    partial void OnMutatorChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedTimeChanging(System.DateTime value);
    partial void OnCreatedTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    partial void OnScoringMethodChanging(string value);
    partial void OnScoringMethodChanged();
    partial void OnTopScoreLineChanging(string value);
    partial void OnTopScoreLineChanged();
    partial void OnMissionEditorVersionChanging(string value);
    partial void OnMissionEditorVersionChanged();
    partial void OnSpringVersionChanging(string value);
    partial void OnSpringVersionChanged();
    partial void OnRevisionChanging(int value);
    partial void OnRevisionChanged();
    partial void OnScriptChanging(string value);
    partial void OnScriptChanged();
    partial void OnTokenConditionChanging(string value);
    partial void OnTokenConditionChanged();
    partial void OnCampaignIDChanging(System.Nullable<int> value);
    partial void OnCampaignIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnModOptionsChanging(string value);
    partial void OnModOptionsChanged();
    partial void OnModRapidTagChanging(string value);
    partial void OnModRapidTagChanged();
    partial void OnMinHumansChanging(int value);
    partial void OnMinHumansChanged();
    partial void OnMaxHumansChanging(int value);
    partial void OnMaxHumansChanged();
    partial void OnIsScriptMissionChanging(bool value);
    partial void OnIsScriptMissionChanged();
    partial void OnMissionRunCountChanging(int value);
    partial void OnMissionRunCountChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnManualDependenciesChanging(string value);
    partial void OnManualDependenciesChanged();
    partial void OnRatingChanging(System.Nullable<float> value);
    partial void OnRatingChanged();
    partial void OnDifficultyChanging(System.Nullable<float> value);
    partial void OnDifficultyChanged();
    partial void OnIsCoopChanging(bool value);
    partial void OnIsCoopChanged();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    partial void OnFeaturedOrderChanging(System.Nullable<float> value);
    partial void OnFeaturedOrderChanged();
    #endregion
		
		public Mission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._ParentMission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mod", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Mod
		{
			get
			{
				return this._Mod;
			}
			set
			{
				if ((this._Mod != value))
				{
					this.OnModChanging(value);
					this.SendPropertyChanging();
					this._Mod = value;
					this.SendPropertyChanged("Mod");
					this.OnModChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Map", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Map
		{
			get
			{
				return this._Map;
			}
			set
			{
				if ((this._Map != value))
				{
					this.OnMapChanging(value);
					this.SendPropertyChanging();
					this._Map = value;
					this.SendPropertyChanged("Map");
					this.OnMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mutator", DbType="varbinary(max)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Data.Linq.Binary Mutator
		{
			get
			{
				return this._Mutator.Value;
			}
			set
			{
				if ((this._Mutator.Value != value))
				{
					this.OnMutatorChanging(value);
					this.SendPropertyChanging();
					this._Mutator.Value = value;
					this.SendPropertyChanged("Mutator");
					this.OnMutatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="varbinary(max) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image.Value;
			}
			set
			{
				if ((this._Image.Value != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image.Value = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedTime", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime CreatedTime
		{
			get
			{
				return this._CreatedTime;
			}
			set
			{
				if ((this._CreatedTime != value))
				{
					this.OnCreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedTime = value;
					this.SendPropertyChanged("CreatedTime");
					this.OnCreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoringMethod", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string ScoringMethod
		{
			get
			{
				return this._ScoringMethod;
			}
			set
			{
				if ((this._ScoringMethod != value))
				{
					this.OnScoringMethodChanging(value);
					this.SendPropertyChanging();
					this._ScoringMethod = value;
					this.SendPropertyChanged("ScoringMethod");
					this.OnScoringMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopScoreLine", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string TopScoreLine
		{
			get
			{
				return this._TopScoreLine;
			}
			set
			{
				if ((this._TopScoreLine != value))
				{
					this.OnTopScoreLineChanging(value);
					this.SendPropertyChanging();
					this._TopScoreLine = value;
					this.SendPropertyChanged("TopScoreLine");
					this.OnTopScoreLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionEditorVersion", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string MissionEditorVersion
		{
			get
			{
				return this._MissionEditorVersion;
			}
			set
			{
				if ((this._MissionEditorVersion != value))
				{
					this.OnMissionEditorVersionChanging(value);
					this.SendPropertyChanging();
					this._MissionEditorVersion = value;
					this.SendPropertyChanged("MissionEditorVersion");
					this.OnMissionEditorVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringVersion", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string SpringVersion
		{
			get
			{
				return this._SpringVersion;
			}
			set
			{
				if ((this._SpringVersion != value))
				{
					this.OnSpringVersionChanging(value);
					this.SendPropertyChanging();
					this._SpringVersion = value;
					this.SendPropertyChanged("SpringVersion");
					this.OnSpringVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public int Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Script", DbType="nvarchar(max) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string Script
		{
			get
			{
				return this._Script.Value;
			}
			set
			{
				if ((this._Script.Value != value))
				{
					this.OnScriptChanging(value);
					this.SendPropertyChanging();
					this._Script.Value = value;
					this.SendPropertyChanged("Script");
					this.OnScriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenCondition", DbType="varchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string TokenCondition
		{
			get
			{
				return this._TokenCondition;
			}
			set
			{
				if ((this._TokenCondition != value))
				{
					this.OnTokenConditionChanging(value);
					this.SendPropertyChanging();
					this._TokenCondition = value;
					this.SendPropertyChanged("TokenCondition");
					this.OnTokenConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModOptions", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string ModOptions
		{
			get
			{
				return this._ModOptions;
			}
			set
			{
				if ((this._ModOptions != value))
				{
					this.OnModOptionsChanging(value);
					this.SendPropertyChanging();
					this._ModOptions = value;
					this.SendPropertyChanged("ModOptions");
					this.OnModOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModRapidTag", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string ModRapidTag
		{
			get
			{
				return this._ModRapidTag;
			}
			set
			{
				if ((this._ModRapidTag != value))
				{
					this.OnModRapidTagChanging(value);
					this.SendPropertyChanging();
					this._ModRapidTag = value;
					this.SendPropertyChanged("ModRapidTag");
					this.OnModRapidTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinHumans", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public int MinHumans
		{
			get
			{
				return this._MinHumans;
			}
			set
			{
				if ((this._MinHumans != value))
				{
					this.OnMinHumansChanging(value);
					this.SendPropertyChanging();
					this._MinHumans = value;
					this.SendPropertyChanged("MinHumans");
					this.OnMinHumansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxHumans", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public int MaxHumans
		{
			get
			{
				return this._MaxHumans;
			}
			set
			{
				if ((this._MaxHumans != value))
				{
					this.OnMaxHumansChanging(value);
					this.SendPropertyChanging();
					this._MaxHumans = value;
					this.SendPropertyChanged("MaxHumans");
					this.OnMaxHumansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScriptMission", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public bool IsScriptMission
		{
			get
			{
				return this._IsScriptMission;
			}
			set
			{
				if ((this._IsScriptMission != value))
				{
					this.OnIsScriptMissionChanging(value);
					this.SendPropertyChanging();
					this._IsScriptMission = value;
					this.SendPropertyChanged("IsScriptMission");
					this.OnIsScriptMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionRunCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public int MissionRunCount
		{
			get
			{
				return this._MissionRunCount;
			}
			set
			{
				if ((this._MissionRunCount != value))
				{
					this.OnMissionRunCountChanging(value);
					this.SendPropertyChanging();
					this._MissionRunCount = value;
					this.SendPropertyChanged("MissionRunCount");
					this.OnMissionRunCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualDependencies", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string ManualDependencies
		{
			get
			{
				return this._ManualDependencies;
			}
			set
			{
				if ((this._ManualDependencies != value))
				{
					this.OnManualDependenciesChanging(value);
					this.SendPropertyChanging();
					this._ManualDependencies = value;
					this.SendPropertyChanged("ManualDependencies");
					this.OnManualDependenciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="real", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<float> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difficulty", DbType="real", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<float> Difficulty
		{
			get
			{
				return this._Difficulty;
			}
			set
			{
				if ((this._Difficulty != value))
				{
					this.OnDifficultyChanging(value);
					this.SendPropertyChanging();
					this._Difficulty = value;
					this.SendPropertyChanged("Difficulty");
					this.OnDifficultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCoop", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public bool IsCoop
		{
			get
			{
				return this._IsCoop;
			}
			set
			{
				if ((this._IsCoop != value))
				{
					this.OnIsCoopChanging(value);
					this.SendPropertyChanging();
					this._IsCoop = value;
					this.SendPropertyChanged("IsCoop");
					this.OnIsCoopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeaturedOrder", DbType="real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.Nullable<float> FeaturedOrder
		{
			get
			{
				return this._FeaturedOrder;
			}
			set
			{
				if ((this._FeaturedOrder != value))
				{
					this.OnFeaturedOrderChanging(value);
					this.SendPropertyChanging();
					this._FeaturedOrder = value;
					this.SendPropertyChanged("FeaturedOrder");
					this.OnFeaturedOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Mission", Storage="_ChildMission", ThisKey="MissionID", OtherKey="MissionID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public Mission ChildMission
		{
			get
			{
				if ((this.serializing 
							&& (this._ChildMission.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._ChildMission.Entity;
			}
			set
			{
				Mission previousValue = this._ChildMission.Entity;
				if (((previousValue != value) 
							|| (this._ChildMission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChildMission.Entity = null;
						previousValue.ParentMission = null;
					}
					this._ChildMission.Entity = value;
					if ((value != null))
					{
						value.ParentMission = this;
					}
					this.SendPropertyChanged("ChildMission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Resource", Storage="_Resources", ThisKey="MissionID", OtherKey="MissionID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public Resource Resources
		{
			get
			{
				if ((this.serializing 
							&& (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Resources.Entity;
			}
			set
			{
				Resource previousValue = this._Resources.Entity;
				if (((previousValue != value) 
							|| (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resources.Entity = null;
						previousValue.Mission = null;
					}
					this._Resources.Entity = value;
					if ((value != null))
					{
						value.Mission = this;
					}
					this.SendPropertyChanged("Resources");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_MissionScore", Storage="_MissionScores", ThisKey="MissionID", OtherKey="MissionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public EntitySet<MissionScore> MissionScores
		{
			get
			{
				if ((this.serializing 
							&& (this._MissionScores.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MissionScores;
			}
			set
			{
				this._MissionScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Rating", Storage="_Ratings", ThisKey="MissionID", OtherKey="MissionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public EntitySet<Rating> Ratings
		{
			get
			{
				if ((this.serializing 
							&& (this._Ratings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Ratings;
			}
			set
			{
				this._Ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Mission", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Missions.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Missions.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Mission", Storage="_ParentMission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true)]
		public Mission ParentMission
		{
			get
			{
				return this._ParentMission.Entity;
			}
			set
			{
				Mission previousValue = this._ParentMission.Entity;
				if (((previousValue != value) 
							|| (this._ParentMission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentMission.Entity = null;
						previousValue.ChildMission = null;
					}
					this._ParentMission.Entity = value;
					if ((value != null))
					{
						value.ChildMission = this;
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(int);
					}
					this.SendPropertyChanged("ParentMission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Mission", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.Missions = null;
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.Missions = this;
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(int);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MissionScores(MissionScore entity)
		{
			this.SendPropertyChanging();
			entity.Mission = this;
		}
		
		private void detach_MissionScores(MissionScore entity)
		{
			this.SendPropertyChanging();
			entity.Mission = null;
		}
		
		private void attach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Mission = this;
		}
		
		private void detach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Mission = null;
		}
		
		private void Initialize()
		{
			this._ChildMission = default(EntityRef<Mission>);
			this._Resources = default(EntityRef<Resource>);
			this._MissionScores = new EntitySet<MissionScore>(new Action<MissionScore>(this.attach_MissionScores), new Action<MissionScore>(this.detach_MissionScores));
			this._Ratings = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings), new Action<Rating>(this.detach_Ratings));
			this._Account = default(EntityRef<Account>);
			this._ParentMission = default(EntityRef<Mission>);
			this._ForumThread = default(EntityRef<ForumThread>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.DateTime _FirstLogin;
		
		private System.DateTime _LastLogin;
		
		private string _Aliases;
		
		private float _Elo;
		
		private float _EloWeight;
		
		private bool _IsLobbyAdministrator;
		
		private bool _IsBot;
		
		private string _Password;
		
		private string _Country;
		
		private int _LobbyTimeRank;
		
		private int _MissionRunCount;
		
		private bool _IsZeroKAdmin;
		
		private int _XP;
		
		private int _Level;
		
		private System.Nullable<int> _Credits;
		
		private System.Nullable<int> _ClanID;
		
		private System.Nullable<int> _ClanLeaderVoteAccountID;
		
		private System.Nullable<int> _PlanetWarsRank;
		
		private EntitySet<Mission> _Missions;
		
		private EntitySet<LobbyMessage> _LobbyMessagesBySourceAccountID;
		
		private EntitySet<LobbyMessage> _LobbyMessagesByTargetAccountID;
		
		private EntitySet<ForumThread> _ForumThreadsByCreatedAccountID;
		
		private EntitySet<ForumThread> _ForumThreadsByLastPostAccountID;
		
		private EntitySet<Resource> _Resources;
		
		private EntitySet<MissionScore> _MissionScores;
		
		private EntitySet<Rating> _Ratings;
		
		private EntitySet<ForumPost> _ForumPosts;
		
		private EntitySet<MapRating> _MapRatings;
		
		private EntitySet<SpringBattle> _SpringBattles;
		
		private EntitySet<SpringBattlePlayer> _SpringBattlePlayers;
		
		private EntitySet<ForumThreadLastRead> _ForumThreadLastReads;
		
		private EntitySet<AccountBattleAward> _AccountBattleAwards;
		
		private EntitySet<AccountBattleStat> _AccountBattleStats;
		
		private EntitySet<AccountUnlock> _AccountUnlocks;
		
		private EntitySet<Commander> _Commanders;
		
		private EntitySet<PollVote> _PollVotes;
		
		private EntitySet<MarketOffer> _MarketOffersByAccountID;
		
		private EntitySet<MarketOffer> _MarketOffersByAcceptedAccountID;
		
		private EntitySet<AccountPlanet> _AccountPlanets;
		
		private EntitySet<EventAccount> _EventAccounts;
		
		private EntitySet<PlanetInfluenceHistory> _PlanetInfluenceHistories;
		
		private EntityRef<Account> _ParentAccount;
		
		private EntityRef<Clan> _Clan;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFirstLoginChanging(System.DateTime value);
    partial void OnFirstLoginChanged();
    partial void OnLastLoginChanging(System.DateTime value);
    partial void OnLastLoginChanged();
    partial void OnAliasesChanging(string value);
    partial void OnAliasesChanged();
    partial void OnEloChanging(float value);
    partial void OnEloChanged();
    partial void OnEloWeightChanging(float value);
    partial void OnEloWeightChanged();
    partial void OnIsLobbyAdministratorChanging(bool value);
    partial void OnIsLobbyAdministratorChanged();
    partial void OnIsBotChanging(bool value);
    partial void OnIsBotChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLobbyTimeRankChanging(int value);
    partial void OnLobbyTimeRankChanged();
    partial void OnMissionRunCountChanging(int value);
    partial void OnMissionRunCountChanged();
    partial void OnIsZeroKAdminChanging(bool value);
    partial void OnIsZeroKAdminChanged();
    partial void OnXPChanging(int value);
    partial void OnXPChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnCreditsChanging(System.Nullable<int> value);
    partial void OnCreditsChanged();
    partial void OnClanIDChanging(System.Nullable<int> value);
    partial void OnClanIDChanged();
    partial void OnClanLeaderVoteAccountIDChanging(System.Nullable<int> value);
    partial void OnClanLeaderVoteAccountIDChanged();
    partial void OnPlanetWarsRankChanging(System.Nullable<int> value);
    partial void OnPlanetWarsRankChanged();
    #endregion
		
		public Account()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="varchar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLogin", DbType="datetime NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime FirstLogin
		{
			get
			{
				return this._FirstLogin;
			}
			set
			{
				if ((this._FirstLogin != value))
				{
					this.OnFirstLoginChanging(value);
					this.SendPropertyChanging();
					this._FirstLogin = value;
					this.SendPropertyChanged("FirstLogin");
					this.OnFirstLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="datetime NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aliases", DbType="varchar(max)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Aliases
		{
			get
			{
				return this._Aliases;
			}
			set
			{
				if ((this._Aliases != value))
				{
					this.OnAliasesChanging(value);
					this.SendPropertyChanging();
					this._Aliases = value;
					this.SendPropertyChanged("Aliases");
					this.OnAliasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elo", DbType="real NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public float Elo
		{
			get
			{
				return this._Elo;
			}
			set
			{
				if ((this._Elo != value))
				{
					this.OnEloChanging(value);
					this.SendPropertyChanging();
					this._Elo = value;
					this.SendPropertyChanged("Elo");
					this.OnEloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EloWeight", DbType="real NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public float EloWeight
		{
			get
			{
				return this._EloWeight;
			}
			set
			{
				if ((this._EloWeight != value))
				{
					this.OnEloWeightChanging(value);
					this.SendPropertyChanging();
					this._EloWeight = value;
					this.SendPropertyChanged("EloWeight");
					this.OnEloWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLobbyAdministrator", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsLobbyAdministrator
		{
			get
			{
				return this._IsLobbyAdministrator;
			}
			set
			{
				if ((this._IsLobbyAdministrator != value))
				{
					this.OnIsLobbyAdministratorChanging(value);
					this.SendPropertyChanging();
					this._IsLobbyAdministrator = value;
					this.SendPropertyChanged("IsLobbyAdministrator");
					this.OnIsLobbyAdministratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBot", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsBot
		{
			get
			{
				return this._IsBot;
			}
			set
			{
				if ((this._IsBot != value))
				{
					this.OnIsBotChanging(value);
					this.SendPropertyChanging();
					this._IsBot = value;
					this.SendPropertyChanged("IsBot");
					this.OnIsBotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="varchar(100)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="varchar(5)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LobbyTimeRank", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public int LobbyTimeRank
		{
			get
			{
				return this._LobbyTimeRank;
			}
			set
			{
				if ((this._LobbyTimeRank != value))
				{
					this.OnLobbyTimeRankChanging(value);
					this.SendPropertyChanging();
					this._LobbyTimeRank = value;
					this.SendPropertyChanged("LobbyTimeRank");
					this.OnLobbyTimeRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionRunCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public int MissionRunCount
		{
			get
			{
				return this._MissionRunCount;
			}
			set
			{
				if ((this._MissionRunCount != value))
				{
					this.OnMissionRunCountChanging(value);
					this.SendPropertyChanging();
					this._MissionRunCount = value;
					this.SendPropertyChanged("MissionRunCount");
					this.OnMissionRunCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsZeroKAdmin", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsZeroKAdmin
		{
			get
			{
				return this._IsZeroKAdmin;
			}
			set
			{
				if ((this._IsZeroKAdmin != value))
				{
					this.OnIsZeroKAdminChanging(value);
					this.SendPropertyChanging();
					this._IsZeroKAdmin = value;
					this.SendPropertyChanged("IsZeroKAdmin");
					this.OnIsZeroKAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Xp", Storage="_XP", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public int XP
		{
			get
			{
				return this._XP;
			}
			set
			{
				if ((this._XP != value))
				{
					this.OnXPChanging(value);
					this.SendPropertyChanging();
					this._XP = value;
					this.SendPropertyChanged("XP");
					this.OnXPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credits", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> Credits
		{
			get
			{
				return this._Credits;
			}
			set
			{
				if ((this._Credits != value))
				{
					this.OnCreditsChanging(value);
					this.SendPropertyChanging();
					this._Credits = value;
					this.SendPropertyChanged("Credits");
					this.OnCreditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> ClanID
		{
			get
			{
				return this._ClanID;
			}
			set
			{
				if ((this._ClanID != value))
				{
					if (this._Clan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClanIDChanging(value);
					this.SendPropertyChanging();
					this._ClanID = value;
					this.SendPropertyChanged("ClanID");
					this.OnClanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanLeaderVoteAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> ClanLeaderVoteAccountID
		{
			get
			{
				return this._ClanLeaderVoteAccountID;
			}
			set
			{
				if ((this._ClanLeaderVoteAccountID != value))
				{
					if (this._ParentAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClanLeaderVoteAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ClanLeaderVoteAccountID = value;
					this.SendPropertyChanged("ClanLeaderVoteAccountID");
					this.OnClanLeaderVoteAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetWarsRank", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> PlanetWarsRank
		{
			get
			{
				return this._PlanetWarsRank;
			}
			set
			{
				if ((this._PlanetWarsRank != value))
				{
					this.OnPlanetWarsRankChanging(value);
					this.SendPropertyChanging();
					this._PlanetWarsRank = value;
					this.SendPropertyChanged("PlanetWarsRank");
					this.OnPlanetWarsRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Mission", Storage="_Missions", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<Mission> Missions
		{
			get
			{
				if ((this.serializing 
							&& (this._Missions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Missions;
			}
			set
			{
				this._Missions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_LobbyMessage", Storage="_LobbyMessagesBySourceAccountID", ThisKey="AccountID", OtherKey="SourceAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<LobbyMessage> LobbyMessagesBySourceAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._LobbyMessagesBySourceAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LobbyMessagesBySourceAccountID;
			}
			set
			{
				this._LobbyMessagesBySourceAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_LobbyMessage1", Storage="_LobbyMessagesByTargetAccountID", ThisKey="AccountID", OtherKey="TargetAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<LobbyMessage> LobbyMessagesByTargetAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._LobbyMessagesByTargetAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LobbyMessagesByTargetAccountID;
			}
			set
			{
				this._LobbyMessagesByTargetAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThread", Storage="_ForumThreadsByCreatedAccountID", ThisKey="AccountID", OtherKey="CreatedAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<ForumThread> ForumThreadsByCreatedAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreadsByCreatedAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreadsByCreatedAccountID;
			}
			set
			{
				this._ForumThreadsByCreatedAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThread1", Storage="_ForumThreadsByLastPostAccountID", ThisKey="AccountID", OtherKey="LastPostAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<ForumThread> ForumThreadsByLastPostAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreadsByLastPostAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreadsByLastPostAccountID;
			}
			set
			{
				this._ForumThreadsByLastPostAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Resource", Storage="_Resources", ThisKey="AccountID", OtherKey="TaggedByAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<Resource> Resources
		{
			get
			{
				if ((this.serializing 
							&& (this._Resources.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Resources;
			}
			set
			{
				this._Resources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MissionScore", Storage="_MissionScores", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<MissionScore> MissionScores
		{
			get
			{
				if ((this.serializing 
							&& (this._MissionScores.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MissionScores;
			}
			set
			{
				this._MissionScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Rating", Storage="_Ratings", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<Rating> Ratings
		{
			get
			{
				if ((this.serializing 
							&& (this._Ratings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Ratings;
			}
			set
			{
				this._Ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumPost", Storage="_ForumPosts", ThisKey="AccountID", OtherKey="AuthorAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<ForumPost> ForumPosts
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumPosts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumPosts;
			}
			set
			{
				this._ForumPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MapRating", Storage="_MapRatings", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<MapRating> MapRatings
		{
			get
			{
				if ((this.serializing 
							&& (this._MapRatings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MapRatings;
			}
			set
			{
				this._MapRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SpringBattle", Storage="_SpringBattles", ThisKey="AccountID", OtherKey="HostAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<SpringBattle> SpringBattles
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattles;
			}
			set
			{
				this._SpringBattles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SpringBattlePlayer", Storage="_SpringBattlePlayers", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<SpringBattlePlayer> SpringBattlePlayers
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattlePlayers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattlePlayers;
			}
			set
			{
				this._SpringBattlePlayers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThreadLastRead", Storage="_ForumThreadLastReads", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public EntitySet<ForumThreadLastRead> ForumThreadLastReads
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreadLastReads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreadLastReads;
			}
			set
			{
				this._ForumThreadLastReads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountBattleAward", Storage="_AccountBattleAwards", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public EntitySet<AccountBattleAward> AccountBattleAwards
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountBattleAwards.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountBattleAwards;
			}
			set
			{
				this._AccountBattleAwards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountBattleStat", Storage="_AccountBattleStats", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public EntitySet<AccountBattleStat> AccountBattleStats
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountBattleStats.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountBattleStats;
			}
			set
			{
				this._AccountBattleStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountUnlock", Storage="_AccountUnlocks", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36, EmitDefaultValue=false)]
		public EntitySet<AccountUnlock> AccountUnlocks
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountUnlocks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountUnlocks;
			}
			set
			{
				this._AccountUnlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Commander", Storage="_Commanders", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37, EmitDefaultValue=false)]
		public EntitySet<Commander> Commanders
		{
			get
			{
				if ((this.serializing 
							&& (this._Commanders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Commanders;
			}
			set
			{
				this._Commanders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PollVote", Storage="_PollVotes", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38, EmitDefaultValue=false)]
		public EntitySet<PollVote> PollVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._PollVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollVotes;
			}
			set
			{
				this._PollVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MarketOffer", Storage="_MarketOffersByAccountID", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39, EmitDefaultValue=false)]
		public EntitySet<MarketOffer> MarketOffersByAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._MarketOffersByAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MarketOffersByAccountID;
			}
			set
			{
				this._MarketOffersByAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MarketOffer1", Storage="_MarketOffersByAcceptedAccountID", ThisKey="AccountID", OtherKey="AcceptedAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40, EmitDefaultValue=false)]
		public EntitySet<MarketOffer> MarketOffersByAcceptedAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._MarketOffersByAcceptedAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MarketOffersByAcceptedAccountID;
			}
			set
			{
				this._MarketOffersByAcceptedAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountPlanet", Storage="_AccountPlanets", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41, EmitDefaultValue=false)]
		public EntitySet<AccountPlanet> AccountPlanets
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountPlanets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountPlanets;
			}
			set
			{
				this._AccountPlanets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_EventAccount", Storage="_EventAccounts", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42, EmitDefaultValue=false)]
		public EntitySet<EventAccount> EventAccounts
		{
			get
			{
				if ((this.serializing 
							&& (this._EventAccounts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventAccounts;
			}
			set
			{
				this._EventAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PlanetInfluenceHistory", Storage="_PlanetInfluenceHistories", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43, EmitDefaultValue=false)]
		public EntitySet<PlanetInfluenceHistory> PlanetInfluenceHistories
		{
			get
			{
				if ((this.serializing 
							&& (this._PlanetInfluenceHistories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlanetInfluenceHistories;
			}
			set
			{
				this._PlanetInfluenceHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Account", Storage="_ParentAccount", ThisKey="ClanLeaderVoteAccountID", OtherKey="AccountID", IsForeignKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=44, EmitDefaultValue=false)]
		public Account ParentAccount
		{
			get
			{
				if ((this.serializing 
							&& (this._ParentAccount.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._ParentAccount.Entity;
			}
			set
			{
				if ((this._ParentAccount.Entity != value))
				{
					this.SendPropertyChanging();
					this._ParentAccount.Entity = value;
					this.SendPropertyChanged("ParentAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_Account", Storage="_Clan", ThisKey="ClanID", OtherKey="ClanID", IsForeignKey=true, DeleteRule="SET NULL")]
		public Clan Clan
		{
			get
			{
				return this._Clan.Entity;
			}
			set
			{
				Clan previousValue = this._Clan.Entity;
				if (((previousValue != value) 
							|| (this._Clan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clan.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._Clan.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._ClanID = value.ClanID;
					}
					else
					{
						this._ClanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Missions(Mission entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Missions(Mission entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_LobbyMessagesBySourceAccountID(LobbyMessage entity)
		{
			this.SendPropertyChanging();
			entity.AccountBySourceAccountID = this;
		}
		
		private void detach_LobbyMessagesBySourceAccountID(LobbyMessage entity)
		{
			this.SendPropertyChanging();
			entity.AccountBySourceAccountID = null;
		}
		
		private void attach_LobbyMessagesByTargetAccountID(LobbyMessage entity)
		{
			this.SendPropertyChanging();
			entity.AccountByTargetAccountID = this;
		}
		
		private void detach_LobbyMessagesByTargetAccountID(LobbyMessage entity)
		{
			this.SendPropertyChanging();
			entity.AccountByTargetAccountID = null;
		}
		
		private void attach_ForumThreadsByCreatedAccountID(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.AccountByCreatedAccountID = this;
		}
		
		private void detach_ForumThreadsByCreatedAccountID(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.AccountByCreatedAccountID = null;
		}
		
		private void attach_ForumThreadsByLastPostAccountID(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.AccountByLastPostAccountID = this;
		}
		
		private void detach_ForumThreadsByLastPostAccountID(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.AccountByLastPostAccountID = null;
		}
		
		private void attach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_MissionScores(MissionScore entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_MissionScores(MissionScore entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_MapRatings(MapRating entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_MapRatings(MapRating entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_SpringBattles(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_SpringBattles(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_SpringBattlePlayers(SpringBattlePlayer entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_SpringBattlePlayers(SpringBattlePlayer entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_ForumThreadLastReads(ForumThreadLastRead entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_ForumThreadLastReads(ForumThreadLastRead entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountBattleAwards(AccountBattleAward entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountBattleAwards(AccountBattleAward entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountBattleStats(AccountBattleStat entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountBattleStats(AccountBattleStat entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountUnlocks(AccountUnlock entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountUnlocks(AccountUnlock entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Commanders(Commander entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = this;
		}
		
		private void detach_Commanders(Commander entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = null;
		}
		
		private void attach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_MarketOffersByAccountID(MarketOffer entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = this;
		}
		
		private void detach_MarketOffersByAccountID(MarketOffer entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = null;
		}
		
		private void attach_MarketOffersByAcceptedAccountID(MarketOffer entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAcceptedAccountID = this;
		}
		
		private void detach_MarketOffersByAcceptedAccountID(MarketOffer entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAcceptedAccountID = null;
		}
		
		private void attach_AccountPlanets(AccountPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountPlanets(AccountPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_EventAccounts(EventAccount entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_EventAccounts(EventAccount entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_PlanetInfluenceHistories(PlanetInfluenceHistory entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_PlanetInfluenceHistories(PlanetInfluenceHistory entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void Initialize()
		{
			this._Missions = new EntitySet<Mission>(new Action<Mission>(this.attach_Missions), new Action<Mission>(this.detach_Missions));
			this._LobbyMessagesBySourceAccountID = new EntitySet<LobbyMessage>(new Action<LobbyMessage>(this.attach_LobbyMessagesBySourceAccountID), new Action<LobbyMessage>(this.detach_LobbyMessagesBySourceAccountID));
			this._LobbyMessagesByTargetAccountID = new EntitySet<LobbyMessage>(new Action<LobbyMessage>(this.attach_LobbyMessagesByTargetAccountID), new Action<LobbyMessage>(this.detach_LobbyMessagesByTargetAccountID));
			this._ForumThreadsByCreatedAccountID = new EntitySet<ForumThread>(new Action<ForumThread>(this.attach_ForumThreadsByCreatedAccountID), new Action<ForumThread>(this.detach_ForumThreadsByCreatedAccountID));
			this._ForumThreadsByLastPostAccountID = new EntitySet<ForumThread>(new Action<ForumThread>(this.attach_ForumThreadsByLastPostAccountID), new Action<ForumThread>(this.detach_ForumThreadsByLastPostAccountID));
			this._Resources = new EntitySet<Resource>(new Action<Resource>(this.attach_Resources), new Action<Resource>(this.detach_Resources));
			this._MissionScores = new EntitySet<MissionScore>(new Action<MissionScore>(this.attach_MissionScores), new Action<MissionScore>(this.detach_MissionScores));
			this._Ratings = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings), new Action<Rating>(this.detach_Ratings));
			this._ForumPosts = new EntitySet<ForumPost>(new Action<ForumPost>(this.attach_ForumPosts), new Action<ForumPost>(this.detach_ForumPosts));
			this._MapRatings = new EntitySet<MapRating>(new Action<MapRating>(this.attach_MapRatings), new Action<MapRating>(this.detach_MapRatings));
			this._SpringBattles = new EntitySet<SpringBattle>(new Action<SpringBattle>(this.attach_SpringBattles), new Action<SpringBattle>(this.detach_SpringBattles));
			this._SpringBattlePlayers = new EntitySet<SpringBattlePlayer>(new Action<SpringBattlePlayer>(this.attach_SpringBattlePlayers), new Action<SpringBattlePlayer>(this.detach_SpringBattlePlayers));
			this._ForumThreadLastReads = new EntitySet<ForumThreadLastRead>(new Action<ForumThreadLastRead>(this.attach_ForumThreadLastReads), new Action<ForumThreadLastRead>(this.detach_ForumThreadLastReads));
			this._AccountBattleAwards = new EntitySet<AccountBattleAward>(new Action<AccountBattleAward>(this.attach_AccountBattleAwards), new Action<AccountBattleAward>(this.detach_AccountBattleAwards));
			this._AccountBattleStats = new EntitySet<AccountBattleStat>(new Action<AccountBattleStat>(this.attach_AccountBattleStats), new Action<AccountBattleStat>(this.detach_AccountBattleStats));
			this._AccountUnlocks = new EntitySet<AccountUnlock>(new Action<AccountUnlock>(this.attach_AccountUnlocks), new Action<AccountUnlock>(this.detach_AccountUnlocks));
			this._Commanders = new EntitySet<Commander>(new Action<Commander>(this.attach_Commanders), new Action<Commander>(this.detach_Commanders));
			this._PollVotes = new EntitySet<PollVote>(new Action<PollVote>(this.attach_PollVotes), new Action<PollVote>(this.detach_PollVotes));
			this._MarketOffersByAccountID = new EntitySet<MarketOffer>(new Action<MarketOffer>(this.attach_MarketOffersByAccountID), new Action<MarketOffer>(this.detach_MarketOffersByAccountID));
			this._MarketOffersByAcceptedAccountID = new EntitySet<MarketOffer>(new Action<MarketOffer>(this.attach_MarketOffersByAcceptedAccountID), new Action<MarketOffer>(this.detach_MarketOffersByAcceptedAccountID));
			this._AccountPlanets = new EntitySet<AccountPlanet>(new Action<AccountPlanet>(this.attach_AccountPlanets), new Action<AccountPlanet>(this.detach_AccountPlanets));
			this._EventAccounts = new EntitySet<EventAccount>(new Action<EventAccount>(this.attach_EventAccounts), new Action<EventAccount>(this.detach_EventAccounts));
			this._PlanetInfluenceHistories = new EntitySet<PlanetInfluenceHistory>(new Action<PlanetInfluenceHistory>(this.attach_PlanetInfluenceHistories), new Action<PlanetInfluenceHistory>(this.detach_PlanetInfluenceHistories));
			this._ParentAccount = default(EntityRef<Account>);
			this._Clan = default(EntityRef<Clan>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LobbyMessage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LobbyMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private string _SourceName;
		
		private string _TargetName;
		
		private System.Nullable<int> _SourceAccountID;
		
		private string _Message;
		
		private System.DateTime _Created;
		
		private System.Nullable<int> _TargetAccountID;
		
		private string _Channel;
		
		private EntityRef<Account> _AccountBySourceAccountID;
		
		private EntityRef<Account> _AccountByTargetAccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnSourceNameChanging(string value);
    partial void OnSourceNameChanged();
    partial void OnTargetNameChanging(string value);
    partial void OnTargetNameChanged();
    partial void OnSourceAccountIDChanging(System.Nullable<int> value);
    partial void OnSourceAccountIDChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnTargetAccountIDChanging(System.Nullable<int> value);
    partial void OnTargetAccountIDChanged();
    partial void OnChannelChanging(string value);
    partial void OnChannelChanged();
    #endregion
		
		public LobbyMessage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceName", DbType="nvarchar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SourceName
		{
			get
			{
				return this._SourceName;
			}
			set
			{
				if ((this._SourceName != value))
				{
					this.OnSourceNameChanging(value);
					this.SendPropertyChanging();
					this._SourceName = value;
					this.SendPropertyChanged("SourceName");
					this.OnSourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetName", DbType="nvarchar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TargetName
		{
			get
			{
				return this._TargetName;
			}
			set
			{
				if ((this._TargetName != value))
				{
					this.OnTargetNameChanging(value);
					this.SendPropertyChanging();
					this._TargetName = value;
					this.SendPropertyChanged("TargetName");
					this.OnTargetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> SourceAccountID
		{
			get
			{
				return this._SourceAccountID;
			}
			set
			{
				if ((this._SourceAccountID != value))
				{
					if (this._AccountBySourceAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceAccountIDChanging(value);
					this.SendPropertyChanging();
					this._SourceAccountID = value;
					this.SendPropertyChanged("SourceAccountID");
					this.OnSourceAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="nvarchar(2000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> TargetAccountID
		{
			get
			{
				return this._TargetAccountID;
			}
			set
			{
				if ((this._TargetAccountID != value))
				{
					if (this._AccountByTargetAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetAccountIDChanging(value);
					this.SendPropertyChanging();
					this._TargetAccountID = value;
					this.SendPropertyChanged("TargetAccountID");
					this.OnTargetAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Channel
		{
			get
			{
				return this._Channel;
			}
			set
			{
				if ((this._Channel != value))
				{
					this.OnChannelChanging(value);
					this.SendPropertyChanging();
					this._Channel = value;
					this.SendPropertyChanged("Channel");
					this.OnChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_LobbyMessage", Storage="_AccountBySourceAccountID", ThisKey="SourceAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountBySourceAccountID
		{
			get
			{
				return this._AccountBySourceAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountBySourceAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountBySourceAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountBySourceAccountID.Entity = null;
						previousValue.LobbyMessagesBySourceAccountID.Remove(this);
					}
					this._AccountBySourceAccountID.Entity = value;
					if ((value != null))
					{
						value.LobbyMessagesBySourceAccountID.Add(this);
						this._SourceAccountID = value.AccountID;
					}
					else
					{
						this._SourceAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountBySourceAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_LobbyMessage1", Storage="_AccountByTargetAccountID", ThisKey="TargetAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByTargetAccountID
		{
			get
			{
				return this._AccountByTargetAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByTargetAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByTargetAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByTargetAccountID.Entity = null;
						previousValue.LobbyMessagesByTargetAccountID.Remove(this);
					}
					this._AccountByTargetAccountID.Entity = value;
					if ((value != null))
					{
						value.LobbyMessagesByTargetAccountID.Add(this);
						this._TargetAccountID = value.AccountID;
					}
					else
					{
						this._TargetAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByTargetAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AccountBySourceAccountID = default(EntityRef<Account>);
			this._AccountByTargetAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LobbyChannelSubscription")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LobbyChannelSubscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _Channel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnChannelChanging(string value);
    partial void OnChannelChanged();
    #endregion
		
		public LobbyChannelSubscription()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel", DbType="nvarchar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Channel
		{
			get
			{
				return this._Channel;
			}
			set
			{
				if ((this._Channel != value))
				{
					this.OnChannelChanging(value);
					this.SendPropertyChanging();
					this._Channel = value;
					this.SendPropertyChanged("Channel");
					this.OnChannelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumThread")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumThread : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumThreadID;
		
		private string _Title;
		
		private System.DateTime _Created;
		
		private System.Nullable<int> _CreatedAccountID;
		
		private System.Nullable<System.DateTime> _LastPost;
		
		private System.Nullable<int> _LastPostAccountID;
		
		private int _PostCount;
		
		private int _ViewCount;
		
		private bool _IsLocked;
		
		private System.Nullable<int> _ForumCategoryID;
		
		private bool _IsPinned;
		
		private EntityRef<Mission> _Missions;
		
		private EntityRef<Resource> _Resources;
		
		private EntitySet<ForumPost> _ForumPosts;
		
		private EntityRef<SpringBattle> _SpringBattles;
		
		private EntitySet<ForumThreadLastRead> _ForumThreadLastReads;
		
		private EntityRef<ForumCategory> _ForumCategory;
		
		private EntityRef<Account> _AccountByCreatedAccountID;
		
		private EntityRef<Account> _AccountByLastPostAccountID;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnCreatedAccountIDChanging(System.Nullable<int> value);
    partial void OnCreatedAccountIDChanged();
    partial void OnLastPostChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPostChanged();
    partial void OnLastPostAccountIDChanging(System.Nullable<int> value);
    partial void OnLastPostAccountIDChanged();
    partial void OnPostCountChanging(int value);
    partial void OnPostCountChanged();
    partial void OnViewCountChanging(int value);
    partial void OnViewCountChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnForumCategoryIDChanging(System.Nullable<int> value);
    partial void OnForumCategoryIDChanged();
    partial void OnIsPinnedChanging(bool value);
    partial void OnIsPinnedChanged();
    #endregion
		
		public ForumThread()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="nvarchar(300) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CreatedAccountID
		{
			get
			{
				return this._CreatedAccountID;
			}
			set
			{
				if ((this._CreatedAccountID != value))
				{
					if (this._AccountByCreatedAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedAccountIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedAccountID = value;
					this.SendPropertyChanged("CreatedAccountID");
					this.OnCreatedAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPost", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> LastPost
		{
			get
			{
				return this._LastPost;
			}
			set
			{
				if ((this._LastPost != value))
				{
					this.OnLastPostChanging(value);
					this.SendPropertyChanging();
					this._LastPost = value;
					this.SendPropertyChanged("LastPost");
					this.OnLastPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPostAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> LastPostAccountID
		{
			get
			{
				return this._LastPostAccountID;
			}
			set
			{
				if ((this._LastPostAccountID != value))
				{
					if (this._AccountByLastPostAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastPostAccountIDChanging(value);
					this.SendPropertyChanging();
					this._LastPostAccountID = value;
					this.SendPropertyChanged("LastPostAccountID");
					this.OnLastPostAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int PostCount
		{
			get
			{
				return this._PostCount;
			}
			set
			{
				if ((this._PostCount != value))
				{
					this.OnPostCountChanging(value);
					this.SendPropertyChanging();
					this._PostCount = value;
					this.SendPropertyChanged("PostCount");
					this.OnPostCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int ViewCount
		{
			get
			{
				return this._ViewCount;
			}
			set
			{
				if ((this._ViewCount != value))
				{
					this.OnViewCountChanging(value);
					this.SendPropertyChanging();
					this._ViewCount = value;
					this.SendPropertyChanged("ViewCount");
					this.OnViewCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumCategoryID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> ForumCategoryID
		{
			get
			{
				return this._ForumCategoryID;
			}
			set
			{
				if ((this._ForumCategoryID != value))
				{
					if (this._ForumCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ForumCategoryID = value;
					this.SendPropertyChanged("ForumCategoryID");
					this.OnForumCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPinned", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsPinned
		{
			get
			{
				return this._IsPinned;
			}
			set
			{
				if ((this._IsPinned != value))
				{
					this.OnIsPinnedChanging(value);
					this.SendPropertyChanging();
					this._IsPinned = value;
					this.SendPropertyChanged("IsPinned");
					this.OnIsPinnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Mission", Storage="_Missions", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public Mission Missions
		{
			get
			{
				if ((this.serializing 
							&& (this._Missions.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Missions.Entity;
			}
			set
			{
				Mission previousValue = this._Missions.Entity;
				if (((previousValue != value) 
							|| (this._Missions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Missions.Entity = null;
						previousValue.ForumThread = null;
					}
					this._Missions.Entity = value;
					if ((value != null))
					{
						value.ForumThread = this;
					}
					this.SendPropertyChanged("Missions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Resource", Storage="_Resources", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public Resource Resources
		{
			get
			{
				if ((this.serializing 
							&& (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Resources.Entity;
			}
			set
			{
				Resource previousValue = this._Resources.Entity;
				if (((previousValue != value) 
							|| (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resources.Entity = null;
						previousValue.ForumThread = null;
					}
					this._Resources.Entity = value;
					if ((value != null))
					{
						value.ForumThread = this;
					}
					this.SendPropertyChanged("Resources");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumPost", Storage="_ForumPosts", ThisKey="ForumThreadID", OtherKey="ForumThreadID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<ForumPost> ForumPosts
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumPosts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumPosts;
			}
			set
			{
				this._ForumPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_SpringBattle", Storage="_SpringBattles", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public SpringBattle SpringBattles
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattles.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._SpringBattles.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattles.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattles.Entity = null;
						previousValue.ForumThread = null;
					}
					this._SpringBattles.Entity = value;
					if ((value != null))
					{
						value.ForumThread = this;
					}
					this.SendPropertyChanged("SpringBattles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumThreadLastRead", Storage="_ForumThreadLastReads", ThisKey="ForumThreadID", OtherKey="ForumThreadID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<ForumThreadLastRead> ForumThreadLastReads
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreadLastReads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreadLastReads;
			}
			set
			{
				this._ForumThreadLastReads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumThread", Storage="_ForumCategory", ThisKey="ForumCategoryID", OtherKey="ForumCategoryID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ForumCategory ForumCategory
		{
			get
			{
				return this._ForumCategory.Entity;
			}
			set
			{
				ForumCategory previousValue = this._ForumCategory.Entity;
				if (((previousValue != value) 
							|| (this._ForumCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumCategory.Entity = null;
						previousValue.ForumThreads.Remove(this);
					}
					this._ForumCategory.Entity = value;
					if ((value != null))
					{
						value.ForumThreads.Add(this);
						this._ForumCategoryID = value.ForumCategoryID;
					}
					else
					{
						this._ForumCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ForumCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThread", Storage="_AccountByCreatedAccountID", ThisKey="CreatedAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByCreatedAccountID
		{
			get
			{
				return this._AccountByCreatedAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByCreatedAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByCreatedAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByCreatedAccountID.Entity = null;
						previousValue.ForumThreadsByCreatedAccountID.Remove(this);
					}
					this._AccountByCreatedAccountID.Entity = value;
					if ((value != null))
					{
						value.ForumThreadsByCreatedAccountID.Add(this);
						this._CreatedAccountID = value.AccountID;
					}
					else
					{
						this._CreatedAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByCreatedAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThread1", Storage="_AccountByLastPostAccountID", ThisKey="LastPostAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByLastPostAccountID
		{
			get
			{
				return this._AccountByLastPostAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByLastPostAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByLastPostAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByLastPostAccountID.Entity = null;
						previousValue.ForumThreadsByLastPostAccountID.Remove(this);
					}
					this._AccountByLastPostAccountID.Entity = value;
					if ((value != null))
					{
						value.ForumThreadsByLastPostAccountID.Add(this);
						this._LastPostAccountID = value.AccountID;
					}
					else
					{
						this._LastPostAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByLastPostAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = this;
		}
		
		private void detach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = null;
		}
		
		private void attach_ForumThreadLastReads(ForumThreadLastRead entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = this;
		}
		
		private void detach_ForumThreadLastReads(ForumThreadLastRead entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = null;
		}
		
		private void Initialize()
		{
			this._Missions = default(EntityRef<Mission>);
			this._Resources = default(EntityRef<Resource>);
			this._ForumPosts = new EntitySet<ForumPost>(new Action<ForumPost>(this.attach_ForumPosts), new Action<ForumPost>(this.detach_ForumPosts));
			this._SpringBattles = default(EntityRef<SpringBattle>);
			this._ForumThreadLastReads = new EntitySet<ForumThreadLastRead>(new Action<ForumThreadLastRead>(this.attach_ForumThreadLastReads), new Action<ForumThreadLastRead>(this.detach_ForumThreadLastReads));
			this._ForumCategory = default(EntityRef<ForumCategory>);
			this._AccountByCreatedAccountID = default(EntityRef<Account>);
			this._AccountByLastPostAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExceptionLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ExceptionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExceptionLogID;
		
		private global::ZkData.ProgramType _ProgramID;
		
		private string _Exception;
		
		private string _ExtraData;
		
		private string _RemoteIP;
		
		private string _PlayerName;
		
		private System.DateTime _Time;
		
		private string _ProgramVersion;
		
		private string _ExceptionHash;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExceptionLogIDChanging(int value);
    partial void OnExceptionLogIDChanged();
    partial void OnProgramIDChanging(global::ZkData.ProgramType value);
    partial void OnProgramIDChanged();
    partial void OnExceptionChanging(string value);
    partial void OnExceptionChanged();
    partial void OnExtraDataChanging(string value);
    partial void OnExtraDataChanged();
    partial void OnRemoteIPChanging(string value);
    partial void OnRemoteIPChanged();
    partial void OnPlayerNameChanging(string value);
    partial void OnPlayerNameChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnProgramVersionChanging(string value);
    partial void OnProgramVersionChanged();
    partial void OnExceptionHashChanging(string value);
    partial void OnExceptionHashChanged();
    #endregion
		
		public ExceptionLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionLogID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ExceptionLogID
		{
			get
			{
				return this._ExceptionLogID;
			}
			set
			{
				if ((this._ExceptionLogID != value))
				{
					this.OnExceptionLogIDChanging(value);
					this.SendPropertyChanging();
					this._ExceptionLogID = value;
					this.SendPropertyChanged("ExceptionLogID");
					this.OnExceptionLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramID", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public global::ZkData.ProgramType ProgramID
		{
			get
			{
				return this._ProgramID;
			}
			set
			{
				if ((this._ProgramID != value))
				{
					this.OnProgramIDChanging(value);
					this.SendPropertyChanging();
					this._ProgramID = value;
					this.SendPropertyChanged("ProgramID");
					this.OnProgramIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Exception]", Storage="_Exception", DbType="nvarchar(max) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				if ((this._Exception != value))
				{
					this.OnExceptionChanging(value);
					this.SendPropertyChanging();
					this._Exception = value;
					this.SendPropertyChanged("Exception");
					this.OnExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraData", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ExtraData
		{
			get
			{
				return this._ExtraData;
			}
			set
			{
				if ((this._ExtraData != value))
				{
					this.OnExtraDataChanging(value);
					this.SendPropertyChanging();
					this._ExtraData = value;
					this.SendPropertyChanged("ExtraData");
					this.OnExtraDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteIP", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string RemoteIP
		{
			get
			{
				return this._RemoteIP;
			}
			set
			{
				if ((this._RemoteIP != value))
				{
					this.OnRemoteIPChanging(value);
					this.SendPropertyChanging();
					this._RemoteIP = value;
					this.SendPropertyChanged("RemoteIP");
					this.OnRemoteIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerName", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PlayerName
		{
			get
			{
				return this._PlayerName;
			}
			set
			{
				if ((this._PlayerName != value))
				{
					this.OnPlayerNameChanging(value);
					this.SendPropertyChanging();
					this._PlayerName = value;
					this.SendPropertyChanged("PlayerName");
					this.OnPlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Time]", Storage="_Time", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramVersion", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ProgramVersion
		{
			get
			{
				return this._ProgramVersion;
			}
			set
			{
				if ((this._ProgramVersion != value))
				{
					this.OnProgramVersionChanging(value);
					this.SendPropertyChanging();
					this._ProgramVersion = value;
					this.SendPropertyChanged("ProgramVersion");
					this.OnProgramVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionHash", DbType="char(32) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ExceptionHash
		{
			get
			{
				return this._ExceptionHash;
			}
			set
			{
				if ((this._ExceptionHash != value))
				{
					this.OnExceptionHashChanging(value);
					this.SendPropertyChanging();
					this._ExceptionHash = value;
					this.SendPropertyChanged("ExceptionHash");
					this.OnExceptionHashChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceDependency")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ResourceDependency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private string _NeedsInternalName;
		
		private EntityRef<Resource> _Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnNeedsInternalNameChanging(string value);
    partial void OnNeedsInternalNameChanged();
    #endregion
		
		public ResourceDependency()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsInternalName", DbType="varchar(250) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NeedsInternalName
		{
			get
			{
				return this._NeedsInternalName;
			}
			set
			{
				if ((this._NeedsInternalName != value))
				{
					this.OnNeedsInternalNameChanging(value);
					this.SendPropertyChanging();
					this._NeedsInternalName = value;
					this.SendPropertyChanged("NeedsInternalName");
					this.OnNeedsInternalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceDependency", Storage="_Resource", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.ResourceDependencies.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.ResourceDependencies.Add(this);
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Resource = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceContentFile")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ResourceContentFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private string _Md5;
		
		private int _Length;
		
		private string _FileName;
		
		private string _Links;
		
		private int _LinkCount;
		
		private EntityRef<Resource> _Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnMd5Changing(string value);
    partial void OnMd5Changed();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnLinksChanging(string value);
    partial void OnLinksChanged();
    partial void OnLinkCountChanging(int value);
    partial void OnLinkCountChanged();
    #endregion
		
		public ResourceContentFile()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Md5", DbType="char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Md5
		{
			get
			{
				return this._Md5;
			}
			set
			{
				if ((this._Md5 != value))
				{
					this.OnMd5Changing(value);
					this.SendPropertyChanging();
					this._Md5 = value;
					this.SendPropertyChanged("Md5");
					this.OnMd5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Links", DbType="text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Links
		{
			get
			{
				return this._Links;
			}
			set
			{
				if ((this._Links != value))
				{
					this.OnLinksChanging(value);
					this.SendPropertyChanging();
					this._Links = value;
					this.SendPropertyChanged("Links");
					this.OnLinksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int LinkCount
		{
			get
			{
				return this._LinkCount;
			}
			set
			{
				if ((this._LinkCount != value))
				{
					this.OnLinkCountChanging(value);
					this.SendPropertyChanging();
					this._LinkCount = value;
					this.SendPropertyChanged("LinkCount");
					this.OnLinkCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceContentFile", Storage="_Resource", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.ResourceContentFiles.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.ResourceContentFiles.Add(this);
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Resource = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceSpringHash")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ResourceSpringHash : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private string _SpringVersion;
		
		private int _SpringHash;
		
		private EntityRef<Resource> _Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnSpringVersionChanging(string value);
    partial void OnSpringVersionChanged();
    partial void OnSpringHashChanging(int value);
    partial void OnSpringHashChanged();
    #endregion
		
		public ResourceSpringHash()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringVersion", DbType="nvarchar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SpringVersion
		{
			get
			{
				return this._SpringVersion;
			}
			set
			{
				if ((this._SpringVersion != value))
				{
					this.OnSpringVersionChanging(value);
					this.SendPropertyChanging();
					this._SpringVersion = value;
					this.SendPropertyChanged("SpringVersion");
					this.OnSpringVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringHash", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SpringHash
		{
			get
			{
				return this._SpringHash;
			}
			set
			{
				if ((this._SpringHash != value))
				{
					this.OnSpringHashChanging(value);
					this.SendPropertyChanging();
					this._SpringHash = value;
					this.SendPropertyChanged("SpringHash");
					this.OnSpringHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceSpringHash", Storage="_Resource", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.ResourceSpringHashes.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.ResourceSpringHashes.Add(this);
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Resource = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private string _InternalName;
		
		private global::ZkData.ResourceType _TypeID;
		
		private System.Nullable<System.DateTime> _LastLinkCheck;
		
		private int _DownloadCount;
		
		private int _NoLinkDownloadCount;
		
		private System.Nullable<int> _MissionID;
		
		private System.Nullable<System.DateTime> _LastChange;
		
		private System.Nullable<bool> _MapIsSpecial;
		
		private System.Nullable<int> _MapSizeSquared;
		
		private System.Nullable<float> _MapSizeRatio;
		
		private System.Nullable<int> _MapWaterLevel;
		
		private System.Nullable<bool> _MapIsFfa;
		
		private System.Nullable<int> _MapHills;
		
		private string _AuthorName;
		
		private System.Nullable<int> _MapRatingCount;
		
		private System.Nullable<int> _MapRatingSum;
		
		private System.Nullable<bool> _MapIsAssymetrical;
		
		private System.Nullable<int> _TaggedByAccountID;
		
		private System.Nullable<int> _MapWidth;
		
		private System.Nullable<int> _MapHeight;
		
		private System.Nullable<int> _ForumThreadID;
		
		private System.Nullable<float> _FeaturedOrder;
		
		private EntitySet<ResourceDependency> _ResourceDependencies;
		
		private EntitySet<ResourceContentFile> _ResourceContentFiles;
		
		private EntitySet<ResourceSpringHash> _ResourceSpringHashes;
		
		private EntitySet<MapRating> _MapRatings;
		
		private EntitySet<SpringBattle> _SpringBattlesByMapResourceID;
		
		private EntitySet<SpringBattle> _SpringBattlesByModResourceID;
		
		private EntityRef<Mission> _Mission;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnInternalNameChanging(string value);
    partial void OnInternalNameChanged();
    partial void OnTypeIDChanging(global::ZkData.ResourceType value);
    partial void OnTypeIDChanged();
    partial void OnLastLinkCheckChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLinkCheckChanged();
    partial void OnDownloadCountChanging(int value);
    partial void OnDownloadCountChanged();
    partial void OnNoLinkDownloadCountChanging(int value);
    partial void OnNoLinkDownloadCountChanged();
    partial void OnMissionIDChanging(System.Nullable<int> value);
    partial void OnMissionIDChanged();
    partial void OnLastChangeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastChangeChanged();
    partial void OnMapIsSpecialChanging(System.Nullable<bool> value);
    partial void OnMapIsSpecialChanged();
    partial void OnMapSizeSquaredChanging(System.Nullable<int> value);
    partial void OnMapSizeSquaredChanged();
    partial void OnMapSizeRatioChanging(System.Nullable<float> value);
    partial void OnMapSizeRatioChanged();
    partial void OnMapWaterLevelChanging(System.Nullable<int> value);
    partial void OnMapWaterLevelChanged();
    partial void OnMapIsFfaChanging(System.Nullable<bool> value);
    partial void OnMapIsFfaChanged();
    partial void OnMapHillsChanging(System.Nullable<int> value);
    partial void OnMapHillsChanged();
    partial void OnAuthorNameChanging(string value);
    partial void OnAuthorNameChanged();
    partial void OnMapRatingCountChanging(System.Nullable<int> value);
    partial void OnMapRatingCountChanged();
    partial void OnMapRatingSumChanging(System.Nullable<int> value);
    partial void OnMapRatingSumChanged();
    partial void OnMapIsAssymetricalChanging(System.Nullable<bool> value);
    partial void OnMapIsAssymetricalChanged();
    partial void OnTaggedByAccountIDChanging(System.Nullable<int> value);
    partial void OnTaggedByAccountIDChanged();
    partial void OnMapWidthChanging(System.Nullable<int> value);
    partial void OnMapWidthChanged();
    partial void OnMapHeightChanging(System.Nullable<int> value);
    partial void OnMapHeightChanged();
    partial void OnForumThreadIDChanging(System.Nullable<int> value);
    partial void OnForumThreadIDChanged();
    partial void OnFeaturedOrderChanging(System.Nullable<float> value);
    partial void OnFeaturedOrderChanged();
    #endregion
		
		public Resource()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string InternalName
		{
			get
			{
				return this._InternalName;
			}
			set
			{
				if ((this._InternalName != value))
				{
					this.OnInternalNameChanging(value);
					this.SendPropertyChanging();
					this._InternalName = value;
					this.SendPropertyChanged("InternalName");
					this.OnInternalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public global::ZkData.ResourceType TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLinkCheck", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> LastLinkCheck
		{
			get
			{
				return this._LastLinkCheck;
			}
			set
			{
				if ((this._LastLinkCheck != value))
				{
					this.OnLastLinkCheckChanging(value);
					this.SendPropertyChanging();
					this._LastLinkCheck = value;
					this.SendPropertyChanged("LastLinkCheck");
					this.OnLastLinkCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int DownloadCount
		{
			get
			{
				return this._DownloadCount;
			}
			set
			{
				if ((this._DownloadCount != value))
				{
					this.OnDownloadCountChanging(value);
					this.SendPropertyChanging();
					this._DownloadCount = value;
					this.SendPropertyChanged("DownloadCount");
					this.OnDownloadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoLinkDownloadCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int NoLinkDownloadCount
		{
			get
			{
				return this._NoLinkDownloadCount;
			}
			set
			{
				if ((this._NoLinkDownloadCount != value))
				{
					this.OnNoLinkDownloadCountChanging(value);
					this.SendPropertyChanging();
					this._NoLinkDownloadCount = value;
					this.SendPropertyChanged("NoLinkDownloadCount");
					this.OnNoLinkDownloadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChange", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> LastChange
		{
			get
			{
				return this._LastChange;
			}
			set
			{
				if ((this._LastChange != value))
				{
					this.OnLastChangeChanging(value);
					this.SendPropertyChanging();
					this._LastChange = value;
					this.SendPropertyChanged("LastChange");
					this.OnLastChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapIsSpecial", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> MapIsSpecial
		{
			get
			{
				return this._MapIsSpecial;
			}
			set
			{
				if ((this._MapIsSpecial != value))
				{
					this.OnMapIsSpecialChanging(value);
					this.SendPropertyChanging();
					this._MapIsSpecial = value;
					this.SendPropertyChanged("MapIsSpecial");
					this.OnMapIsSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapSizeSquared", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> MapSizeSquared
		{
			get
			{
				return this._MapSizeSquared;
			}
			set
			{
				if ((this._MapSizeSquared != value))
				{
					this.OnMapSizeSquaredChanging(value);
					this.SendPropertyChanging();
					this._MapSizeSquared = value;
					this.SendPropertyChanged("MapSizeSquared");
					this.OnMapSizeSquaredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapSizeRatio", DbType="real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<float> MapSizeRatio
		{
			get
			{
				return this._MapSizeRatio;
			}
			set
			{
				if ((this._MapSizeRatio != value))
				{
					this.OnMapSizeRatioChanging(value);
					this.SendPropertyChanging();
					this._MapSizeRatio = value;
					this.SendPropertyChanged("MapSizeRatio");
					this.OnMapSizeRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapWaterLevel", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> MapWaterLevel
		{
			get
			{
				return this._MapWaterLevel;
			}
			set
			{
				if ((this._MapWaterLevel != value))
				{
					this.OnMapWaterLevelChanging(value);
					this.SendPropertyChanging();
					this._MapWaterLevel = value;
					this.SendPropertyChanged("MapWaterLevel");
					this.OnMapWaterLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapIsFfa", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> MapIsFfa
		{
			get
			{
				return this._MapIsFfa;
			}
			set
			{
				if ((this._MapIsFfa != value))
				{
					this.OnMapIsFfaChanging(value);
					this.SendPropertyChanging();
					this._MapIsFfa = value;
					this.SendPropertyChanged("MapIsFfa");
					this.OnMapIsFfaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapHills", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<int> MapHills
		{
			get
			{
				return this._MapHills;
			}
			set
			{
				if ((this._MapHills != value))
				{
					this.OnMapHillsChanging(value);
					this.SendPropertyChanging();
					this._MapHills = value;
					this.SendPropertyChanged("MapHills");
					this.OnMapHillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this.OnAuthorNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorName = value;
					this.SendPropertyChanged("AuthorName");
					this.OnAuthorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapRatingCount", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<int> MapRatingCount
		{
			get
			{
				return this._MapRatingCount;
			}
			set
			{
				if ((this._MapRatingCount != value))
				{
					this.OnMapRatingCountChanging(value);
					this.SendPropertyChanging();
					this._MapRatingCount = value;
					this.SendPropertyChanged("MapRatingCount");
					this.OnMapRatingCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapRatingSum", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> MapRatingSum
		{
			get
			{
				return this._MapRatingSum;
			}
			set
			{
				if ((this._MapRatingSum != value))
				{
					this.OnMapRatingSumChanging(value);
					this.SendPropertyChanging();
					this._MapRatingSum = value;
					this.SendPropertyChanged("MapRatingSum");
					this.OnMapRatingSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapIsAssymetrical", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<bool> MapIsAssymetrical
		{
			get
			{
				return this._MapIsAssymetrical;
			}
			set
			{
				if ((this._MapIsAssymetrical != value))
				{
					this.OnMapIsAssymetricalChanging(value);
					this.SendPropertyChanging();
					this._MapIsAssymetrical = value;
					this.SendPropertyChanged("MapIsAssymetrical");
					this.OnMapIsAssymetricalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaggedByAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> TaggedByAccountID
		{
			get
			{
				return this._TaggedByAccountID;
			}
			set
			{
				if ((this._TaggedByAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaggedByAccountIDChanging(value);
					this.SendPropertyChanging();
					this._TaggedByAccountID = value;
					this.SendPropertyChanged("TaggedByAccountID");
					this.OnTaggedByAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapWidth", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> MapWidth
		{
			get
			{
				return this._MapWidth;
			}
			set
			{
				if ((this._MapWidth != value))
				{
					this.OnMapWidthChanging(value);
					this.SendPropertyChanging();
					this._MapWidth = value;
					this.SendPropertyChanged("MapWidth");
					this.OnMapWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapHeight", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<int> MapHeight
		{
			get
			{
				return this._MapHeight;
			}
			set
			{
				if ((this._MapHeight != value))
				{
					this.OnMapHeightChanging(value);
					this.SendPropertyChanging();
					this._MapHeight = value;
					this.SendPropertyChanged("MapHeight");
					this.OnMapHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<int> ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeaturedOrder", DbType="real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<float> FeaturedOrder
		{
			get
			{
				return this._FeaturedOrder;
			}
			set
			{
				if ((this._FeaturedOrder != value))
				{
					this.OnFeaturedOrderChanging(value);
					this.SendPropertyChanging();
					this._FeaturedOrder = value;
					this.SendPropertyChanged("FeaturedOrder");
					this.OnFeaturedOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceDependency", Storage="_ResourceDependencies", ThisKey="ResourceID", OtherKey="ResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<ResourceDependency> ResourceDependencies
		{
			get
			{
				if ((this.serializing 
							&& (this._ResourceDependencies.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ResourceDependencies;
			}
			set
			{
				this._ResourceDependencies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceContentFile", Storage="_ResourceContentFiles", ThisKey="ResourceID", OtherKey="ResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<ResourceContentFile> ResourceContentFiles
		{
			get
			{
				if ((this.serializing 
							&& (this._ResourceContentFiles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ResourceContentFiles;
			}
			set
			{
				this._ResourceContentFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceSpringHash", Storage="_ResourceSpringHashes", ThisKey="ResourceID", OtherKey="ResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<ResourceSpringHash> ResourceSpringHashes
		{
			get
			{
				if ((this.serializing 
							&& (this._ResourceSpringHashes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ResourceSpringHashes;
			}
			set
			{
				this._ResourceSpringHashes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_MapRating", Storage="_MapRatings", ThisKey="ResourceID", OtherKey="ResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<MapRating> MapRatings
		{
			get
			{
				if ((this.serializing 
							&& (this._MapRatings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MapRatings;
			}
			set
			{
				this._MapRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_SpringBattle", Storage="_SpringBattlesByMapResourceID", ThisKey="ResourceID", OtherKey="MapResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<SpringBattle> SpringBattlesByMapResourceID
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattlesByMapResourceID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattlesByMapResourceID;
			}
			set
			{
				this._SpringBattlesByMapResourceID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_SpringBattle1", Storage="_SpringBattlesByModResourceID", ThisKey="ResourceID", OtherKey="ModResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<SpringBattle> SpringBattlesByModResourceID
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattlesByModResourceID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattlesByModResourceID;
			}
			set
			{
				this._SpringBattlesByModResourceID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Resource", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.Resources = null;
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.Resources = this;
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Resource", Storage="_Account", ThisKey="TaggedByAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Resources.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Resources.Add(this);
						this._TaggedByAccountID = value.AccountID;
					}
					else
					{
						this._TaggedByAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Resource", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.Resources = null;
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.Resources = this;
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResourceDependencies(ResourceDependency entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_ResourceDependencies(ResourceDependency entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_ResourceContentFiles(ResourceContentFile entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_ResourceContentFiles(ResourceContentFile entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_ResourceSpringHashes(ResourceSpringHash entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_ResourceSpringHashes(ResourceSpringHash entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_MapRatings(MapRating entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_MapRatings(MapRating entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_SpringBattlesByMapResourceID(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.ResourceByMapResourceID = this;
		}
		
		private void detach_SpringBattlesByMapResourceID(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.ResourceByMapResourceID = null;
		}
		
		private void attach_SpringBattlesByModResourceID(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.ResourceByModResourceID = this;
		}
		
		private void detach_SpringBattlesByModResourceID(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.ResourceByModResourceID = null;
		}
		
		private void Initialize()
		{
			this._ResourceDependencies = new EntitySet<ResourceDependency>(new Action<ResourceDependency>(this.attach_ResourceDependencies), new Action<ResourceDependency>(this.detach_ResourceDependencies));
			this._ResourceContentFiles = new EntitySet<ResourceContentFile>(new Action<ResourceContentFile>(this.attach_ResourceContentFiles), new Action<ResourceContentFile>(this.detach_ResourceContentFiles));
			this._ResourceSpringHashes = new EntitySet<ResourceSpringHash>(new Action<ResourceSpringHash>(this.attach_ResourceSpringHashes), new Action<ResourceSpringHash>(this.detach_ResourceSpringHashes));
			this._MapRatings = new EntitySet<MapRating>(new Action<MapRating>(this.attach_MapRatings), new Action<MapRating>(this.detach_MapRatings));
			this._SpringBattlesByMapResourceID = new EntitySet<SpringBattle>(new Action<SpringBattle>(this.attach_SpringBattlesByMapResourceID), new Action<SpringBattle>(this.detach_SpringBattlesByMapResourceID));
			this._SpringBattlesByModResourceID = new EntitySet<SpringBattle>(new Action<SpringBattle>(this.attach_SpringBattlesByModResourceID), new Action<SpringBattle>(this.detach_SpringBattlesByModResourceID));
			this._Mission = default(EntityRef<Mission>);
			this._Account = default(EntityRef<Account>);
			this._ForumThread = default(EntityRef<ForumThread>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MissionScore")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MissionScore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MissionID;
		
		private int _AccountID;
		
		private int _Score;
		
		private System.DateTime _Time;
		
		private int _MissionRevision;
		
		private int _GameSeconds;
		
		private EntityRef<Mission> _Mission;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMissionIDChanging(int value);
    partial void OnMissionIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnMissionRevisionChanging(int value);
    partial void OnMissionRevisionChanged();
    partial void OnGameSecondsChanging(int value);
    partial void OnGameSecondsChanged();
    #endregion
		
		public MissionScore()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Time]", Storage="_Time", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionRevision", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int MissionRevision
		{
			get
			{
				return this._MissionRevision;
			}
			set
			{
				if ((this._MissionRevision != value))
				{
					this.OnMissionRevisionChanging(value);
					this.SendPropertyChanging();
					this._MissionRevision = value;
					this.SendPropertyChanged("MissionRevision");
					this.OnMissionRevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameSeconds", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int GameSeconds
		{
			get
			{
				return this._GameSeconds;
			}
			set
			{
				if ((this._GameSeconds != value))
				{
					this.OnGameSecondsChanging(value);
					this.SendPropertyChanging();
					this._GameSeconds = value;
					this.SendPropertyChanged("GameSeconds");
					this.OnGameSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_MissionScore", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.MissionScores.Remove(this);
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.MissionScores.Add(this);
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(int);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MissionScore", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.MissionScores.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.MissionScores.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Mission = default(EntityRef<Mission>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rating")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Rating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingID;
		
		private int _AccountID;
		
		private System.Nullable<int> _MissionID;
		
		private System.Nullable<int> _Rating1;
		
		private System.Nullable<int> _Difficulty;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Mission> _Mission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingIDChanging(int value);
    partial void OnRatingIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnMissionIDChanging(System.Nullable<int> value);
    partial void OnMissionIDChanged();
    partial void OnRating1Changing(System.Nullable<int> value);
    partial void OnRating1Changed();
    partial void OnDifficultyChanging(System.Nullable<int> value);
    partial void OnDifficultyChanged();
    #endregion
		
		public Rating()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RatingID
		{
			get
			{
				return this._RatingID;
			}
			set
			{
				if ((this._RatingID != value))
				{
					this.OnRatingIDChanging(value);
					this.SendPropertyChanging();
					this._RatingID = value;
					this.SendPropertyChanged("RatingID");
					this.OnRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Rating", Storage="_Rating1", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> Rating1
		{
			get
			{
				return this._Rating1;
			}
			set
			{
				if ((this._Rating1 != value))
				{
					this.OnRating1Changing(value);
					this.SendPropertyChanging();
					this._Rating1 = value;
					this.SendPropertyChanged("Rating1");
					this.OnRating1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difficulty", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> Difficulty
		{
			get
			{
				return this._Difficulty;
			}
			set
			{
				if ((this._Difficulty != value))
				{
					this.OnDifficultyChanging(value);
					this.SendPropertyChanging();
					this._Difficulty = value;
					this.SendPropertyChanged("Difficulty");
					this.OnDifficultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Rating", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Ratings.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Ratings.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Rating", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.Ratings.Remove(this);
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.Ratings.Add(this);
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._Mission = default(EntityRef<Mission>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumPost")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumPostID;
		
		private int _AuthorAccountID;
		
		private System.DateTime _Created;
		
		private string _Text;
		
		private int _ForumThreadID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<ForumThread> _ForumThread;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumPostIDChanging(int value);
    partial void OnForumPostIDChanged();
    partial void OnAuthorAccountIDChanging(int value);
    partial void OnAuthorAccountIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    #endregion
		
		public ForumPost()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumPostID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumPostID
		{
			get
			{
				return this._ForumPostID;
			}
			set
			{
				if ((this._ForumPostID != value))
				{
					this.OnForumPostIDChanging(value);
					this.SendPropertyChanging();
					this._ForumPostID = value;
					this.SendPropertyChanged("ForumPostID");
					this.OnForumPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorAccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AuthorAccountID
		{
			get
			{
				return this._AuthorAccountID;
			}
			set
			{
				if ((this._AuthorAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorAccountID = value;
					this.SendPropertyChanged("AuthorAccountID");
					this.OnAuthorAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="nvarchar(max) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumPost", Storage="_Account", ThisKey="AuthorAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.ForumPosts.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.ForumPosts.Add(this);
						this._AuthorAccountID = value.AccountID;
					}
					else
					{
						this._AuthorAccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumPost", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.ForumPosts.Remove(this);
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.ForumPosts.Add(this);
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(int);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._ForumThread = default(EntityRef<ForumThread>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapRating")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MapRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private int _AccountID;
		
		private int _Rating;
		
		private EntityRef<Resource> _Resource;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    #endregion
		
		public MapRating()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_MapRating", Storage="_Resource", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.MapRatings.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.MapRatings.Add(this);
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MapRating", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.MapRatings.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.MapRatings.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Resource = default(EntityRef<Resource>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpringBattle")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SpringBattle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpringBattleID;
		
		private string _EngineGameID;
		
		private int _HostAccountID;
		
		private string _Title;
		
		private int _MapResourceID;
		
		private int _ModResourceID;
		
		private System.DateTime _StartTime;
		
		private int _Duration;
		
		private int _PlayerCount;
		
		private bool _HasBots;
		
		private bool _IsMission;
		
		private string _ReplayFileName;
		
		private string _EngineVersion;
		
		private bool _IsEloProcessed;
		
		private System.Nullable<int> _WinnerTeamXpChange;
		
		private System.Nullable<int> _LoserTeamXpChange;
		
		private System.Nullable<int> _RatingSum;
		
		private System.Nullable<int> _RatingCount;
		
		private System.Nullable<int> _ForumThreadID;
		
		private EntitySet<SpringBattlePlayer> _SpringBattlePlayers;
		
		private EntitySet<AccountBattleAward> _AccountBattleAwards;
		
		private EntitySet<AccountBattleStat> _AccountBattleStats;
		
		private EntitySet<EventSpringBattle> _EventSpringBattles;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Resource> _ResourceByMapResourceID;
		
		private EntityRef<Resource> _ResourceByModResourceID;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    partial void OnEngineGameIDChanging(string value);
    partial void OnEngineGameIDChanged();
    partial void OnHostAccountIDChanging(int value);
    partial void OnHostAccountIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMapResourceIDChanging(int value);
    partial void OnMapResourceIDChanged();
    partial void OnModResourceIDChanging(int value);
    partial void OnModResourceIDChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnDurationChanging(int value);
    partial void OnDurationChanged();
    partial void OnPlayerCountChanging(int value);
    partial void OnPlayerCountChanged();
    partial void OnHasBotsChanging(bool value);
    partial void OnHasBotsChanged();
    partial void OnIsMissionChanging(bool value);
    partial void OnIsMissionChanged();
    partial void OnReplayFileNameChanging(string value);
    partial void OnReplayFileNameChanged();
    partial void OnEngineVersionChanging(string value);
    partial void OnEngineVersionChanged();
    partial void OnIsEloProcessedChanging(bool value);
    partial void OnIsEloProcessedChanged();
    partial void OnWinnerTeamXpChangeChanging(System.Nullable<int> value);
    partial void OnWinnerTeamXpChangeChanged();
    partial void OnLoserTeamXpChangeChanging(System.Nullable<int> value);
    partial void OnLoserTeamXpChangeChanged();
    partial void OnRatingSumChanging(System.Nullable<int> value);
    partial void OnRatingSumChanged();
    partial void OnRatingCountChanging(System.Nullable<int> value);
    partial void OnRatingCountChanged();
    partial void OnForumThreadIDChanging(System.Nullable<int> value);
    partial void OnForumThreadIDChanged();
    #endregion
		
		public SpringBattle()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineGameID", DbType="varchar(64) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string EngineGameID
		{
			get
			{
				return this._EngineGameID;
			}
			set
			{
				if ((this._EngineGameID != value))
				{
					this.OnEngineGameIDChanging(value);
					this.SendPropertyChanging();
					this._EngineGameID = value;
					this.SendPropertyChanged("EngineGameID");
					this.OnEngineGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostAccountID", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int HostAccountID
		{
			get
			{
				return this._HostAccountID;
			}
			set
			{
				if ((this._HostAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostAccountIDChanging(value);
					this.SendPropertyChanging();
					this._HostAccountID = value;
					this.SendPropertyChanged("HostAccountID");
					this.OnHostAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="nvarchar(200)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapResourceID", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int MapResourceID
		{
			get
			{
				return this._MapResourceID;
			}
			set
			{
				if ((this._MapResourceID != value))
				{
					if (this._ResourceByMapResourceID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMapResourceIDChanging(value);
					this.SendPropertyChanging();
					this._MapResourceID = value;
					this.SendPropertyChanged("MapResourceID");
					this.OnMapResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModResourceID", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int ModResourceID
		{
			get
			{
				return this._ModResourceID;
			}
			set
			{
				if ((this._ModResourceID != value))
				{
					if (this._ResourceByModResourceID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ModResourceID = value;
					this.SendPropertyChanged("ModResourceID");
					this.OnModResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="datetime NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int PlayerCount
		{
			get
			{
				return this._PlayerCount;
			}
			set
			{
				if ((this._PlayerCount != value))
				{
					this.OnPlayerCountChanging(value);
					this.SendPropertyChanging();
					this._PlayerCount = value;
					this.SendPropertyChanged("PlayerCount");
					this.OnPlayerCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBots", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool HasBots
		{
			get
			{
				return this._HasBots;
			}
			set
			{
				if ((this._HasBots != value))
				{
					this.OnHasBotsChanging(value);
					this.SendPropertyChanging();
					this._HasBots = value;
					this.SendPropertyChanged("HasBots");
					this.OnHasBotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMission", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsMission
		{
			get
			{
				return this._IsMission;
			}
			set
			{
				if ((this._IsMission != value))
				{
					this.OnIsMissionChanging(value);
					this.SendPropertyChanging();
					this._IsMission = value;
					this.SendPropertyChanged("IsMission");
					this.OnIsMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplayFileName", DbType="nvarchar(500)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string ReplayFileName
		{
			get
			{
				return this._ReplayFileName;
			}
			set
			{
				if ((this._ReplayFileName != value))
				{
					this.OnReplayFileNameChanging(value);
					this.SendPropertyChanging();
					this._ReplayFileName = value;
					this.SendPropertyChanged("ReplayFileName");
					this.OnReplayFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineVersion", DbType="nvarchar(100)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string EngineVersion
		{
			get
			{
				return this._EngineVersion;
			}
			set
			{
				if ((this._EngineVersion != value))
				{
					this.OnEngineVersionChanging(value);
					this.SendPropertyChanging();
					this._EngineVersion = value;
					this.SendPropertyChanged("EngineVersion");
					this.OnEngineVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEloProcessed", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsEloProcessed
		{
			get
			{
				return this._IsEloProcessed;
			}
			set
			{
				if ((this._IsEloProcessed != value))
				{
					this.OnIsEloProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsEloProcessed = value;
					this.SendPropertyChanged("IsEloProcessed");
					this.OnIsEloProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinnerTeamXpChange", DbType="int", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<int> WinnerTeamXpChange
		{
			get
			{
				return this._WinnerTeamXpChange;
			}
			set
			{
				if ((this._WinnerTeamXpChange != value))
				{
					this.OnWinnerTeamXpChangeChanging(value);
					this.SendPropertyChanging();
					this._WinnerTeamXpChange = value;
					this.SendPropertyChanged("WinnerTeamXpChange");
					this.OnWinnerTeamXpChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoserTeamXpChange", DbType="int", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<int> LoserTeamXpChange
		{
			get
			{
				return this._LoserTeamXpChange;
			}
			set
			{
				if ((this._LoserTeamXpChange != value))
				{
					this.OnLoserTeamXpChangeChanging(value);
					this.SendPropertyChanging();
					this._LoserTeamXpChange = value;
					this.SendPropertyChanged("LoserTeamXpChange");
					this.OnLoserTeamXpChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingSum", DbType="int", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> RatingSum
		{
			get
			{
				return this._RatingSum;
			}
			set
			{
				if ((this._RatingSum != value))
				{
					this.OnRatingSumChanging(value);
					this.SendPropertyChanging();
					this._RatingSum = value;
					this.SendPropertyChanged("RatingSum");
					this.OnRatingSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingCount", DbType="int", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> RatingCount
		{
			get
			{
				return this._RatingCount;
			}
			set
			{
				if ((this._RatingCount != value))
				{
					this.OnRatingCountChanging(value);
					this.SendPropertyChanging();
					this._RatingCount = value;
					this.SendPropertyChanged("RatingCount");
					this.OnRatingCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_SpringBattlePlayer", Storage="_SpringBattlePlayers", ThisKey="SpringBattleID", OtherKey="SpringBattleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<SpringBattlePlayer> SpringBattlePlayers
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattlePlayers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattlePlayers;
			}
			set
			{
				this._SpringBattlePlayers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_AccountBattleAward", Storage="_AccountBattleAwards", ThisKey="SpringBattleID", OtherKey="SpringBattleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<AccountBattleAward> AccountBattleAwards
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountBattleAwards.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountBattleAwards;
			}
			set
			{
				this._AccountBattleAwards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_AccountBattleStat", Storage="_AccountBattleStats", ThisKey="SpringBattleID", OtherKey="SpringBattleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<AccountBattleStat> AccountBattleStats
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountBattleStats.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountBattleStats;
			}
			set
			{
				this._AccountBattleStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_EventSpringBattle", Storage="_EventSpringBattles", ThisKey="SpringBattleID", OtherKey="SpringBattleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<EventSpringBattle> EventSpringBattles
		{
			get
			{
				if ((this.serializing 
							&& (this._EventSpringBattles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventSpringBattles;
			}
			set
			{
				this._EventSpringBattles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SpringBattle", Storage="_Account", ThisKey="HostAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.SpringBattles.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.SpringBattles.Add(this);
						this._HostAccountID = value.AccountID;
					}
					else
					{
						this._HostAccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_SpringBattle", Storage="_ResourceByMapResourceID", ThisKey="MapResourceID", OtherKey="ResourceID", IsForeignKey=true)]
		public Resource ResourceByMapResourceID
		{
			get
			{
				return this._ResourceByMapResourceID.Entity;
			}
			set
			{
				Resource previousValue = this._ResourceByMapResourceID.Entity;
				if (((previousValue != value) 
							|| (this._ResourceByMapResourceID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceByMapResourceID.Entity = null;
						previousValue.SpringBattlesByMapResourceID.Remove(this);
					}
					this._ResourceByMapResourceID.Entity = value;
					if ((value != null))
					{
						value.SpringBattlesByMapResourceID.Add(this);
						this._MapResourceID = value.ResourceID;
					}
					else
					{
						this._MapResourceID = default(int);
					}
					this.SendPropertyChanged("ResourceByMapResourceID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_SpringBattle1", Storage="_ResourceByModResourceID", ThisKey="ModResourceID", OtherKey="ResourceID", IsForeignKey=true)]
		public Resource ResourceByModResourceID
		{
			get
			{
				return this._ResourceByModResourceID.Entity;
			}
			set
			{
				Resource previousValue = this._ResourceByModResourceID.Entity;
				if (((previousValue != value) 
							|| (this._ResourceByModResourceID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceByModResourceID.Entity = null;
						previousValue.SpringBattlesByModResourceID.Remove(this);
					}
					this._ResourceByModResourceID.Entity = value;
					if ((value != null))
					{
						value.SpringBattlesByModResourceID.Add(this);
						this._ModResourceID = value.ResourceID;
					}
					else
					{
						this._ModResourceID = default(int);
					}
					this.SendPropertyChanged("ResourceByModResourceID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_SpringBattle", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.SpringBattles = null;
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.SpringBattles = this;
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SpringBattlePlayers(SpringBattlePlayer entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = this;
		}
		
		private void detach_SpringBattlePlayers(SpringBattlePlayer entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = null;
		}
		
		private void attach_AccountBattleAwards(AccountBattleAward entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = this;
		}
		
		private void detach_AccountBattleAwards(AccountBattleAward entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = null;
		}
		
		private void attach_AccountBattleStats(AccountBattleStat entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = this;
		}
		
		private void detach_AccountBattleStats(AccountBattleStat entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = null;
		}
		
		private void attach_EventSpringBattles(EventSpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = this;
		}
		
		private void detach_EventSpringBattles(EventSpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = null;
		}
		
		private void Initialize()
		{
			this._SpringBattlePlayers = new EntitySet<SpringBattlePlayer>(new Action<SpringBattlePlayer>(this.attach_SpringBattlePlayers), new Action<SpringBattlePlayer>(this.detach_SpringBattlePlayers));
			this._AccountBattleAwards = new EntitySet<AccountBattleAward>(new Action<AccountBattleAward>(this.attach_AccountBattleAwards), new Action<AccountBattleAward>(this.detach_AccountBattleAwards));
			this._AccountBattleStats = new EntitySet<AccountBattleStat>(new Action<AccountBattleStat>(this.attach_AccountBattleStats), new Action<AccountBattleStat>(this.detach_AccountBattleStats));
			this._EventSpringBattles = new EntitySet<EventSpringBattle>(new Action<EventSpringBattle>(this.attach_EventSpringBattles), new Action<EventSpringBattle>(this.detach_EventSpringBattles));
			this._Account = default(EntityRef<Account>);
			this._ResourceByMapResourceID = default(EntityRef<Resource>);
			this._ResourceByModResourceID = default(EntityRef<Resource>);
			this._ForumThread = default(EntityRef<ForumThread>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpringBattlePlayer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SpringBattlePlayer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpringBattleID;
		
		private int _AccountID;
		
		private bool _IsSpectator;
		
		private bool _IsInVictoryTeam;
		
		private string _CommanderType;
		
		private System.Nullable<int> _LoseTime;
		
		private int _AllyNumber;
		
		private int _Rank;
		
		private System.Nullable<float> _EloChange;
		
		private System.Nullable<int> _XpChange;
		
		private System.Nullable<int> _Influence;
		
		private EntityRef<SpringBattle> _SpringBattle;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnIsSpectatorChanging(bool value);
    partial void OnIsSpectatorChanged();
    partial void OnIsInVictoryTeamChanging(bool value);
    partial void OnIsInVictoryTeamChanged();
    partial void OnCommanderTypeChanging(string value);
    partial void OnCommanderTypeChanged();
    partial void OnLoseTimeChanging(System.Nullable<int> value);
    partial void OnLoseTimeChanged();
    partial void OnAllyNumberChanging(int value);
    partial void OnAllyNumberChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnEloChangeChanging(System.Nullable<float> value);
    partial void OnEloChangeChanged();
    partial void OnXpChangeChanging(System.Nullable<int> value);
    partial void OnXpChangeChanged();
    partial void OnInfluenceChanging(System.Nullable<int> value);
    partial void OnInfluenceChanged();
    #endregion
		
		public SpringBattlePlayer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", DbType="int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					if (this._SpringBattle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpectator", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsSpectator
		{
			get
			{
				return this._IsSpectator;
			}
			set
			{
				if ((this._IsSpectator != value))
				{
					this.OnIsSpectatorChanging(value);
					this.SendPropertyChanging();
					this._IsSpectator = value;
					this.SendPropertyChanged("IsSpectator");
					this.OnIsSpectatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInVictoryTeam", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsInVictoryTeam
		{
			get
			{
				return this._IsInVictoryTeam;
			}
			set
			{
				if ((this._IsInVictoryTeam != value))
				{
					this.OnIsInVictoryTeamChanging(value);
					this.SendPropertyChanging();
					this._IsInVictoryTeam = value;
					this.SendPropertyChanged("IsInVictoryTeam");
					this.OnIsInVictoryTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderType", DbType="nvarchar(50)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CommanderType
		{
			get
			{
				return this._CommanderType;
			}
			set
			{
				if ((this._CommanderType != value))
				{
					this.OnCommanderTypeChanging(value);
					this.SendPropertyChanging();
					this._CommanderType = value;
					this.SendPropertyChanged("CommanderType");
					this.OnCommanderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoseTime", DbType="int", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> LoseTime
		{
			get
			{
				return this._LoseTime;
			}
			set
			{
				if ((this._LoseTime != value))
				{
					this.OnLoseTimeChanging(value);
					this.SendPropertyChanging();
					this._LoseTime = value;
					this.SendPropertyChanged("LoseTime");
					this.OnLoseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllyNumber", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int AllyNumber
		{
			get
			{
				return this._AllyNumber;
			}
			set
			{
				if ((this._AllyNumber != value))
				{
					this.OnAllyNumberChanging(value);
					this.SendPropertyChanging();
					this._AllyNumber = value;
					this.SendPropertyChanged("AllyNumber");
					this.OnAllyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EloChange", DbType="real", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<float> EloChange
		{
			get
			{
				return this._EloChange;
			}
			set
			{
				if ((this._EloChange != value))
				{
					this.OnEloChangeChanging(value);
					this.SendPropertyChanging();
					this._EloChange = value;
					this.SendPropertyChanged("EloChange");
					this.OnEloChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XpChange", DbType="int", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> XpChange
		{
			get
			{
				return this._XpChange;
			}
			set
			{
				if ((this._XpChange != value))
				{
					this.OnXpChangeChanging(value);
					this.SendPropertyChanging();
					this._XpChange = value;
					this.SendPropertyChanged("XpChange");
					this.OnXpChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Influence", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> Influence
		{
			get
			{
				return this._Influence;
			}
			set
			{
				if ((this._Influence != value))
				{
					this.OnInfluenceChanging(value);
					this.SendPropertyChanging();
					this._Influence = value;
					this.SendPropertyChanged("Influence");
					this.OnInfluenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_SpringBattlePlayer", Storage="_SpringBattle", ThisKey="SpringBattleID", OtherKey="SpringBattleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SpringBattle SpringBattle
		{
			get
			{
				return this._SpringBattle.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattle.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattle.Entity = null;
						previousValue.SpringBattlePlayers.Remove(this);
					}
					this._SpringBattle.Entity = value;
					if ((value != null))
					{
						value.SpringBattlePlayers.Add(this);
						this._SpringBattleID = value.SpringBattleID;
					}
					else
					{
						this._SpringBattleID = default(int);
					}
					this.SendPropertyChanged("SpringBattle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SpringBattlePlayer", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.SpringBattlePlayers.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.SpringBattlePlayers.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SpringBattle = default(EntityRef<SpringBattle>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumCategory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumCategoryID;
		
		private string _Title;
		
		private System.Nullable<int> _ParentForumCategoryID;
		
		private bool _IsLocked;
		
		private bool _IsMissions;
		
		private bool _IsMaps;
		
		private int _SortOrder;
		
		private bool _IsSpringBattles;
		
		private EntitySet<ForumThread> _ForumThreads;
		
		private EntitySet<ForumCategory> _ChildForumCategories;
		
		private EntityRef<ForumCategory> _ParentForumCategory;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumCategoryIDChanging(int value);
    partial void OnForumCategoryIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnParentForumCategoryIDChanging(System.Nullable<int> value);
    partial void OnParentForumCategoryIDChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnIsMissionsChanging(bool value);
    partial void OnIsMissionsChanged();
    partial void OnIsMapsChanging(bool value);
    partial void OnIsMapsChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnIsSpringBattlesChanging(bool value);
    partial void OnIsSpringBattlesChanged();
    #endregion
		
		public ForumCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumCategoryID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumCategoryID
		{
			get
			{
				return this._ForumCategoryID;
			}
			set
			{
				if ((this._ForumCategoryID != value))
				{
					this.OnForumCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ForumCategoryID = value;
					this.SendPropertyChanged("ForumCategoryID");
					this.OnForumCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="nvarchar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentForumCategoryID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ParentForumCategoryID
		{
			get
			{
				return this._ParentForumCategoryID;
			}
			set
			{
				if ((this._ParentForumCategoryID != value))
				{
					if (this._ParentForumCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentForumCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ParentForumCategoryID = value;
					this.SendPropertyChanged("ParentForumCategoryID");
					this.OnParentForumCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMissions", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsMissions
		{
			get
			{
				return this._IsMissions;
			}
			set
			{
				if ((this._IsMissions != value))
				{
					this.OnIsMissionsChanging(value);
					this.SendPropertyChanging();
					this._IsMissions = value;
					this.SendPropertyChanged("IsMissions");
					this.OnIsMissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMaps", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsMaps
		{
			get
			{
				return this._IsMaps;
			}
			set
			{
				if ((this._IsMaps != value))
				{
					this.OnIsMapsChanging(value);
					this.SendPropertyChanging();
					this._IsMaps = value;
					this.SendPropertyChanged("IsMaps");
					this.OnIsMapsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpringBattles", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsSpringBattles
		{
			get
			{
				return this._IsSpringBattles;
			}
			set
			{
				if ((this._IsSpringBattles != value))
				{
					this.OnIsSpringBattlesChanging(value);
					this.SendPropertyChanging();
					this._IsSpringBattles = value;
					this.SendPropertyChanged("IsSpringBattles");
					this.OnIsSpringBattlesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumThread", Storage="_ForumThreads", ThisKey="ForumCategoryID", OtherKey="ForumCategoryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<ForumThread> ForumThreads
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreads;
			}
			set
			{
				this._ForumThreads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumCategory", Storage="_ChildForumCategories", ThisKey="ForumCategoryID", OtherKey="ParentForumCategoryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<ForumCategory> ChildForumCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._ChildForumCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChildForumCategories;
			}
			set
			{
				this._ChildForumCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumCategory", Storage="_ParentForumCategory", ThisKey="ParentForumCategoryID", OtherKey="ForumCategoryID", IsForeignKey=true)]
		public ForumCategory ParentForumCategory
		{
			get
			{
				return this._ParentForumCategory.Entity;
			}
			set
			{
				ForumCategory previousValue = this._ParentForumCategory.Entity;
				if (((previousValue != value) 
							|| (this._ParentForumCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentForumCategory.Entity = null;
						previousValue.ChildForumCategories.Remove(this);
					}
					this._ParentForumCategory.Entity = value;
					if ((value != null))
					{
						value.ChildForumCategories.Add(this);
						this._ParentForumCategoryID = value.ForumCategoryID;
					}
					else
					{
						this._ParentForumCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentForumCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ForumThreads(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.ForumCategory = this;
		}
		
		private void detach_ForumThreads(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.ForumCategory = null;
		}
		
		private void attach_ChildForumCategories(ForumCategory entity)
		{
			this.SendPropertyChanging();
			entity.ParentForumCategory = this;
		}
		
		private void detach_ChildForumCategories(ForumCategory entity)
		{
			this.SendPropertyChanging();
			entity.ParentForumCategory = null;
		}
		
		private void Initialize()
		{
			this._ForumThreads = new EntitySet<ForumThread>(new Action<ForumThread>(this.attach_ForumThreads), new Action<ForumThread>(this.detach_ForumThreads));
			this._ChildForumCategories = new EntitySet<ForumCategory>(new Action<ForumCategory>(this.attach_ChildForumCategories), new Action<ForumCategory>(this.detach_ChildForumCategories));
			this._ParentForumCategory = default(EntityRef<ForumCategory>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumThreadLastRead")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumThreadLastRead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumThreadID;
		
		private int _AccountID;
		
		private System.Nullable<System.DateTime> _LastRead;
		
		private System.Nullable<System.DateTime> _LastPosted;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnLastReadChanging(System.Nullable<System.DateTime> value);
    partial void OnLastReadChanged();
    partial void OnLastPostedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPostedChanged();
    #endregion
		
		public ForumThreadLastRead()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRead", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> LastRead
		{
			get
			{
				return this._LastRead;
			}
			set
			{
				if ((this._LastRead != value))
				{
					this.OnLastReadChanging(value);
					this.SendPropertyChanging();
					this._LastRead = value;
					this.SendPropertyChanged("LastRead");
					this.OnLastReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPosted", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> LastPosted
		{
			get
			{
				return this._LastPosted;
			}
			set
			{
				if ((this._LastPosted != value))
				{
					this.OnLastPostedChanging(value);
					this.SendPropertyChanging();
					this._LastPosted = value;
					this.SendPropertyChanged("LastPosted");
					this.OnLastPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumThreadLastRead", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.ForumThreadLastReads.Remove(this);
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.ForumThreadLastReads.Add(this);
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(int);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThreadLastRead", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.ForumThreadLastReads.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.ForumThreadLastReads.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ForumThread = default(EntityRef<ForumThread>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountBattleAward")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountBattleAward : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _SpringBattleID;
		
		private string _AwardKey;
		
		private string _AwardDescription;
		
		private EntityRef<SpringBattle> _SpringBattle;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    partial void OnAwardKeyChanging(string value);
    partial void OnAwardKeyChanged();
    partial void OnAwardDescriptionChanging(string value);
    partial void OnAwardDescriptionChanged();
    #endregion
		
		public AccountBattleAward()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", DbType="int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					if (this._SpringBattle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AwardKey", DbType="varchar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string AwardKey
		{
			get
			{
				return this._AwardKey;
			}
			set
			{
				if ((this._AwardKey != value))
				{
					this.OnAwardKeyChanging(value);
					this.SendPropertyChanging();
					this._AwardKey = value;
					this.SendPropertyChanged("AwardKey");
					this.OnAwardKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AwardDescription", DbType="nvarchar(500)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string AwardDescription
		{
			get
			{
				return this._AwardDescription;
			}
			set
			{
				if ((this._AwardDescription != value))
				{
					this.OnAwardDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AwardDescription = value;
					this.SendPropertyChanged("AwardDescription");
					this.OnAwardDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_AccountBattleAward", Storage="_SpringBattle", ThisKey="SpringBattleID", OtherKey="SpringBattleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SpringBattle SpringBattle
		{
			get
			{
				return this._SpringBattle.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattle.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattle.Entity = null;
						previousValue.AccountBattleAwards.Remove(this);
					}
					this._SpringBattle.Entity = value;
					if ((value != null))
					{
						value.AccountBattleAwards.Add(this);
						this._SpringBattleID = value.SpringBattleID;
					}
					else
					{
						this._SpringBattleID = default(int);
					}
					this.SendPropertyChanged("SpringBattle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountBattleAward", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountBattleAwards.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountBattleAwards.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SpringBattle = default(EntityRef<SpringBattle>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountBattleStats")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountBattleStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _SpringBattleID;
		
		private string _StatsKey;
		
		private double _Value;
		
		private EntityRef<SpringBattle> _SpringBattle;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    partial void OnStatsKeyChanging(string value);
    partial void OnStatsKeyChanged();
    partial void OnValueChanging(double value);
    partial void OnValueChanged();
    #endregion
		
		public AccountBattleStat()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", DbType="int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					if (this._SpringBattle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatsKey", DbType="varchar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string StatsKey
		{
			get
			{
				return this._StatsKey;
			}
			set
			{
				if ((this._StatsKey != value))
				{
					this.OnStatsKeyChanging(value);
					this.SendPropertyChanging();
					this._StatsKey = value;
					this.SendPropertyChanged("StatsKey");
					this.OnStatsKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Value]", Storage="_Value", DbType="float NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public double Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_AccountBattleStat", Storage="_SpringBattle", ThisKey="SpringBattleID", OtherKey="SpringBattleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SpringBattle SpringBattle
		{
			get
			{
				return this._SpringBattle.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattle.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattle.Entity = null;
						previousValue.AccountBattleStats.Remove(this);
					}
					this._SpringBattle.Entity = value;
					if ((value != null))
					{
						value.AccountBattleStats.Add(this);
						this._SpringBattleID = value.SpringBattleID;
					}
					else
					{
						this._SpringBattleID = default(int);
					}
					this.SendPropertyChanged("SpringBattle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountBattleStat", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountBattleStats.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountBattleStats.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SpringBattle = default(EntityRef<SpringBattle>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unlock")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Unlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UnlockID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private int _NeededLevel;
		
		private string _LimitForChassis;
		
		private UnlockTypes _UnlockType;
		
		private System.Nullable<int> _RequiredUnlockID;
		
		private int _MorphLevel;
		
		private int _MaxModuleCount;
		
		private System.Nullable<int> _MetalCost;
		
		private int _XpCost;
		
		private System.Nullable<int> _MetalCostMorph2;
		
		private System.Nullable<int> _MetalCostMorph3;
		
		private System.Nullable<int> _MetalCostMorph4;
		
		private EntitySet<Unlock> _ChildUnlocks;
		
		private EntitySet<AccountUnlock> _AccountUnlocks;
		
		private EntitySet<Commander> _Commanders;
		
		private EntitySet<CommanderModule> _CommanderModules;
		
		private EntityRef<Unlock> _ParentUnlock;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnlockIDChanging(int value);
    partial void OnUnlockIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNeededLevelChanging(int value);
    partial void OnNeededLevelChanged();
    partial void OnLimitForChassisChanging(string value);
    partial void OnLimitForChassisChanged();
    partial void OnUnlockTypeChanging(UnlockTypes value);
    partial void OnUnlockTypeChanged();
    partial void OnRequiredUnlockIDChanging(System.Nullable<int> value);
    partial void OnRequiredUnlockIDChanged();
    partial void OnMorphLevelChanging(int value);
    partial void OnMorphLevelChanged();
    partial void OnMaxModuleCountChanging(int value);
    partial void OnMaxModuleCountChanged();
    partial void OnMetalCostChanging(System.Nullable<int> value);
    partial void OnMetalCostChanged();
    partial void OnXpCostChanging(int value);
    partial void OnXpCostChanged();
    partial void OnMetalCostMorph2Changing(System.Nullable<int> value);
    partial void OnMetalCostMorph2Changed();
    partial void OnMetalCostMorph3Changing(System.Nullable<int> value);
    partial void OnMetalCostMorph3Changed();
    partial void OnMetalCostMorph4Changing(System.Nullable<int> value);
    partial void OnMetalCostMorph4Changed();
    #endregion
		
		public Unlock()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UnlockID
		{
			get
			{
				return this._UnlockID;
			}
			set
			{
				if ((this._UnlockID != value))
				{
					this.OnUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._UnlockID = value;
					this.SendPropertyChanged("UnlockID");
					this.OnUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="nvarchar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="nvarchar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeededLevel", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int NeededLevel
		{
			get
			{
				return this._NeededLevel;
			}
			set
			{
				if ((this._NeededLevel != value))
				{
					this.OnNeededLevelChanging(value);
					this.SendPropertyChanging();
					this._NeededLevel = value;
					this.SendPropertyChanged("NeededLevel");
					this.OnNeededLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitForChassis", DbType="nvarchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string LimitForChassis
		{
			get
			{
				return this._LimitForChassis;
			}
			set
			{
				if ((this._LimitForChassis != value))
				{
					this.OnLimitForChassisChanging(value);
					this.SendPropertyChanging();
					this._LimitForChassis = value;
					this.SendPropertyChanged("LimitForChassis");
					this.OnLimitForChassisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockType", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public UnlockTypes UnlockType
		{
			get
			{
				return this._UnlockType;
			}
			set
			{
				if ((this._UnlockType != value))
				{
					this.OnUnlockTypeChanging(value);
					this.SendPropertyChanging();
					this._UnlockType = value;
					this.SendPropertyChanged("UnlockType");
					this.OnUnlockTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredUnlockID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> RequiredUnlockID
		{
			get
			{
				return this._RequiredUnlockID;
			}
			set
			{
				if ((this._RequiredUnlockID != value))
				{
					if (this._ParentUnlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequiredUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._RequiredUnlockID = value;
					this.SendPropertyChanged("RequiredUnlockID");
					this.OnRequiredUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorphLevel", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int MorphLevel
		{
			get
			{
				return this._MorphLevel;
			}
			set
			{
				if ((this._MorphLevel != value))
				{
					this.OnMorphLevelChanging(value);
					this.SendPropertyChanging();
					this._MorphLevel = value;
					this.SendPropertyChanged("MorphLevel");
					this.OnMorphLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxModuleCount", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int MaxModuleCount
		{
			get
			{
				return this._MaxModuleCount;
			}
			set
			{
				if ((this._MaxModuleCount != value))
				{
					this.OnMaxModuleCountChanging(value);
					this.SendPropertyChanging();
					this._MaxModuleCount = value;
					this.SendPropertyChanged("MaxModuleCount");
					this.OnMaxModuleCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalCost", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> MetalCost
		{
			get
			{
				return this._MetalCost;
			}
			set
			{
				if ((this._MetalCost != value))
				{
					this.OnMetalCostChanging(value);
					this.SendPropertyChanging();
					this._MetalCost = value;
					this.SendPropertyChanged("MetalCost");
					this.OnMetalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XpCost", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public int XpCost
		{
			get
			{
				return this._XpCost;
			}
			set
			{
				if ((this._XpCost != value))
				{
					this.OnXpCostChanging(value);
					this.SendPropertyChanging();
					this._XpCost = value;
					this.SendPropertyChanged("XpCost");
					this.OnXpCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalCostMorph2", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> MetalCostMorph2
		{
			get
			{
				return this._MetalCostMorph2;
			}
			set
			{
				if ((this._MetalCostMorph2 != value))
				{
					this.OnMetalCostMorph2Changing(value);
					this.SendPropertyChanging();
					this._MetalCostMorph2 = value;
					this.SendPropertyChanged("MetalCostMorph2");
					this.OnMetalCostMorph2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalCostMorph3", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<int> MetalCostMorph3
		{
			get
			{
				return this._MetalCostMorph3;
			}
			set
			{
				if ((this._MetalCostMorph3 != value))
				{
					this.OnMetalCostMorph3Changing(value);
					this.SendPropertyChanging();
					this._MetalCostMorph3 = value;
					this.SendPropertyChanged("MetalCostMorph3");
					this.OnMetalCostMorph3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalCostMorph4", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<int> MetalCostMorph4
		{
			get
			{
				return this._MetalCostMorph4;
			}
			set
			{
				if ((this._MetalCostMorph4 != value))
				{
					this.OnMetalCostMorph4Changing(value);
					this.SendPropertyChanging();
					this._MetalCostMorph4 = value;
					this.SendPropertyChanged("MetalCostMorph4");
					this.OnMetalCostMorph4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_Unlock", Storage="_ChildUnlocks", ThisKey="UnlockID", OtherKey="RequiredUnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<Unlock> ChildUnlocks
		{
			get
			{
				if ((this.serializing 
							&& (this._ChildUnlocks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChildUnlocks;
			}
			set
			{
				this._ChildUnlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_AccountUnlock", Storage="_AccountUnlocks", ThisKey="UnlockID", OtherKey="UnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<AccountUnlock> AccountUnlocks
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountUnlocks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountUnlocks;
			}
			set
			{
				this._AccountUnlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_Commander", Storage="_Commanders", ThisKey="UnlockID", OtherKey="ChassisUnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<Commander> Commanders
		{
			get
			{
				if ((this.serializing 
							&& (this._Commanders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Commanders;
			}
			set
			{
				this._Commanders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_CommanderModule", Storage="_CommanderModules", ThisKey="UnlockID", OtherKey="ModuleUnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<CommanderModule> CommanderModules
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderModules.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommanderModules;
			}
			set
			{
				this._CommanderModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_Unlock", Storage="_ParentUnlock", ThisKey="RequiredUnlockID", OtherKey="UnlockID", IsForeignKey=true)]
		public Unlock ParentUnlock
		{
			get
			{
				return this._ParentUnlock.Entity;
			}
			set
			{
				Unlock previousValue = this._ParentUnlock.Entity;
				if (((previousValue != value) 
							|| (this._ParentUnlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentUnlock.Entity = null;
						previousValue.ChildUnlocks.Remove(this);
					}
					this._ParentUnlock.Entity = value;
					if ((value != null))
					{
						value.ChildUnlocks.Add(this);
						this._RequiredUnlockID = value.UnlockID;
					}
					else
					{
						this._RequiredUnlockID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentUnlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChildUnlocks(Unlock entity)
		{
			this.SendPropertyChanging();
			entity.ParentUnlock = this;
		}
		
		private void detach_ChildUnlocks(Unlock entity)
		{
			this.SendPropertyChanging();
			entity.ParentUnlock = null;
		}
		
		private void attach_AccountUnlocks(AccountUnlock entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = this;
		}
		
		private void detach_AccountUnlocks(AccountUnlock entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = null;
		}
		
		private void attach_Commanders(Commander entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = this;
		}
		
		private void detach_Commanders(Commander entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = null;
		}
		
		private void attach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = this;
		}
		
		private void detach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = null;
		}
		
		private void Initialize()
		{
			this._ChildUnlocks = new EntitySet<Unlock>(new Action<Unlock>(this.attach_ChildUnlocks), new Action<Unlock>(this.detach_ChildUnlocks));
			this._AccountUnlocks = new EntitySet<AccountUnlock>(new Action<AccountUnlock>(this.attach_AccountUnlocks), new Action<AccountUnlock>(this.detach_AccountUnlocks));
			this._Commanders = new EntitySet<Commander>(new Action<Commander>(this.attach_Commanders), new Action<Commander>(this.detach_Commanders));
			this._CommanderModules = new EntitySet<CommanderModule>(new Action<CommanderModule>(this.attach_CommanderModules), new Action<CommanderModule>(this.detach_CommanderModules));
			this._ParentUnlock = default(EntityRef<Unlock>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountUnlock")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountUnlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _UnlockID;
		
		private int _Count;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Unlock> _Unlock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnUnlockIDChanging(int value);
    partial void OnUnlockIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    #endregion
		
		public AccountUnlock()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UnlockID
		{
			get
			{
				return this._UnlockID;
			}
			set
			{
				if ((this._UnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._UnlockID = value;
					this.SendPropertyChanged("UnlockID");
					this.OnUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Count]", Storage="_Count", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountUnlock", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountUnlocks.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountUnlocks.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_AccountUnlock", Storage="_Unlock", ThisKey="UnlockID", OtherKey="UnlockID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.AccountUnlocks.Remove(this);
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.AccountUnlocks.Add(this);
						this._UnlockID = value.UnlockID;
					}
					else
					{
						this._UnlockID = default(int);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._Unlock = default(EntityRef<Unlock>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commander")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Commander : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommanderID;
		
		private int _AccountID;
		
		private int _ProfileNumber;
		
		private string _Name;
		
		private int _ChassisUnlockID;
		
		private EntitySet<CommanderModule> _CommanderModules;
		
		private EntityRef<Unlock> _Unlock;
		
		private EntityRef<Account> _AccountByAccountID;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommanderIDChanging(int value);
    partial void OnCommanderIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnProfileNumberChanging(int value);
    partial void OnProfileNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnChassisUnlockIDChanging(int value);
    partial void OnChassisUnlockIDChanged();
    #endregion
		
		public Commander()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CommanderID
		{
			get
			{
				return this._CommanderID;
			}
			set
			{
				if ((this._CommanderID != value))
				{
					this.OnCommanderIDChanging(value);
					this.SendPropertyChanging();
					this._CommanderID = value;
					this.SendPropertyChanged("CommanderID");
					this.OnCommanderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._AccountByAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileNumber", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ProfileNumber
		{
			get
			{
				return this._ProfileNumber;
			}
			set
			{
				if ((this._ProfileNumber != value))
				{
					this.OnProfileNumberChanging(value);
					this.SendPropertyChanging();
					this._ProfileNumber = value;
					this.SendPropertyChanged("ProfileNumber");
					this.OnProfileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChassisUnlockID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int ChassisUnlockID
		{
			get
			{
				return this._ChassisUnlockID;
			}
			set
			{
				if ((this._ChassisUnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChassisUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._ChassisUnlockID = value;
					this.SendPropertyChanged("ChassisUnlockID");
					this.OnChassisUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commander_CommanderModule", Storage="_CommanderModules", ThisKey="CommanderID", OtherKey="CommanderID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CommanderModule> CommanderModules
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderModules.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommanderModules;
			}
			set
			{
				this._CommanderModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_Commander", Storage="_Unlock", ThisKey="ChassisUnlockID", OtherKey="UnlockID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.Commanders.Remove(this);
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.Commanders.Add(this);
						this._ChassisUnlockID = value.UnlockID;
					}
					else
					{
						this._ChassisUnlockID = default(int);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Commander", Storage="_AccountByAccountID", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByAccountID
		{
			get
			{
				return this._AccountByAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByAccountID.Entity = null;
						previousValue.Commanders.Remove(this);
					}
					this._AccountByAccountID.Entity = value;
					if ((value != null))
					{
						value.Commanders.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("AccountByAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.Commander = this;
		}
		
		private void detach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.Commander = null;
		}
		
		private void Initialize()
		{
			this._CommanderModules = new EntitySet<CommanderModule>(new Action<CommanderModule>(this.attach_CommanderModules), new Action<CommanderModule>(this.detach_CommanderModules));
			this._Unlock = default(EntityRef<Unlock>);
			this._AccountByAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommanderModule")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommanderModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommanderID;
		
		private int _ModuleUnlockID;
		
		private int _SlotID;
		
		private EntityRef<Commander> _Commander;
		
		private EntityRef<CommanderSlot> _CommanderSlot;
		
		private EntityRef<Unlock> _Unlock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommanderIDChanging(int value);
    partial void OnCommanderIDChanged();
    partial void OnModuleUnlockIDChanging(int value);
    partial void OnModuleUnlockIDChanged();
    partial void OnSlotIDChanging(int value);
    partial void OnSlotIDChanged();
    #endregion
		
		public CommanderModule()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CommanderID
		{
			get
			{
				return this._CommanderID;
			}
			set
			{
				if ((this._CommanderID != value))
				{
					if (this._Commander.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommanderIDChanging(value);
					this.SendPropertyChanging();
					this._CommanderID = value;
					this.SendPropertyChanged("CommanderID");
					this.OnCommanderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleUnlockID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ModuleUnlockID
		{
			get
			{
				return this._ModuleUnlockID;
			}
			set
			{
				if ((this._ModuleUnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleUnlockID = value;
					this.SendPropertyChanged("ModuleUnlockID");
					this.OnModuleUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlotID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SlotID
		{
			get
			{
				return this._SlotID;
			}
			set
			{
				if ((this._SlotID != value))
				{
					if (this._CommanderSlot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSlotIDChanging(value);
					this.SendPropertyChanging();
					this._SlotID = value;
					this.SendPropertyChanged("SlotID");
					this.OnSlotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commander_CommanderModule", Storage="_Commander", ThisKey="CommanderID", OtherKey="CommanderID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Commander Commander
		{
			get
			{
				return this._Commander.Entity;
			}
			set
			{
				Commander previousValue = this._Commander.Entity;
				if (((previousValue != value) 
							|| (this._Commander.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Commander.Entity = null;
						previousValue.CommanderModules.Remove(this);
					}
					this._Commander.Entity = value;
					if ((value != null))
					{
						value.CommanderModules.Add(this);
						this._CommanderID = value.CommanderID;
					}
					else
					{
						this._CommanderID = default(int);
					}
					this.SendPropertyChanged("Commander");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommanderSlot_CommanderModule", Storage="_CommanderSlot", ThisKey="SlotID", OtherKey="CommanderSlotID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CommanderSlot CommanderSlot
		{
			get
			{
				return this._CommanderSlot.Entity;
			}
			set
			{
				CommanderSlot previousValue = this._CommanderSlot.Entity;
				if (((previousValue != value) 
							|| (this._CommanderSlot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommanderSlot.Entity = null;
						previousValue.CommanderModules.Remove(this);
					}
					this._CommanderSlot.Entity = value;
					if ((value != null))
					{
						value.CommanderModules.Add(this);
						this._SlotID = value.CommanderSlotID;
					}
					else
					{
						this._SlotID = default(int);
					}
					this.SendPropertyChanged("CommanderSlot");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_CommanderModule", Storage="_Unlock", ThisKey="ModuleUnlockID", OtherKey="UnlockID", IsForeignKey=true)]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.CommanderModules.Remove(this);
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.CommanderModules.Add(this);
						this._ModuleUnlockID = value.UnlockID;
					}
					else
					{
						this._ModuleUnlockID = default(int);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Commander = default(EntityRef<Commander>);
			this._CommanderSlot = default(EntityRef<CommanderSlot>);
			this._Unlock = default(EntityRef<Unlock>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommanderSlot")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommanderSlot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommanderSlotID;
		
		private int _MorphLevel;
		
		private UnlockTypes _UnlockType;
		
		private EntitySet<CommanderModule> _CommanderModules;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommanderSlotIDChanging(int value);
    partial void OnCommanderSlotIDChanged();
    partial void OnMorphLevelChanging(int value);
    partial void OnMorphLevelChanged();
    partial void OnUnlockTypeChanging(UnlockTypes value);
    partial void OnUnlockTypeChanged();
    #endregion
		
		public CommanderSlot()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderSlotID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CommanderSlotID
		{
			get
			{
				return this._CommanderSlotID;
			}
			set
			{
				if ((this._CommanderSlotID != value))
				{
					this.OnCommanderSlotIDChanging(value);
					this.SendPropertyChanging();
					this._CommanderSlotID = value;
					this.SendPropertyChanged("CommanderSlotID");
					this.OnCommanderSlotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorphLevel", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int MorphLevel
		{
			get
			{
				return this._MorphLevel;
			}
			set
			{
				if ((this._MorphLevel != value))
				{
					this.OnMorphLevelChanging(value);
					this.SendPropertyChanging();
					this._MorphLevel = value;
					this.SendPropertyChanged("MorphLevel");
					this.OnMorphLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockType", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public UnlockTypes UnlockType
		{
			get
			{
				return this._UnlockType;
			}
			set
			{
				if ((this._UnlockType != value))
				{
					this.OnUnlockTypeChanging(value);
					this.SendPropertyChanging();
					this._UnlockType = value;
					this.SendPropertyChanged("UnlockType");
					this.OnUnlockTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommanderSlot_CommanderModule", Storage="_CommanderModules", ThisKey="CommanderSlotID", OtherKey="SlotID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<CommanderModule> CommanderModules
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderModules.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommanderModules;
			}
			set
			{
				this._CommanderModules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.CommanderSlot = this;
		}
		
		private void detach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.CommanderSlot = null;
		}
		
		private void Initialize()
		{
			this._CommanderModules = new EntitySet<CommanderModule>(new Action<CommanderModule>(this.attach_CommanderModules), new Action<CommanderModule>(this.detach_CommanderModules));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Poll")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Poll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollID;
		
		private string _QuestionText;
		
		private EntitySet<PollVote> _PollVotes;
		
		private EntitySet<PollOption> _PollOptions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnQuestionTextChanging(string value);
    partial void OnQuestionTextChanged();
    #endregion
		
		public Poll()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionText", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string QuestionText
		{
			get
			{
				return this._QuestionText;
			}
			set
			{
				if ((this._QuestionText != value))
				{
					this.OnQuestionTextChanging(value);
					this.SendPropertyChanging();
					this._QuestionText = value;
					this.SendPropertyChanged("QuestionText");
					this.OnQuestionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollVote", Storage="_PollVotes", ThisKey="PollID", OtherKey="PollID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<PollVote> PollVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._PollVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollVotes;
			}
			set
			{
				this._PollVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollOption", Storage="_PollOptions", ThisKey="PollID", OtherKey="PollID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<PollOption> PollOptions
		{
			get
			{
				if ((this.serializing 
							&& (this._PollOptions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollOptions;
			}
			set
			{
				this._PollOptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.Poll = this;
		}
		
		private void detach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.Poll = null;
		}
		
		private void attach_PollOptions(PollOption entity)
		{
			this.SendPropertyChanging();
			entity.Poll = this;
		}
		
		private void detach_PollOptions(PollOption entity)
		{
			this.SendPropertyChanging();
			entity.Poll = null;
		}
		
		private void Initialize()
		{
			this._PollVotes = new EntitySet<PollVote>(new Action<PollVote>(this.attach_PollVotes), new Action<PollVote>(this.detach_PollVotes));
			this._PollOptions = new EntitySet<PollOption>(new Action<PollOption>(this.attach_PollOptions), new Action<PollOption>(this.detach_PollOptions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PollVote")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PollVote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _PollID;
		
		private int _OptionID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Poll> _Poll;
		
		private EntityRef<PollOption> _PollOption;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnOptionIDChanging(int value);
    partial void OnOptionIDChanged();
    #endregion
		
		public PollVote()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					if (this._Poll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int OptionID
		{
			get
			{
				return this._OptionID;
			}
			set
			{
				if ((this._OptionID != value))
				{
					if (this._PollOption.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOptionIDChanging(value);
					this.SendPropertyChanging();
					this._OptionID = value;
					this.SendPropertyChanged("OptionID");
					this.OnOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PollVote", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.PollVotes.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.PollVotes.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollVote", Storage="_Poll", ThisKey="PollID", OtherKey="PollID", IsForeignKey=true)]
		public Poll Poll
		{
			get
			{
				return this._Poll.Entity;
			}
			set
			{
				Poll previousValue = this._Poll.Entity;
				if (((previousValue != value) 
							|| (this._Poll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Poll.Entity = null;
						previousValue.PollVotes.Remove(this);
					}
					this._Poll.Entity = value;
					if ((value != null))
					{
						value.PollVotes.Add(this);
						this._PollID = value.PollID;
					}
					else
					{
						this._PollID = default(int);
					}
					this.SendPropertyChanged("Poll");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PollOption_PollVote", Storage="_PollOption", ThisKey="OptionID", OtherKey="OptionID", IsForeignKey=true)]
		public PollOption PollOption
		{
			get
			{
				return this._PollOption.Entity;
			}
			set
			{
				PollOption previousValue = this._PollOption.Entity;
				if (((previousValue != value) 
							|| (this._PollOption.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PollOption.Entity = null;
						previousValue.PollVotes.Remove(this);
					}
					this._PollOption.Entity = value;
					if ((value != null))
					{
						value.PollVotes.Add(this);
						this._OptionID = value.OptionID;
					}
					else
					{
						this._OptionID = default(int);
					}
					this.SendPropertyChanged("PollOption");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._Poll = default(EntityRef<Poll>);
			this._PollOption = default(EntityRef<PollOption>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PollOption")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PollOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OptionID;
		
		private int _PollID;
		
		private string _OptionText;
		
		private int _Votes;
		
		private EntitySet<PollVote> _PollVotes;
		
		private EntityRef<Poll> _Poll;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOptionIDChanging(int value);
    partial void OnOptionIDChanged();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnOptionTextChanging(string value);
    partial void OnOptionTextChanged();
    partial void OnVotesChanging(int value);
    partial void OnVotesChanged();
    #endregion
		
		public PollOption()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int OptionID
		{
			get
			{
				return this._OptionID;
			}
			set
			{
				if ((this._OptionID != value))
				{
					this.OnOptionIDChanging(value);
					this.SendPropertyChanging();
					this._OptionID = value;
					this.SendPropertyChanged("OptionID");
					this.OnOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					if (this._Poll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionText", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string OptionText
		{
			get
			{
				return this._OptionText;
			}
			set
			{
				if ((this._OptionText != value))
				{
					this.OnOptionTextChanging(value);
					this.SendPropertyChanging();
					this._OptionText = value;
					this.SendPropertyChanged("OptionText");
					this.OnOptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Votes", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Votes
		{
			get
			{
				return this._Votes;
			}
			set
			{
				if ((this._Votes != value))
				{
					this.OnVotesChanging(value);
					this.SendPropertyChanging();
					this._Votes = value;
					this.SendPropertyChanged("Votes");
					this.OnVotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PollOption_PollVote", Storage="_PollVotes", ThisKey="OptionID", OtherKey="OptionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<PollVote> PollVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._PollVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollVotes;
			}
			set
			{
				this._PollVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollOption", Storage="_Poll", ThisKey="PollID", OtherKey="PollID", IsForeignKey=true)]
		public Poll Poll
		{
			get
			{
				return this._Poll.Entity;
			}
			set
			{
				Poll previousValue = this._Poll.Entity;
				if (((previousValue != value) 
							|| (this._Poll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Poll.Entity = null;
						previousValue.PollOptions.Remove(this);
					}
					this._Poll.Entity = value;
					if ((value != null))
					{
						value.PollOptions.Add(this);
						this._PollID = value.PollID;
					}
					else
					{
						this._PollID = default(int);
					}
					this.SendPropertyChanged("Poll");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.PollOption = this;
		}
		
		private void detach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.PollOption = null;
		}
		
		private void Initialize()
		{
			this._PollVotes = new EntitySet<PollVote>(new Action<PollVote>(this.attach_PollVotes), new Action<PollVote>(this.detach_PollVotes));
			this._Poll = default(EntityRef<Poll>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TreatyOffer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TreatyOffer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfferingClanID;
		
		private int _TargetClanID;
		
		private bool _IsCeaseFire;
		
		private bool _IsResearchAgreement;
		
		private bool _IsMilitaryAccess;
		
		private EntityRef<Clan> _ClanByOfferingClanID;
		
		private EntityRef<Clan> _ClanByTargetClanID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferingClanIDChanging(int value);
    partial void OnOfferingClanIDChanged();
    partial void OnTargetClanIDChanging(int value);
    partial void OnTargetClanIDChanged();
    partial void OnIsCeaseFireChanging(bool value);
    partial void OnIsCeaseFireChanged();
    partial void OnIsResearchAgreementChanging(bool value);
    partial void OnIsResearchAgreementChanged();
    partial void OnIsMilitaryAccessChanging(bool value);
    partial void OnIsMilitaryAccessChanged();
    #endregion
		
		public TreatyOffer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferingClanID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int OfferingClanID
		{
			get
			{
				return this._OfferingClanID;
			}
			set
			{
				if ((this._OfferingClanID != value))
				{
					if (this._ClanByOfferingClanID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferingClanIDChanging(value);
					this.SendPropertyChanging();
					this._OfferingClanID = value;
					this.SendPropertyChanged("OfferingClanID");
					this.OnOfferingClanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetClanID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int TargetClanID
		{
			get
			{
				return this._TargetClanID;
			}
			set
			{
				if ((this._TargetClanID != value))
				{
					if (this._ClanByTargetClanID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetClanIDChanging(value);
					this.SendPropertyChanging();
					this._TargetClanID = value;
					this.SendPropertyChanged("TargetClanID");
					this.OnTargetClanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCeaseFire", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsCeaseFire
		{
			get
			{
				return this._IsCeaseFire;
			}
			set
			{
				if ((this._IsCeaseFire != value))
				{
					this.OnIsCeaseFireChanging(value);
					this.SendPropertyChanging();
					this._IsCeaseFire = value;
					this.SendPropertyChanged("IsCeaseFire");
					this.OnIsCeaseFireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsResearchAgreement", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsResearchAgreement
		{
			get
			{
				return this._IsResearchAgreement;
			}
			set
			{
				if ((this._IsResearchAgreement != value))
				{
					this.OnIsResearchAgreementChanging(value);
					this.SendPropertyChanging();
					this._IsResearchAgreement = value;
					this.SendPropertyChanged("IsResearchAgreement");
					this.OnIsResearchAgreementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMilitaryAccess", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsMilitaryAccess
		{
			get
			{
				return this._IsMilitaryAccess;
			}
			set
			{
				if ((this._IsMilitaryAccess != value))
				{
					this.OnIsMilitaryAccessChanging(value);
					this.SendPropertyChanging();
					this._IsMilitaryAccess = value;
					this.SendPropertyChanged("IsMilitaryAccess");
					this.OnIsMilitaryAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_TreatyOffer", Storage="_ClanByOfferingClanID", ThisKey="OfferingClanID", OtherKey="ClanID", IsForeignKey=true)]
		public Clan ClanByOfferingClanID
		{
			get
			{
				return this._ClanByOfferingClanID.Entity;
			}
			set
			{
				Clan previousValue = this._ClanByOfferingClanID.Entity;
				if (((previousValue != value) 
							|| (this._ClanByOfferingClanID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClanByOfferingClanID.Entity = null;
						previousValue.TreatyOffersByOfferingClanID.Remove(this);
					}
					this._ClanByOfferingClanID.Entity = value;
					if ((value != null))
					{
						value.TreatyOffersByOfferingClanID.Add(this);
						this._OfferingClanID = value.ClanID;
					}
					else
					{
						this._OfferingClanID = default(int);
					}
					this.SendPropertyChanged("ClanByOfferingClanID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_TreatyOffer1", Storage="_ClanByTargetClanID", ThisKey="TargetClanID", OtherKey="ClanID", IsForeignKey=true)]
		public Clan ClanByTargetClanID
		{
			get
			{
				return this._ClanByTargetClanID.Entity;
			}
			set
			{
				Clan previousValue = this._ClanByTargetClanID.Entity;
				if (((previousValue != value) 
							|| (this._ClanByTargetClanID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClanByTargetClanID.Entity = null;
						previousValue.TreatyOffersByTargetClanID.Remove(this);
					}
					this._ClanByTargetClanID.Entity = value;
					if ((value != null))
					{
						value.TreatyOffersByTargetClanID.Add(this);
						this._TargetClanID = value.ClanID;
					}
					else
					{
						this._TargetClanID = default(int);
					}
					this.SendPropertyChanged("ClanByTargetClanID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ClanByOfferingClanID = default(EntityRef<Clan>);
			this._ClanByTargetClanID = default(EntityRef<Clan>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Link")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetID1;
		
		private int _PlanetID2;
		
		private EntityRef<Planet> _PlanetByPlanetID1;
		
		private EntityRef<Planet> _PlanetByPlanetID2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetID1Changing(int value);
    partial void OnPlanetID1Changed();
    partial void OnPlanetID2Changing(int value);
    partial void OnPlanetID2Changed();
    #endregion
		
		public Link()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID1", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetID1
		{
			get
			{
				return this._PlanetID1;
			}
			set
			{
				if ((this._PlanetID1 != value))
				{
					if (this._PlanetByPlanetID1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetID1Changing(value);
					this.SendPropertyChanging();
					this._PlanetID1 = value;
					this.SendPropertyChanged("PlanetID1");
					this.OnPlanetID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID2", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PlanetID2
		{
			get
			{
				return this._PlanetID2;
			}
			set
			{
				if ((this._PlanetID2 != value))
				{
					if (this._PlanetByPlanetID2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetID2Changing(value);
					this.SendPropertyChanging();
					this._PlanetID2 = value;
					this.SendPropertyChanged("PlanetID2");
					this.OnPlanetID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_Link", Storage="_PlanetByPlanetID1", ThisKey="PlanetID1", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet PlanetByPlanetID1
		{
			get
			{
				return this._PlanetByPlanetID1.Entity;
			}
			set
			{
				Planet previousValue = this._PlanetByPlanetID1.Entity;
				if (((previousValue != value) 
							|| (this._PlanetByPlanetID1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanetByPlanetID1.Entity = null;
						previousValue.LinksByPlanetID1.Remove(this);
					}
					this._PlanetByPlanetID1.Entity = value;
					if ((value != null))
					{
						value.LinksByPlanetID1.Add(this);
						this._PlanetID1 = value.PlanetID;
					}
					else
					{
						this._PlanetID1 = default(int);
					}
					this.SendPropertyChanged("PlanetByPlanetID1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_Link1", Storage="_PlanetByPlanetID2", ThisKey="PlanetID2", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet PlanetByPlanetID2
		{
			get
			{
				return this._PlanetByPlanetID2.Entity;
			}
			set
			{
				Planet previousValue = this._PlanetByPlanetID2.Entity;
				if (((previousValue != value) 
							|| (this._PlanetByPlanetID2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanetByPlanetID2.Entity = null;
						previousValue.LinksByPlanetID2.Remove(this);
					}
					this._PlanetByPlanetID2.Entity = value;
					if ((value != null))
					{
						value.LinksByPlanetID2.Add(this);
						this._PlanetID2 = value.PlanetID;
					}
					else
					{
						this._PlanetID2 = default(int);
					}
					this.SendPropertyChanged("PlanetByPlanetID2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._PlanetByPlanetID1 = default(EntityRef<Planet>);
			this._PlanetByPlanetID2 = default(EntityRef<Planet>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clan")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Clan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClanID;
		
		private int _LeaderPlayerID;
		
		private string _ClanName;
		
		private string _Image;
		
		private string _Description;
		
		private string _Password;
		
		private EntitySet<Account> _Accounts;
		
		private EntitySet<TreatyOffer> _TreatyOffersByOfferingClanID;
		
		private EntitySet<TreatyOffer> _TreatyOffersByTargetClanID;
		
		private EntitySet<EventClan> _EventClans;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClanIDChanging(int value);
    partial void OnClanIDChanged();
    partial void OnLeaderPlayerIDChanging(int value);
    partial void OnLeaderPlayerIDChanged();
    partial void OnClanNameChanging(string value);
    partial void OnClanNameChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Clan()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ClanID
		{
			get
			{
				return this._ClanID;
			}
			set
			{
				if ((this._ClanID != value))
				{
					this.OnClanIDChanging(value);
					this.SendPropertyChanging();
					this._ClanID = value;
					this.SendPropertyChanged("ClanID");
					this.OnClanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderPlayerID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LeaderPlayerID
		{
			get
			{
				return this._LeaderPlayerID;
			}
			set
			{
				if ((this._LeaderPlayerID != value))
				{
					this.OnLeaderPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._LeaderPlayerID = value;
					this.SendPropertyChanged("LeaderPlayerID");
					this.OnLeaderPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanName", DbType="varchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ClanName
		{
			get
			{
				return this._ClanName;
			}
			set
			{
				if ((this._ClanName != value))
				{
					this.OnClanNameChanging(value);
					this.SendPropertyChanging();
					this._ClanName = value;
					this.SendPropertyChanged("ClanName");
					this.OnClanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="varchar(250)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="varchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="varchar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_Account", Storage="_Accounts", ThisKey="ClanID", OtherKey="ClanID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<Account> Accounts
		{
			get
			{
				if ((this.serializing 
							&& (this._Accounts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_TreatyOffer", Storage="_TreatyOffersByOfferingClanID", ThisKey="ClanID", OtherKey="OfferingClanID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<TreatyOffer> TreatyOffersByOfferingClanID
		{
			get
			{
				if ((this.serializing 
							&& (this._TreatyOffersByOfferingClanID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TreatyOffersByOfferingClanID;
			}
			set
			{
				this._TreatyOffersByOfferingClanID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_TreatyOffer1", Storage="_TreatyOffersByTargetClanID", ThisKey="ClanID", OtherKey="TargetClanID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<TreatyOffer> TreatyOffersByTargetClanID
		{
			get
			{
				if ((this.serializing 
							&& (this._TreatyOffersByTargetClanID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TreatyOffersByTargetClanID;
			}
			set
			{
				this._TreatyOffersByTargetClanID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_EventClan", Storage="_EventClans", ThisKey="ClanID", OtherKey="ClanID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<EventClan> EventClans
		{
			get
			{
				if ((this.serializing 
							&& (this._EventClans.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventClans;
			}
			set
			{
				this._EventClans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Clan = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Clan = null;
		}
		
		private void attach_TreatyOffersByOfferingClanID(TreatyOffer entity)
		{
			this.SendPropertyChanging();
			entity.ClanByOfferingClanID = this;
		}
		
		private void detach_TreatyOffersByOfferingClanID(TreatyOffer entity)
		{
			this.SendPropertyChanging();
			entity.ClanByOfferingClanID = null;
		}
		
		private void attach_TreatyOffersByTargetClanID(TreatyOffer entity)
		{
			this.SendPropertyChanging();
			entity.ClanByTargetClanID = this;
		}
		
		private void detach_TreatyOffersByTargetClanID(TreatyOffer entity)
		{
			this.SendPropertyChanging();
			entity.ClanByTargetClanID = null;
		}
		
		private void attach_EventClans(EventClan entity)
		{
			this.SendPropertyChanging();
			entity.Clan = this;
		}
		
		private void detach_EventClans(EventClan entity)
		{
			this.SendPropertyChanging();
			entity.Clan = null;
		}
		
		private void Initialize()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._TreatyOffersByOfferingClanID = new EntitySet<TreatyOffer>(new Action<TreatyOffer>(this.attach_TreatyOffersByOfferingClanID), new Action<TreatyOffer>(this.detach_TreatyOffersByOfferingClanID));
			this._TreatyOffersByTargetClanID = new EntitySet<TreatyOffer>(new Action<TreatyOffer>(this.attach_TreatyOffersByTargetClanID), new Action<TreatyOffer>(this.detach_TreatyOffersByTargetClanID));
			this._EventClans = new EntitySet<EventClan>(new Action<EventClan>(this.attach_EventClans), new Action<EventClan>(this.detach_EventClans));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planet")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Planet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetID;
		
		private string _PlanetName;
		
		private double _X1;
		
		private double _Y1;
		
		private double _X2;
		
		private double _Y2;
		
		private string _PlanetMap;
		
		private int _DefenseLevel;
		
		private int _MineLevel;
		
		private bool _HasMine;
		
		private string _UnlocksUnit;
		
		private string _BotList;
		
		private System.Nullable<int> _OwnerPlayerID;
		
		private EntitySet<Link> _LinksByPlanetID1;
		
		private EntitySet<Link> _LinksByPlanetID2;
		
		private EntitySet<MarketOffer> _MarketOffers;
		
		private EntitySet<AccountPlanet> _AccountPlanets;
		
		private EntitySet<EventPlanet> _EventPlanets;
		
		private EntitySet<PlanetInfluenceHistory> _PlanetInfluenceHistories;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnPlanetNameChanging(string value);
    partial void OnPlanetNameChanged();
    partial void OnX1Changing(double value);
    partial void OnX1Changed();
    partial void OnY1Changing(double value);
    partial void OnY1Changed();
    partial void OnX2Changing(double value);
    partial void OnX2Changed();
    partial void OnY2Changing(double value);
    partial void OnY2Changed();
    partial void OnPlanetMapChanging(string value);
    partial void OnPlanetMapChanged();
    partial void OnDefenseLevelChanging(int value);
    partial void OnDefenseLevelChanged();
    partial void OnMineLevelChanging(int value);
    partial void OnMineLevelChanged();
    partial void OnHasMineChanging(bool value);
    partial void OnHasMineChanged();
    partial void OnUnlocksUnitChanging(string value);
    partial void OnUnlocksUnitChanged();
    partial void OnBotListChanging(string value);
    partial void OnBotListChanged();
    partial void OnOwnerPlayerIDChanging(System.Nullable<int> value);
    partial void OnOwnerPlayerIDChanged();
    #endregion
		
		public Planet()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetName", DbType="varchar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string PlanetName
		{
			get
			{
				return this._PlanetName;
			}
			set
			{
				if ((this._PlanetName != value))
				{
					this.OnPlanetNameChanging(value);
					this.SendPropertyChanging();
					this._PlanetName = value;
					this.SendPropertyChanged("PlanetName");
					this.OnPlanetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X1", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public double X1
		{
			get
			{
				return this._X1;
			}
			set
			{
				if ((this._X1 != value))
				{
					this.OnX1Changing(value);
					this.SendPropertyChanging();
					this._X1 = value;
					this.SendPropertyChanged("X1");
					this.OnX1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y1", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public double Y1
		{
			get
			{
				return this._Y1;
			}
			set
			{
				if ((this._Y1 != value))
				{
					this.OnY1Changing(value);
					this.SendPropertyChanging();
					this._Y1 = value;
					this.SendPropertyChanged("Y1");
					this.OnY1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X2", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public double X2
		{
			get
			{
				return this._X2;
			}
			set
			{
				if ((this._X2 != value))
				{
					this.OnX2Changing(value);
					this.SendPropertyChanging();
					this._X2 = value;
					this.SendPropertyChanged("X2");
					this.OnX2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y2", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public double Y2
		{
			get
			{
				return this._Y2;
			}
			set
			{
				if ((this._Y2 != value))
				{
					this.OnY2Changing(value);
					this.SendPropertyChanging();
					this._Y2 = value;
					this.SendPropertyChanged("Y2");
					this.OnY2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetMap", DbType="varchar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string PlanetMap
		{
			get
			{
				return this._PlanetMap;
			}
			set
			{
				if ((this._PlanetMap != value))
				{
					this.OnPlanetMapChanging(value);
					this.SendPropertyChanging();
					this._PlanetMap = value;
					this.SendPropertyChanged("PlanetMap");
					this.OnPlanetMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefenseLevel", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int DefenseLevel
		{
			get
			{
				return this._DefenseLevel;
			}
			set
			{
				if ((this._DefenseLevel != value))
				{
					this.OnDefenseLevelChanging(value);
					this.SendPropertyChanging();
					this._DefenseLevel = value;
					this.SendPropertyChanged("DefenseLevel");
					this.OnDefenseLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MineLevel", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int MineLevel
		{
			get
			{
				return this._MineLevel;
			}
			set
			{
				if ((this._MineLevel != value))
				{
					this.OnMineLevelChanging(value);
					this.SendPropertyChanging();
					this._MineLevel = value;
					this.SendPropertyChanged("MineLevel");
					this.OnMineLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasMine", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool HasMine
		{
			get
			{
				return this._HasMine;
			}
			set
			{
				if ((this._HasMine != value))
				{
					this.OnHasMineChanging(value);
					this.SendPropertyChanging();
					this._HasMine = value;
					this.SendPropertyChanged("HasMine");
					this.OnHasMineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlocksUnit", DbType="varchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string UnlocksUnit
		{
			get
			{
				return this._UnlocksUnit;
			}
			set
			{
				if ((this._UnlocksUnit != value))
				{
					this.OnUnlocksUnitChanging(value);
					this.SendPropertyChanging();
					this._UnlocksUnit = value;
					this.SendPropertyChanged("UnlocksUnit");
					this.OnUnlocksUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BotList", DbType="varchar(250)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string BotList
		{
			get
			{
				return this._BotList;
			}
			set
			{
				if ((this._BotList != value))
				{
					this.OnBotListChanging(value);
					this.SendPropertyChanging();
					this._BotList = value;
					this.SendPropertyChanged("BotList");
					this.OnBotListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerPlayerID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> OwnerPlayerID
		{
			get
			{
				return this._OwnerPlayerID;
			}
			set
			{
				if ((this._OwnerPlayerID != value))
				{
					this.OnOwnerPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerPlayerID = value;
					this.SendPropertyChanged("OwnerPlayerID");
					this.OnOwnerPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_Link", Storage="_LinksByPlanetID1", ThisKey="PlanetID", OtherKey="PlanetID1")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<Link> LinksByPlanetID1
		{
			get
			{
				if ((this.serializing 
							&& (this._LinksByPlanetID1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LinksByPlanetID1;
			}
			set
			{
				this._LinksByPlanetID1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_Link1", Storage="_LinksByPlanetID2", ThisKey="PlanetID", OtherKey="PlanetID2")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<Link> LinksByPlanetID2
		{
			get
			{
				if ((this.serializing 
							&& (this._LinksByPlanetID2.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LinksByPlanetID2;
			}
			set
			{
				this._LinksByPlanetID2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_MarketOffer", Storage="_MarketOffers", ThisKey="PlanetID", OtherKey="PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<MarketOffer> MarketOffers
		{
			get
			{
				if ((this.serializing 
							&& (this._MarketOffers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MarketOffers;
			}
			set
			{
				this._MarketOffers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_AccountPlanet", Storage="_AccountPlanets", ThisKey="PlanetID", OtherKey="PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<AccountPlanet> AccountPlanets
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountPlanets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountPlanets;
			}
			set
			{
				this._AccountPlanets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_EventPlanet", Storage="_EventPlanets", ThisKey="PlanetID", OtherKey="PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<EventPlanet> EventPlanets
		{
			get
			{
				if ((this.serializing 
							&& (this._EventPlanets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventPlanets;
			}
			set
			{
				this._EventPlanets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_PlanetInfluenceHistory", Storage="_PlanetInfluenceHistories", ThisKey="PlanetID", OtherKey="PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<PlanetInfluenceHistory> PlanetInfluenceHistories
		{
			get
			{
				if ((this.serializing 
							&& (this._PlanetInfluenceHistories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlanetInfluenceHistories;
			}
			set
			{
				this._PlanetInfluenceHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinksByPlanetID1(Link entity)
		{
			this.SendPropertyChanging();
			entity.PlanetByPlanetID1 = this;
		}
		
		private void detach_LinksByPlanetID1(Link entity)
		{
			this.SendPropertyChanging();
			entity.PlanetByPlanetID1 = null;
		}
		
		private void attach_LinksByPlanetID2(Link entity)
		{
			this.SendPropertyChanging();
			entity.PlanetByPlanetID2 = this;
		}
		
		private void detach_LinksByPlanetID2(Link entity)
		{
			this.SendPropertyChanging();
			entity.PlanetByPlanetID2 = null;
		}
		
		private void attach_MarketOffers(MarketOffer entity)
		{
			this.SendPropertyChanging();
			entity.Planet = this;
		}
		
		private void detach_MarketOffers(MarketOffer entity)
		{
			this.SendPropertyChanging();
			entity.Planet = null;
		}
		
		private void attach_AccountPlanets(AccountPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Planet = this;
		}
		
		private void detach_AccountPlanets(AccountPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Planet = null;
		}
		
		private void attach_EventPlanets(EventPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Planet = this;
		}
		
		private void detach_EventPlanets(EventPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Planet = null;
		}
		
		private void attach_PlanetInfluenceHistories(PlanetInfluenceHistory entity)
		{
			this.SendPropertyChanging();
			entity.Planet = this;
		}
		
		private void detach_PlanetInfluenceHistories(PlanetInfluenceHistory entity)
		{
			this.SendPropertyChanging();
			entity.Planet = null;
		}
		
		private void Initialize()
		{
			this._LinksByPlanetID1 = new EntitySet<Link>(new Action<Link>(this.attach_LinksByPlanetID1), new Action<Link>(this.detach_LinksByPlanetID1));
			this._LinksByPlanetID2 = new EntitySet<Link>(new Action<Link>(this.attach_LinksByPlanetID2), new Action<Link>(this.detach_LinksByPlanetID2));
			this._MarketOffers = new EntitySet<MarketOffer>(new Action<MarketOffer>(this.attach_MarketOffers), new Action<MarketOffer>(this.detach_MarketOffers));
			this._AccountPlanets = new EntitySet<AccountPlanet>(new Action<AccountPlanet>(this.attach_AccountPlanets), new Action<AccountPlanet>(this.detach_AccountPlanets));
			this._EventPlanets = new EntitySet<EventPlanet>(new Action<EventPlanet>(this.attach_EventPlanets), new Action<EventPlanet>(this.detach_EventPlanets));
			this._PlanetInfluenceHistories = new EntitySet<PlanetInfluenceHistory>(new Action<PlanetInfluenceHistory>(this.attach_PlanetInfluenceHistories), new Action<PlanetInfluenceHistory>(this.detach_PlanetInfluenceHistories));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MarketOffer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MarketOffer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfferID;
		
		private int _AccountID;
		
		private int _PlanetID;
		
		private int _Quantity;
		
		private int _Price;
		
		private bool _IsSell;
		
		private System.Nullable<System.DateTime> _DatePlaced;
		
		private System.Nullable<System.DateTime> _DateAccepted;
		
		private System.Nullable<int> _AcceptedAccountID;
		
		private EntityRef<Planet> _Planet;
		
		private EntityRef<Account> _AccountByAccountID;
		
		private EntityRef<Account> _AccountByAcceptedAccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferIDChanging(int value);
    partial void OnOfferIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnIsSellChanging(bool value);
    partial void OnIsSellChanged();
    partial void OnDatePlacedChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePlacedChanged();
    partial void OnDateAcceptedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAcceptedChanged();
    partial void OnAcceptedAccountIDChanging(System.Nullable<int> value);
    partial void OnAcceptedAccountIDChanged();
    #endregion
		
		public MarketOffer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int OfferID
		{
			get
			{
				return this._OfferID;
			}
			set
			{
				if ((this._OfferID != value))
				{
					this.OnOfferIDChanging(value);
					this.SendPropertyChanging();
					this._OfferID = value;
					this.SendPropertyChanged("OfferID");
					this.OnOfferIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._AccountByAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._Planet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSell", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsSell
		{
			get
			{
				return this._IsSell;
			}
			set
			{
				if ((this._IsSell != value))
				{
					this.OnIsSellChanging(value);
					this.SendPropertyChanging();
					this._IsSell = value;
					this.SendPropertyChanged("IsSell");
					this.OnIsSellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePlaced", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> DatePlaced
		{
			get
			{
				return this._DatePlaced;
			}
			set
			{
				if ((this._DatePlaced != value))
				{
					this.OnDatePlacedChanging(value);
					this.SendPropertyChanging();
					this._DatePlaced = value;
					this.SendPropertyChanged("DatePlaced");
					this.OnDatePlacedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAccepted", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> DateAccepted
		{
			get
			{
				return this._DateAccepted;
			}
			set
			{
				if ((this._DateAccepted != value))
				{
					this.OnDateAcceptedChanging(value);
					this.SendPropertyChanging();
					this._DateAccepted = value;
					this.SendPropertyChanged("DateAccepted");
					this.OnDateAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> AcceptedAccountID
		{
			get
			{
				return this._AcceptedAccountID;
			}
			set
			{
				if ((this._AcceptedAccountID != value))
				{
					if (this._AccountByAcceptedAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptedAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AcceptedAccountID = value;
					this.SendPropertyChanged("AcceptedAccountID");
					this.OnAcceptedAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_MarketOffer", Storage="_Planet", ThisKey="PlanetID", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet Planet
		{
			get
			{
				return this._Planet.Entity;
			}
			set
			{
				Planet previousValue = this._Planet.Entity;
				if (((previousValue != value) 
							|| (this._Planet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planet.Entity = null;
						previousValue.MarketOffers.Remove(this);
					}
					this._Planet.Entity = value;
					if ((value != null))
					{
						value.MarketOffers.Add(this);
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._PlanetID = default(int);
					}
					this.SendPropertyChanged("Planet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MarketOffer", Storage="_AccountByAccountID", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByAccountID
		{
			get
			{
				return this._AccountByAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByAccountID.Entity = null;
						previousValue.MarketOffersByAccountID.Remove(this);
					}
					this._AccountByAccountID.Entity = value;
					if ((value != null))
					{
						value.MarketOffersByAccountID.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("AccountByAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MarketOffer1", Storage="_AccountByAcceptedAccountID", ThisKey="AcceptedAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByAcceptedAccountID
		{
			get
			{
				return this._AccountByAcceptedAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByAcceptedAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByAcceptedAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByAcceptedAccountID.Entity = null;
						previousValue.MarketOffersByAcceptedAccountID.Remove(this);
					}
					this._AccountByAcceptedAccountID.Entity = value;
					if ((value != null))
					{
						value.MarketOffersByAcceptedAccountID.Add(this);
						this._AcceptedAccountID = value.AccountID;
					}
					else
					{
						this._AcceptedAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByAcceptedAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Planet = default(EntityRef<Planet>);
			this._AccountByAccountID = default(EntityRef<Account>);
			this._AccountByAcceptedAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountPlanet")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountPlanet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetID;
		
		private int _AccountID;
		
		private int _DropshipCount;
		
		private int _Influence;
		
		private EntityRef<Planet> _Planet;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnDropshipCountChanging(int value);
    partial void OnDropshipCountChanged();
    partial void OnInfluenceChanging(int value);
    partial void OnInfluenceChanged();
    #endregion
		
		public AccountPlanet()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._Planet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropshipCount", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int DropshipCount
		{
			get
			{
				return this._DropshipCount;
			}
			set
			{
				if ((this._DropshipCount != value))
				{
					this.OnDropshipCountChanging(value);
					this.SendPropertyChanging();
					this._DropshipCount = value;
					this.SendPropertyChanged("DropshipCount");
					this.OnDropshipCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Influence", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Influence
		{
			get
			{
				return this._Influence;
			}
			set
			{
				if ((this._Influence != value))
				{
					this.OnInfluenceChanging(value);
					this.SendPropertyChanging();
					this._Influence = value;
					this.SendPropertyChanged("Influence");
					this.OnInfluenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_AccountPlanet", Storage="_Planet", ThisKey="PlanetID", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet Planet
		{
			get
			{
				return this._Planet.Entity;
			}
			set
			{
				Planet previousValue = this._Planet.Entity;
				if (((previousValue != value) 
							|| (this._Planet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planet.Entity = null;
						previousValue.AccountPlanets.Remove(this);
					}
					this._Planet.Entity = value;
					if ((value != null))
					{
						value.AccountPlanets.Add(this);
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._PlanetID = default(int);
					}
					this.SendPropertyChanged("Planet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountPlanet", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountPlanets.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountPlanets.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Planet = default(EntityRef<Planet>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanetwarsConfig")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlanetwarsConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GameID;
		
		private System.Nullable<System.DateTime> _Started;
		
		private int _CombatTurn;
		
		private System.Nullable<System.DateTime> _TurnStarted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGameIDChanging(int value);
    partial void OnGameIDChanged();
    partial void OnStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnStartedChanged();
    partial void OnCombatTurnChanging(int value);
    partial void OnCombatTurnChanged();
    partial void OnTurnStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnTurnStartedChanged();
    #endregion
		
		public PlanetwarsConfig()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int GameID
		{
			get
			{
				return this._GameID;
			}
			set
			{
				if ((this._GameID != value))
				{
					this.OnGameIDChanging(value);
					this.SendPropertyChanging();
					this._GameID = value;
					this.SendPropertyChanged("GameID");
					this.OnGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this.OnStartedChanging(value);
					this.SendPropertyChanging();
					this._Started = value;
					this.SendPropertyChanged("Started");
					this.OnStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CombatTurn", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CombatTurn
		{
			get
			{
				return this._CombatTurn;
			}
			set
			{
				if ((this._CombatTurn != value))
				{
					this.OnCombatTurnChanging(value);
					this.SendPropertyChanging();
					this._CombatTurn = value;
					this.SendPropertyChanged("CombatTurn");
					this.OnCombatTurnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnStarted", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> TurnStarted
		{
			get
			{
				return this._TurnStarted;
			}
			set
			{
				if ((this._TurnStarted != value))
				{
					this.OnTurnStartedChanging(value);
					this.SendPropertyChanging();
					this._TurnStarted = value;
					this.SendPropertyChanged("TurnStarted");
					this.OnTurnStartedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventClan")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EventClan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private int _ClanID;
		
		private EntityRef<Event> _Event1;
		
		private EntityRef<Clan> _Clan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnClanIDChanging(int value);
    partial void OnClanIDChanged();
    #endregion
		
		public EventClan()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._Event1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ClanID
		{
			get
			{
				return this._ClanID;
			}
			set
			{
				if ((this._ClanID != value))
				{
					if (this._Clan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClanIDChanging(value);
					this.SendPropertyChanging();
					this._ClanID = value;
					this.SendPropertyChanged("ClanID");
					this.OnClanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventClan", Storage="_Event1", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Event Event1
		{
			get
			{
				return this._Event1.Entity;
			}
			set
			{
				Event previousValue = this._Event1.Entity;
				if (((previousValue != value) 
							|| (this._Event1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event1.Entity = null;
						previousValue.EventClans.Remove(this);
					}
					this._Event1.Entity = value;
					if ((value != null))
					{
						value.EventClans.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(int);
					}
					this.SendPropertyChanged("Event1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_EventClan", Storage="_Clan", ThisKey="ClanID", OtherKey="ClanID", IsForeignKey=true)]
		public Clan Clan
		{
			get
			{
				return this._Clan.Entity;
			}
			set
			{
				Clan previousValue = this._Clan.Entity;
				if (((previousValue != value) 
							|| (this._Clan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clan.Entity = null;
						previousValue.EventClans.Remove(this);
					}
					this._Clan.Entity = value;
					if ((value != null))
					{
						value.EventClans.Add(this);
						this._ClanID = value.ClanID;
					}
					else
					{
						this._ClanID = default(int);
					}
					this.SendPropertyChanged("Clan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Event1 = default(EntityRef<Event>);
			this._Clan = default(EntityRef<Clan>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventAccount")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EventAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private int _AccountID;
		
		private EntityRef<Event> _Event1;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    #endregion
		
		public EventAccount()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._Event1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventAccount", Storage="_Event1", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Event Event1
		{
			get
			{
				return this._Event1.Entity;
			}
			set
			{
				Event previousValue = this._Event1.Entity;
				if (((previousValue != value) 
							|| (this._Event1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event1.Entity = null;
						previousValue.EventAccounts.Remove(this);
					}
					this._Event1.Entity = value;
					if ((value != null))
					{
						value.EventAccounts.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(int);
					}
					this.SendPropertyChanged("Event1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_EventAccount", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.EventAccounts.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.EventAccounts.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Event1 = default(EntityRef<Event>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventPlanet")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EventPlanet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private int _PlanetID;
		
		private EntityRef<Event> _Event1;
		
		private EntityRef<Planet> _Planet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    #endregion
		
		public EventPlanet()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._Event1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._Planet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventPlanet", Storage="_Event1", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Event Event1
		{
			get
			{
				return this._Event1.Entity;
			}
			set
			{
				Event previousValue = this._Event1.Entity;
				if (((previousValue != value) 
							|| (this._Event1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event1.Entity = null;
						previousValue.EventPlanets.Remove(this);
					}
					this._Event1.Entity = value;
					if ((value != null))
					{
						value.EventPlanets.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(int);
					}
					this.SendPropertyChanged("Event1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_EventPlanet", Storage="_Planet", ThisKey="PlanetID", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet Planet
		{
			get
			{
				return this._Planet.Entity;
			}
			set
			{
				Planet previousValue = this._Planet.Entity;
				if (((previousValue != value) 
							|| (this._Planet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planet.Entity = null;
						previousValue.EventPlanets.Remove(this);
					}
					this._Planet.Entity = value;
					if ((value != null))
					{
						value.EventPlanets.Add(this);
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._PlanetID = default(int);
					}
					this.SendPropertyChanged("Planet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Event1 = default(EntityRef<Event>);
			this._Planet = default(EntityRef<Planet>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventSpringBattle")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EventSpringBattle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private int _SpringBattleID;
		
		private EntityRef<Event> _Event1;
		
		private EntityRef<SpringBattle> _SpringBattle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    #endregion
		
		public EventSpringBattle()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._Event1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					if (this._SpringBattle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventSpringBattle", Storage="_Event1", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Event Event1
		{
			get
			{
				return this._Event1.Entity;
			}
			set
			{
				Event previousValue = this._Event1.Entity;
				if (((previousValue != value) 
							|| (this._Event1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event1.Entity = null;
						previousValue.EventSpringBattles.Remove(this);
					}
					this._Event1.Entity = value;
					if ((value != null))
					{
						value.EventSpringBattles.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(int);
					}
					this.SendPropertyChanged("Event1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_EventSpringBattle", Storage="_SpringBattle", ThisKey="SpringBattleID", OtherKey="SpringBattleID", IsForeignKey=true)]
		public SpringBattle SpringBattle
		{
			get
			{
				return this._SpringBattle.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattle.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattle.Entity = null;
						previousValue.EventSpringBattles.Remove(this);
					}
					this._SpringBattle.Entity = value;
					if ((value != null))
					{
						value.EventSpringBattles.Add(this);
						this._SpringBattleID = value.SpringBattleID;
					}
					else
					{
						this._SpringBattleID = default(int);
					}
					this.SendPropertyChanged("SpringBattle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Event1 = default(EntityRef<Event>);
			this._SpringBattle = default(EntityRef<SpringBattle>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanetOwnerHistory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlanetOwnerHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetID;
		
		private int _Turn;
		
		private System.Nullable<int> _OwnerAccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnTurnChanging(int value);
    partial void OnTurnChanged();
    partial void OnOwnerAccountIDChanging(System.Nullable<int> value);
    partial void OnOwnerAccountIDChanged();
    #endregion
		
		public PlanetOwnerHistory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Turn", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int Turn
		{
			get
			{
				return this._Turn;
			}
			set
			{
				if ((this._Turn != value))
				{
					this.OnTurnChanging(value);
					this.SendPropertyChanging();
					this._Turn = value;
					this.SendPropertyChanged("Turn");
					this.OnTurnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> OwnerAccountID
		{
			get
			{
				return this._OwnerAccountID;
			}
			set
			{
				if ((this._OwnerAccountID != value))
				{
					this.OnOwnerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerAccountID = value;
					this.SendPropertyChanged("OwnerAccountID");
					this.OnOwnerAccountIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanetInfluenceHistory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlanetInfluenceHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetID;
		
		private int _AccountID;
		
		private int _Turn;
		
		private int _Influence;
		
		private EntityRef<Planet> _Planet;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnTurnChanging(int value);
    partial void OnTurnChanged();
    partial void OnInfluenceChanging(int value);
    partial void OnInfluenceChanged();
    #endregion
		
		public PlanetInfluenceHistory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._Planet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Turn", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Turn
		{
			get
			{
				return this._Turn;
			}
			set
			{
				if ((this._Turn != value))
				{
					this.OnTurnChanging(value);
					this.SendPropertyChanging();
					this._Turn = value;
					this.SendPropertyChanged("Turn");
					this.OnTurnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Influence", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Influence
		{
			get
			{
				return this._Influence;
			}
			set
			{
				if ((this._Influence != value))
				{
					this.OnInfluenceChanging(value);
					this.SendPropertyChanging();
					this._Influence = value;
					this.SendPropertyChanged("Influence");
					this.OnInfluenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_PlanetInfluenceHistory", Storage="_Planet", ThisKey="PlanetID", OtherKey="PlanetID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Planet Planet
		{
			get
			{
				return this._Planet.Entity;
			}
			set
			{
				Planet previousValue = this._Planet.Entity;
				if (((previousValue != value) 
							|| (this._Planet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planet.Entity = null;
						previousValue.PlanetInfluenceHistories.Remove(this);
					}
					this._Planet.Entity = value;
					if ((value != null))
					{
						value.PlanetInfluenceHistories.Add(this);
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._PlanetID = default(int);
					}
					this.SendPropertyChanged("Planet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PlanetInfluenceHistory", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.PlanetInfluenceHistories.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.PlanetInfluenceHistories.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Planet = default(EntityRef<Planet>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
