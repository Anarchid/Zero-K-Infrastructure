//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Threading;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 


/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[WebServiceBinding(Name = "PlasmaServiceSoap", Namespace = "http://planet-wars.eu/PlasmaServer/")]
public partial class PlasmaService: SoapHttpClientProtocol
{
    SendOrPostCallback DeleteResourceOperationCompleted;

    SendOrPostCallback DownloadFileOperationCompleted;

    SendOrPostCallback GetResourceDataOperationCompleted;

    SendOrPostCallback GetResourceListOperationCompleted;

    SendOrPostCallback RegisterResourceOperationCompleted;

    /// <remarks/>
    public event DeleteResourceCompletedEventHandler DeleteResourceCompleted;

    /// <remarks/>
    public event DownloadFileCompletedEventHandler DownloadFileCompleted;

    /// <remarks/>
    public event GetResourceDataCompletedEventHandler GetResourceDataCompleted;

    /// <remarks/>
    public event GetResourceListCompletedEventHandler GetResourceListCompleted;

    /// <remarks/>
    public event RegisterResourceCompletedEventHandler RegisterResourceCompleted;

    /// <remarks/>
    public PlasmaService()
    {
        Url = "http://planet-wars.eu/PlasmaServer/Service.asmx";
    }

    /// <remarks/>
    public IAsyncResult BeginDeleteResource(string login, string password, string internalName, AsyncCallback callback, object asyncState)
    {
        return BeginInvoke("DeleteResource", new object[] { login, password, internalName }, callback, asyncState);
    }

    /// <remarks/>
    public IAsyncResult BeginDownloadFile(string internalName, AsyncCallback callback, object asyncState)
    {
        return BeginInvoke("DownloadFile", new object[] { internalName }, callback, asyncState);
    }

    /// <remarks/>
    public IAsyncResult BeginGetResourceData(string md5, string internalName, AsyncCallback callback, object asyncState)
    {
        return BeginInvoke("GetResourceData", new object[] { md5, internalName }, callback, asyncState);
    }

    /// <remarks/>
    public IAsyncResult BeginGetResourceList(AsyncCallback callback, object asyncState)
    {
        return BeginInvoke("GetResourceList", new object[0], callback, asyncState);
    }

    /// <remarks/>
    public IAsyncResult BeginRegisterResource(int apiVersion,
                                              string springVersion,
                                              string md5,
                                              int length,
                                              ResourceType resourceType,
                                              string archiveName,
                                              string internalName,
                                              int springHash,
                                              byte[] serializedData,
                                              string[] dependencies,
                                              byte[] minimap,
                                              byte[] metalMap,
                                              byte[] heightMap,
                                              byte[] torrentData,
                                              AsyncCallback callback,
                                              object asyncState)
    {
        return BeginInvoke("RegisterResource",
                           new object[]
                           {
                               apiVersion, springVersion, md5, length, resourceType, archiveName, internalName, springHash, serializedData, dependencies
                               , minimap, metalMap, heightMap, torrentData
                           },
                           callback,
                           asyncState);
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }

    /// <remarks/>
    [SoapDocumentMethod("http://planet-wars.eu/PlasmaServer/DeleteResource", RequestNamespace = "http://planet-wars.eu/PlasmaServer/",
        ResponseNamespace = "http://planet-wars.eu/PlasmaServer/", Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Wrapped)]
    public ReturnValue DeleteResource(string login, string password, string internalName)
    {
        var results = Invoke("DeleteResource", new object[] { login, password, internalName });
        return ((ReturnValue)(results[0]));
    }

    /// <remarks/>
    public void DeleteResourceAsync(string login, string password, string internalName)
    {
        DeleteResourceAsync(login, password, internalName, null);
    }

    /// <remarks/>
    public void DeleteResourceAsync(string login, string password, string internalName, object userState)
    {
        if ((DeleteResourceOperationCompleted == null)) DeleteResourceOperationCompleted = new SendOrPostCallback(OnDeleteResourceOperationCompleted);
        InvokeAsync("DeleteResource", new object[] { login, password, internalName }, DeleteResourceOperationCompleted, userState);
    }

    /// <remarks/>
    [SoapDocumentMethod("http://planet-wars.eu/PlasmaServer/DownloadFile", RequestNamespace = "http://planet-wars.eu/PlasmaServer/",
        ResponseNamespace = "http://planet-wars.eu/PlasmaServer/", Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Wrapped)]
    public bool DownloadFile(string internalName,
                             out string[] links,
                             [XmlElement(DataType = "base64Binary")] out byte[] torrent,
                             out string[] dependencies,
                             out ResourceType resourceType)
    {
        var results = Invoke("DownloadFile", new object[] { internalName });
        links = ((string[])(results[1]));
        torrent = ((byte[])(results[2]));
        dependencies = ((string[])(results[3]));
        resourceType = ((ResourceType)(results[4]));
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void DownloadFileAsync(string internalName)
    {
        DownloadFileAsync(internalName, null);
    }

    /// <remarks/>
    public void DownloadFileAsync(string internalName, object userState)
    {
        if ((DownloadFileOperationCompleted == null)) DownloadFileOperationCompleted = new SendOrPostCallback(OnDownloadFileOperationCompleted);
        InvokeAsync("DownloadFile", new object[] { internalName }, DownloadFileOperationCompleted, userState);
    }

    /// <remarks/>
    public ReturnValue EndDeleteResource(IAsyncResult asyncResult)
    {
        var results = EndInvoke(asyncResult);
        return ((ReturnValue)(results[0]));
    }

    /// <remarks/>
    public bool EndDownloadFile(IAsyncResult asyncResult,
                                out string[] links,
                                out byte[] torrent,
                                out string[] dependencies,
                                out ResourceType resourceType)
    {
        var results = EndInvoke(asyncResult);
        links = ((string[])(results[1]));
        torrent = ((byte[])(results[2]));
        dependencies = ((string[])(results[3]));
        resourceType = ((ResourceType)(results[4]));
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public ResourceData EndGetResourceData(IAsyncResult asyncResult)
    {
        var results = EndInvoke(asyncResult);
        return ((ResourceData)(results[0]));
    }

    /// <remarks/>
    public ResourceData[] EndGetResourceList(IAsyncResult asyncResult)
    {
        var results = EndInvoke(asyncResult);
        return ((ResourceData[])(results[0]));
    }

    /// <remarks/>
    public ReturnValue EndRegisterResource(IAsyncResult asyncResult)
    {
        var results = EndInvoke(asyncResult);
        return ((ReturnValue)(results[0]));
    }

    /// <remarks/>
    [SoapDocumentMethod("http://planet-wars.eu/PlasmaServer/GetResourceData", RequestNamespace = "http://planet-wars.eu/PlasmaServer/",
        ResponseNamespace = "http://planet-wars.eu/PlasmaServer/", Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Wrapped)]
    public ResourceData GetResourceData(string md5, string internalName)
    {
        var results = Invoke("GetResourceData", new object[] { md5, internalName });
        return ((ResourceData)(results[0]));
    }

    /// <remarks/>
    public void GetResourceDataAsync(string md5, string internalName)
    {
        GetResourceDataAsync(md5, internalName, null);
    }

    /// <remarks/>
    public void GetResourceDataAsync(string md5, string internalName, object userState)
    {
        if ((GetResourceDataOperationCompleted == null)) GetResourceDataOperationCompleted = new SendOrPostCallback(OnGetResourceDataOperationCompleted);
        InvokeAsync("GetResourceData", new object[] { md5, internalName }, GetResourceDataOperationCompleted, userState);
    }

    /// <remarks/>
    [SoapDocumentMethod("http://planet-wars.eu/PlasmaServer/GetResourceList", RequestNamespace = "http://planet-wars.eu/PlasmaServer/",
        ResponseNamespace = "http://planet-wars.eu/PlasmaServer/", Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Wrapped)]
    public ResourceData[] GetResourceList()
    {
        var results = Invoke("GetResourceList", new object[0]);
        return ((ResourceData[])(results[0]));
    }

    /// <remarks/>
    public void GetResourceListAsync()
    {
        GetResourceListAsync(null);
    }

    /// <remarks/>
    public void GetResourceListAsync(object userState)
    {
        if ((GetResourceListOperationCompleted == null)) GetResourceListOperationCompleted = new SendOrPostCallback(OnGetResourceListOperationCompleted);
        InvokeAsync("GetResourceList", new object[0], GetResourceListOperationCompleted, userState);
    }

    /// <remarks/>
    [SoapDocumentMethod("http://planet-wars.eu/PlasmaServer/RegisterResource", RequestNamespace = "http://planet-wars.eu/PlasmaServer/",
        ResponseNamespace = "http://planet-wars.eu/PlasmaServer/", Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Wrapped)]
    public ReturnValue RegisterResource(int apiVersion,
                                        string springVersion,
                                        string md5,
                                        int length,
                                        ResourceType resourceType,
                                        string archiveName,
                                        string internalName,
                                        int springHash,
                                        [XmlElement(DataType = "base64Binary")] byte[] serializedData,
                                        string[] dependencies,
                                        [XmlElement(DataType = "base64Binary")] byte[] minimap,
                                        [XmlElement(DataType = "base64Binary")] byte[] metalMap,
                                        [XmlElement(DataType = "base64Binary")] byte[] heightMap,
                                        [XmlElement(DataType = "base64Binary")] byte[] torrentData)
    {
        var results = Invoke("RegisterResource",
                             new object[]
                             {
                                 apiVersion, springVersion, md5, length, resourceType, archiveName, internalName, springHash, serializedData,
                                 dependencies, minimap, metalMap, heightMap, torrentData
                             });
        return ((ReturnValue)(results[0]));
    }

    /// <remarks/>
    public void RegisterResourceAsync(int apiVersion,
                                      string springVersion,
                                      string md5,
                                      int length,
                                      ResourceType resourceType,
                                      string archiveName,
                                      string internalName,
                                      int springHash,
                                      byte[] serializedData,
                                      string[] dependencies,
                                      byte[] minimap,
                                      byte[] metalMap,
                                      byte[] heightMap,
                                      byte[] torrentData)
    {
        RegisterResourceAsync(apiVersion,
                              springVersion,
                              md5,
                              length,
                              resourceType,
                              archiveName,
                              internalName,
                              springHash,
                              serializedData,
                              dependencies,
                              minimap,
                              metalMap,
                              heightMap,
                              torrentData,
                              null);
    }

    /// <remarks/>
    public void RegisterResourceAsync(int apiVersion,
                                      string springVersion,
                                      string md5,
                                      int length,
                                      ResourceType resourceType,
                                      string archiveName,
                                      string internalName,
                                      int springHash,
                                      byte[] serializedData,
                                      string[] dependencies,
                                      byte[] minimap,
                                      byte[] metalMap,
                                      byte[] heightMap,
                                      byte[] torrentData,
                                      object userState)
    {
        if ((RegisterResourceOperationCompleted == null)) RegisterResourceOperationCompleted = new SendOrPostCallback(OnRegisterResourceOperationCompleted);
        InvokeAsync("RegisterResource",
                    new object[]
                    {
                        apiVersion, springVersion, md5, length, resourceType, archiveName, internalName, springHash, serializedData, dependencies,
                        minimap, metalMap, heightMap, torrentData
                    },
                    RegisterResourceOperationCompleted,
                    userState);
    }

    void OnDeleteResourceOperationCompleted(object arg)
    {
        if ((DeleteResourceCompleted != null))
        {
            var invokeArgs = ((InvokeCompletedEventArgs)(arg));
            DeleteResourceCompleted(this,
                                    new DeleteResourceCompletedEventArgs(invokeArgs.Results,
                                                                         invokeArgs.Error,
                                                                         invokeArgs.Cancelled,
                                                                         invokeArgs.UserState));
        }
    }

    void OnDownloadFileOperationCompleted(object arg)
    {
        if ((DownloadFileCompleted != null))
        {
            var invokeArgs = ((InvokeCompletedEventArgs)(arg));
            DownloadFileCompleted(this,
                                  new DownloadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    void OnGetResourceDataOperationCompleted(object arg)
    {
        if ((GetResourceDataCompleted != null))
        {
            var invokeArgs = ((InvokeCompletedEventArgs)(arg));
            GetResourceDataCompleted(this,
                                     new GetResourceDataCompletedEventArgs(invokeArgs.Results,
                                                                           invokeArgs.Error,
                                                                           invokeArgs.Cancelled,
                                                                           invokeArgs.UserState));
        }
    }

    void OnGetResourceListOperationCompleted(object arg)
    {
        if ((GetResourceListCompleted != null))
        {
            var invokeArgs = ((InvokeCompletedEventArgs)(arg));
            GetResourceListCompleted(this,
                                     new GetResourceListCompletedEventArgs(invokeArgs.Results,
                                                                           invokeArgs.Error,
                                                                           invokeArgs.Cancelled,
                                                                           invokeArgs.UserState));
        }
    }

    void OnRegisterResourceOperationCompleted(object arg)
    {
        if ((RegisterResourceCompleted != null))
        {
            var invokeArgs = ((InvokeCompletedEventArgs)(arg));
            RegisterResourceCompleted(this,
                                      new RegisterResourceCompletedEventArgs(invokeArgs.Results,
                                                                             invokeArgs.Error,
                                                                             invokeArgs.Cancelled,
                                                                             invokeArgs.UserState));
        }
    }
}

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
[Serializable()]
[XmlType(Namespace = "http://planet-wars.eu/PlasmaServer/")]
public enum ReturnValue
{
    /// <remarks/>
    Ok,

    /// <remarks/>
    InvalidLogin,

    /// <remarks/>
    ResourceNotFound,

    /// <remarks/>
    InternalNameAlreadyExistsWithDifferentSpringHash,

    /// <remarks/>
    Md5AlreadyExists,

    /// <remarks/>
    Md5AlreadyExistsWithDifferentName,
}

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
[Serializable()]
[XmlType(Namespace = "http://planet-wars.eu/PlasmaServer/")]
public enum ResourceType
{
    /// <remarks/>
    Map,

    /// <remarks/>
    Mod,
}

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(Namespace = "http://planet-wars.eu/PlasmaServer/")]
public partial class ResourceData
{
    string[] dependenciesField;

    string internalNameField;

    ResourceType resourceTypeField;

    SpringHashEntry[] springHashesField;

    /// <remarks/>
    public string[] Dependencies { get { return dependenciesField; } set { dependenciesField = value; } }

    /// <remarks/>
    public string InternalName { get { return internalNameField; } set { internalNameField = value; } }

    /// <remarks/>
    public ResourceType ResourceType { get { return resourceTypeField; } set { resourceTypeField = value; } }

    /// <remarks/>
    public SpringHashEntry[] SpringHashes { get { return springHashesField; } set { springHashesField = value; } }
}

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(Namespace = "http://planet-wars.eu/PlasmaServer/")]
public partial class SpringHashEntry
{
    int springHashField;

    string springVersionField;

    /// <remarks/>
    public int SpringHash { get { return springHashField; } set { springHashField = value; } }

    /// <remarks/>
    public string SpringVersion { get { return springVersionField; } set { springVersionField = value; } }
}

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
public delegate void DeleteResourceCompletedEventHandler(object sender, DeleteResourceCompletedEventArgs e);

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
[DebuggerStepThrough()]
[DesignerCategory("code")]
public partial class DeleteResourceCompletedEventArgs: AsyncCompletedEventArgs
{
    object[] results;

    /// <remarks/>
    public ReturnValue Result
    {
        get
        {
            RaiseExceptionIfNecessary();
            return ((ReturnValue)(results[0]));
        }
    }

    internal DeleteResourceCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
        : base(exception, cancelled, userState)
    {
        this.results = results;
    }
}

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
public delegate void DownloadFileCompletedEventHandler(object sender, DownloadFileCompletedEventArgs e);

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
[DebuggerStepThrough()]
[DesignerCategory("code")]
public partial class DownloadFileCompletedEventArgs: AsyncCompletedEventArgs
{
    object[] results;

    /// <remarks/>
    public string[] dependencies
    {
        get
        {
            RaiseExceptionIfNecessary();
            return ((string[])(results[3]));
        }
    }
    /// <remarks/>
    public string[] links
    {
        get
        {
            RaiseExceptionIfNecessary();
            return ((string[])(results[1]));
        }
    }

    /// <remarks/>
    public ResourceType resourceType
    {
        get
        {
            RaiseExceptionIfNecessary();
            return ((ResourceType)(results[4]));
        }
    }
    /// <remarks/>
    public bool Result
    {
        get
        {
            RaiseExceptionIfNecessary();
            return ((bool)(results[0]));
        }
    }
    /// <remarks/>
    public byte[] torrent
    {
        get
        {
            RaiseExceptionIfNecessary();
            return ((byte[])(results[2]));
        }
    }

    internal DownloadFileCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
        : base(exception, cancelled, userState)
    {
        this.results = results;
    }
}

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
public delegate void GetResourceDataCompletedEventHandler(object sender, GetResourceDataCompletedEventArgs e);

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
[DebuggerStepThrough()]
[DesignerCategory("code")]
public partial class GetResourceDataCompletedEventArgs: AsyncCompletedEventArgs
{
    object[] results;

    /// <remarks/>
    public ResourceData Result
    {
        get
        {
            RaiseExceptionIfNecessary();
            return ((ResourceData)(results[0]));
        }
    }

    internal GetResourceDataCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
        : base(exception, cancelled, userState)
    {
        this.results = results;
    }
}

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
public delegate void GetResourceListCompletedEventHandler(object sender, GetResourceListCompletedEventArgs e);

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
[DebuggerStepThrough()]
[DesignerCategory("code")]
public partial class GetResourceListCompletedEventArgs: AsyncCompletedEventArgs
{
    object[] results;

    /// <remarks/>
    public ResourceData[] Result
    {
        get
        {
            RaiseExceptionIfNecessary();
            return ((ResourceData[])(results[0]));
        }
    }

    internal GetResourceListCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
        : base(exception, cancelled, userState)
    {
        this.results = results;
    }
}

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
public delegate void RegisterResourceCompletedEventHandler(object sender, RegisterResourceCompletedEventArgs e);

/// <remarks/>
[GeneratedCode("wsdl", "2.0.50727.3038")]
[DebuggerStepThrough()]
[DesignerCategory("code")]
public partial class RegisterResourceCompletedEventArgs: AsyncCompletedEventArgs
{
    object[] results;

    /// <remarks/>
    public ReturnValue Result
    {
        get
        {
            RaiseExceptionIfNecessary();
            return ((ReturnValue)(results[0]));
        }
    }

    internal RegisterResourceCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState)
        : base(exception, cancelled, userState)
    {
        this.results = results;
    }
}