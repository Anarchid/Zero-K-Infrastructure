@using ZeroKWeb
@using ZkData
@model ZkData.Faction

<a href="@Url.Action("Index")">back to faction list</a>
@{
    Page.Title = "Faction " + Model.Name;
    Faction f = Model;
    var db = new ZkDataContext();
}

@Html.Partial("FactionBox", f)

@Html.IncludeWiki("Faction" + f.Shortcut)


<br/>
<h3>Resources</h3>
<table>
    <tr>
        <td>Metal:</td><td>@Math.Floor(f.Metal)</td>
    </tr>    
    <tr>
        <td>Dropships:</td><td>@f.Dropships</td>
    </tr>    
    <tr>
        <td>Bombers:</td><td>@f.Bombers</td>
    </tr>    
    <tr><td>Energy produced:</td><td>@f.EnergyProducedLastTurn</td></tr>
    <tr><td>Energy demand:</td><td>@f.EnergyDemandLastTurn</td></tr>

</table>

@if (Global.Account != null && Global.FactionID == f.FactionID) {
    <b>Secret topic:</b><br />
    if (Global.Account.HasFactionRight(x=>x.RightEditTexts)) {
        <form action="@Url.Action("SetTopic", new{factionID = f.FactionID})" method="POST">
            @Html.TextArea("secretTopic", f.SecretTopic, 8,80,null)
            <input type="submit"/>
        </form>
    } else {
        @Html.BBCode(f.SecretTopic)
    }

}

<h3>Faction roles</h3>
@foreach (RoleType rt in new ZkDataContext().RoleTypes.Where(x => !x.IsClanOnly && (x.RestrictFactionID == null || x.RestrictFactionID == f.FactionID)).OrderBy(x => x.DisplayOrder)) {
    @Html.PrintRoleType(rt)
    foreach (AccountRole acc in rt.AccountRoles.Where(x => x.AccountByAccountID.FactionID == f.FactionID)) {
        @Html.PrintAccount(acc.AccountByAccountID)
        @Html.DisplayFor(x => acc)
        <span>, &nbsp;</span>
    }
    <br/>
}

<h2>Diplomacy</h2>
@if (Global.Account != null && Global.FactionID == f.FactionID && Global.Account.HasFactionRight(x => x.RightDiplomacy)) {
    @Html.ActionLink("(propose new treaty)", "NewTreaty")
}
<br/>
@foreach (FactionTreaty tr in db.FactionTreaties.Where(x => x.TreatyState != TreatyState.Invalid).Where(x => (x.ProposingFactionID == f.FactionID || x.AcceptingFactionID == f.FactionID)).OrderBy(x=>x.TreatyState)) {
    if (tr.TreatyState == TreatyState.Proposed) {
        @Html.DisplayFor(x => tr)
    } else {
        <b>@Html.PrintFactionTreaty(tr) between @Html.PrintFaction(tr.FactionByProposingFactionID,false) and @Html.PrintFaction(tr.FactionByAcceptingFactionID,false)</b>
    }
    <br/>
}


<div class="js_tabs">
    <ul>
        <li><a href="#events"><span>Events</span></a></li>            
        <li><a href="#starships"><span>Starships</span></a></li>
        <li><a href="#technologies"><span>Technologies</span></a></li>
    </ul>
    <div id="events">
        @Html.Action("Events", "Planetwars", new { factionID = f.FactionID, partial = true })
    </div>

    <div id="starships">
        <table>
            @foreach (var p in Model.PlanetFactions.Where(x=>x.Dropships>0).OrderByDescending(x => x.Dropships)) {
                <tr>
                    <td>@Html.PrintPlanet(p.Planet)</td>
                    <td>
                        <img src='@p.Faction.GetShipImageUrl()' />@p.Dropships</td>
                </tr>
            }
        </table>
    </div>
    
        <div id="technologies">
        @foreach (var unlockEntry in Model.GetFactionUnlocks()) {
					var unlock = unlockEntry.Unlock;
					var giver = unlockEntry.Faction;
  
          <span style="color: @unlock.LabelColor; font-size:x-small; display:inline-block; width:90px;height:90px" title="$unlock$@unlock.UnlockID"  >
            <span style='font-size:x-small'>@Html.PrintFaction(giver,false)</span>
            <img src="@unlock.ImageUrl"/><br />
            @unlock.Name
          </span>
				}
    </div>

</div>

