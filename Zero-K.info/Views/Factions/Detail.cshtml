@using ZeroKWeb
@using ZkData
@model ZkData.Faction

<a href="@Url.Action("Index")">back to faction list</a>
@{
    Page.Title = "Faction " + Model.Name;
    Faction f = Model;
    var db = new ZkDataContext();
}

@Html.Partial("FactionBox", f)

@Html.IncludeWiki("Faction" + f.Shortcut)


<br/>
<h3>Resources</h3>
<table>
    <tr>
        <td>Metal:</td><td>@f.Metal</td>
    </tr>    
    <tr>
        <td>Dropships:</td><td>@f.Dropships</td>
    </tr>    
    <tr>
        <td>Bombers:</td><td>@f.Bombers</td>
    </tr>    

</table>

<h3>Faction roles</h3>
@foreach (RoleType rt in new ZkDataContext().RoleTypes.Where(x => !x.IsClanOnly && (x.RestrictFactionID == null || x.RestrictFactionID == f.FactionID)).OrderBy(x => x.DisplayOrder)) {
    @Html.PrintRoleType(rt)
    foreach (AccountRole acc in rt.AccountRoles.Where(x => x.AccountByAccountID.FactionID == f.FactionID)) {
        @Html.PrintAccount(acc.AccountByAccountID)
        @Html.DisplayFor(x => acc)
        <span>, &nbsp;</span>
    }
    <br/>
}

<h2>Diplomacy</h2>
@if (Global.Account != null && Global.FactionID == f.FactionID && Global.Account.HasFactionRight(x => x.RightDiplomacy)) {
    @Html.ActionLink("(propose new treaty)", "NewTreaty")
}
<br/>
@foreach (FactionTreaty tr in db.FactionTreaties.Where(x => x.TreatyState != TreatyState.Invalid).Where(x => (x.ProposingFactionID == f.FactionID || x.AcceptingFactionID == f.FactionID)).OrderBy(x=>x.TreatyState)) {
    if (tr.TreatyState == TreatyState.Proposed) {
        @Html.DisplayFor(x => tr)
    } else {
        <b>@Html.PrintFactionTreaty(tr) between @Html.PrintFaction(tr.FactionByProposingFactionID,false) and @Html.PrintFaction(tr.FactionByAcceptingFactionID,false)</b>
    }
    <br/>
}


<h2>Events</h2>

<div id="events">
    @Html.Action("Events", "Planetwars", new { factionID = f.FactionID, partial = true })
</div>