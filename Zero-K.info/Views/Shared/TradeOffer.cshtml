@using ZkData
@using ZeroKWeb
@model MarketOffer


@{ var offer = Model; }


@if (offer.IsSell)
{
    var sellerAccountPlanet = offer.Planet.AccountPlanets.SingleOrDefault(ap => ap.AccountID == offer.AccountID);
    var maxWillSell = 0;
    if (sellerAccountPlanet != null)
    {
        maxWillSell = Math.Min(sellerAccountPlanet.Influence, offer.Quantity);
    }
    if (!(maxWillSell == 0 && Global.Account != offer.AccountByAccountID) && Global.Account != null)
    {
        var maxCanBuy = Math.Min(Global.Account.Credits / offer.Price, maxWillSell);    
        <tr>  
            @if (!ViewData.ContainsKey("hidePlanet"))
            { 
                if (offer.Planet.OwnerAccountID == null)
                {
                    <td>@Html.PrintPlanet(offer.Planet)</td>               
                }
                else
                {
                    <td>@Html.PrintPlanet(offer.Planet) (@Html.PrintClan(offer.Planet.Account.Clan)) </td>  
                }
            }
            @if (!ViewData.ContainsKey("hideAccount"))
            {
                <td>@Html.PrintAccount(offer.AccountByAccountID)</td> 
            }
            <td>@offer.Quantity</td>         
            <td>@maxWillSell</td>
            <td>@offer.Price.ToString("C0")</td>
           @if (offer.AccountID == Global.AccountID)
           {
                <td>@Html.ActionLink("Cancel", "CancelMarketOrder", new { offerID = offer.OfferID, planetID = Model.PlanetID })</td>
           }
           else if (Global.AccountID != null && maxWillSell > 0 && maxCanBuy > 0)
           {
               var quickBuyText = String.Format("{0} for {1:C0}", maxCanBuy, maxCanBuy * offer.Price);
                <td>@Html.ActionLink(quickBuyText, "QuickTransaction", new { offerID = offer.OfferID, quantity = maxCanBuy })</td>
                <td>
                    <form method="post" action="@Url.Action("QuickTransaction")">
                        <input type="hidden" name="offerID" value="@offer.OfferID"/>
                        <input type="text" name="quantity" value="@maxCanBuy"/>
                        <input type='submit' value="Buy" />
                    </form>
                </td>           
           }
       </tr>
    }
}
else
{
    var maxWillBuy = offer.Price > 0 ? Math.Min(offer.AccountByAccountID.Credits / offer.Price, offer.Quantity) : offer.Quantity;
    if (!(maxWillBuy == 0 && Global.AccountID != offer.AccountID))
    {
        var visitorInfluence = 0;
        if (Global.Account != null)
        {
            var visitorAccountPlanet = offer.Planet.AccountPlanets.SingleOrDefault(ap => ap.AccountID == Global.AccountID);
            if (visitorAccountPlanet != null)
            {
                visitorInfluence = visitorAccountPlanet.Influence;
            }
        }
        <tr>
            @if (!ViewData.ContainsKey("hidePlanet"))
            {
                if (offer.Planet.OwnerAccountID == null)
                {
                    <td>@Html.PrintPlanet(offer.Planet)</td> 
              
                }
                else
                {
                    <td>@Html.PrintPlanet(offer.Planet) (@Html.PrintClan(offer.Planet.Account.Clan)) </td>  
                }
            }
            @if (!ViewData.ContainsKey("hideAccount"))
            {
                <td>@Html.PrintAccount(offer.AccountByAccountID)</td> 
            }
            <td>@offer.Quantity</td>    
            <td>@maxWillBuy</td>
            <td>@offer.Price.ToString("C0")</td>
           @if (offer.AccountID == Global.AccountID)
           {
                <td>@Html.ActionLink("Cancel", "CancelMarketOrder", new { offerID = offer.OfferID, planetID = Model.PlanetID })</td>
           }
           else if (Global.Account != null && maxWillBuy > 0 && visitorInfluence > 0)
           {
               var maxCanSell = Math.Min(maxWillBuy, visitorInfluence);
               var linkText = String.Format("{0} for {1:C0}", maxCanSell, maxCanSell * offer.Price);
                <td>@Html.ActionLink(linkText, "QuickTransaction", new { offerID = offer.OfferID, quantity = maxCanSell })</td>
                <td>
                    <form method="post" action="@Url.Action("QuickTransaction")">
                        <input type="hidden" name="offerID" value="@offer.OfferID"/>
                        <input type="text" name="quantity" value="@maxCanSell"/>
                        <input type='submit' value="Sell" />
                    </form>
                </td>
           }
        </tr>
    }
}


 