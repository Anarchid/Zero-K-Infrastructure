@using ZkData
@using ZeroKWeb
@model Account
           

@{
    var account = Model;
    var db = new ZkDataContext();
    var defaultGalaxy = db.Galaxies.Single(g => g.IsDefault);
    var galaxyOffers = db.MarketOffers.Where(o => o.Planet.Galaxy.IsDefault);
}

<h1>@account.Name's Trade Office</h1>
<br />
<br />
@Html.PrintAccount(account)'s Credits: @account.Credits.ToString("C0")

@if (Global.AccountID != null && account.AccountID != Global.AccountID) 
{ 
<p>My Credits: @Global.Account.Credits.ToString("C0") </p>
}

<br />
<br />
<h2>@Html.PrintAccount(account)' Sell Offers</h2>

<table>
    <tr>
        <th>Planet</th>
        <th>Ordered</th>
        <th>Allowed</th>
        <th>Price</th>
        <th>Buy</th>
        <th>Buy Specific Amount</th>
    </tr>

@foreach (var offer in galaxyOffers.Where(o => o.AccountID == account.AccountID && o.IsSell && o.AcceptedAccountID == null))
{
    @Html.Partial("TradeOffer", new ViewDataDictionary(offer) { { "hideAccount", true } })
}
</table>

<br />
<h2>@Html.PrintAccount(account)'s Buy Offers</h2>

<table>
    <tr>
        <th>Planet</th>
        <th>Ordered</th>
        <th>Allowed</th>
        <th>Price</th>
        <th>Sell</th>
        <th>Sell Specific Amount</th>
    </tr>

@foreach (var offer in galaxyOffers.Where(o => o.AccountID == account.AccountID && !o.IsSell && o.AcceptedAccountID == null))
{
     @Html.Partial("TradeOffer", new ViewDataDictionary(offer) { { "hideAccount", true } })
}
</table>

<br />
<h2>Trade History</h2>

<table>
    <tr>
        <th>Planet</th>
        <th>Seller</th>
        <th>Buyer</th>
        <th>Date</th>
        <th>Quantity</th>
        <th>Price</th>
        <th>Total</th>
    </tr>
@{
    var history = galaxyOffers
        .Where(o => o.AcceptedAccountID != null && (o.AccountID == account.AccountID || o.AcceptedAccountID == account.AccountID))
        .GroupBy(o => new { o.DateAccepted, o.Quantity, o.Price })
        .Select(g => g.First())
        .OrderByDescending(o => o.DateAccepted);


    foreach (var offer in history)
    {
        var seller = offer.IsSell ? offer.AccountByAccountID : offer.AccountByAcceptedAccountID;
        var buyer = offer.IsSell ? offer.AccountByAcceptedAccountID : offer.AccountByAccountID;
        <tr>
            <td>@Html.PrintPlanet(offer.Planet)</td>
            <td>@Html.PrintAccount(seller)</td>
            <td>@Html.PrintAccount(buyer)</td>
            <td>@offer.DateAccepted.ToAgoString()</td>
            <td>@offer.Quantity</td>
            <td>@offer.Price.ToString("C0")</td>
            <td>@String.Format("{0:C0}", offer.Quantity * offer.Price)</td>
        </tr>
    }
}
</table>


<br />
<h2>Sale Opportunities</h2>

<table>
    <tr>
        <th>Planet</th>
        <th>Already Trading</th>
        <th>Influence</th>
        <th>Unit Price</th>
    </tr>
@{

    var planets = from planet in defaultGalaxy.Planets
                  let ap = planet.AccountPlanets.SingleOrDefault(ap => ap.AccountID == account.AccountID && ap.Influence > 0)
                  where ap != null
                  orderby ap.Influence descending
                  select new {planet, ap.Influence};
    foreach (var planetData in planets) 
    {
        var planet = planetData.planet;
        var influence = planetData.Influence;
        <tr>
            @if (planet.Account != null) 
            { 
                <td>@Html.PrintPlanet(planet) (@Html.PrintClan(planet.Account.Clan)) </td>                
            }
            else
            {
                <td>@Html.PrintPlanet(planet)</td>
            }
            <td>@(planet.MarketOffers.Any(o => o.AcceptedAccountID == null && o.AccountID == account.AccountID)?"yes":"no")</td>
            <form method="post" action="@Url.Action("SubmitSellOrder")">
             <input type="hidden" name="planetID" value="@planet.PlanetID"/>
              <td><input type="text" name="quantity" value="@influence"/></td>
              <td><input type="text" name="price" value=""/></td>
              <td><input type='submit' value="New Sell Offer" /></td>
            </form>
        </tr>
    }
}
</table>

<br />
<h2>All Sell Offers</h2>
<table>
    <tr>
        <th>Planet</th>
        <th>Seller</th>
        <th>Ordered</th>
        <th>Allowed</th>
        <th>Price</th>
        <th>Buy</th>
        <th>Buy Specific Amount</th>
    </tr>
@{ 
    foreach (var offer in galaxyOffers.Where(o => o.IsSell && o.AcceptedAccountID == null).OrderBy(o => o.Price))
    {
        @Html.Partial("TradeOffer", new ViewDataDictionary(offer))
    }
}
</table>

<br />
<h2>All Buy Offers</h2>
<table>
    <tr>
        <th>Planet</th>
        <th>Buyer</th>
        <th>Ordered</th>
        <th>Allowed</th>
        <th>Price</th>
        <th>Sell</th>
        <th>Sell Specific Amount</th>
    </tr>
@{ 
    foreach (var offer in galaxyOffers.Where(o => !o.IsSell && o.AcceptedAccountID == null).OrderByDescending(o => o.Price))
    {
        @Html.Partial("TradeOffer", new ViewDataDictionary(offer))
    }
}
</table>