@using LobbyClient
@using ZeroKWeb
@using ZeroKWeb.Models
@using ZkData
@model ZkData.Planet
@{
    ViewBag.Title = "Planet";
    Page.Title = "Planet " + Model.Name;
    Battle autohost = Global.Nightwatch.GetPlanetBattles(Model).OrderByDescending(x => x.Users.Count).FirstOrDefault();
    var db = new ZkDataContext();
}
<h1>Planet @Model.Name
</h1>
<table>
    <tr>
        <td>
            @Html.Partial("PlanetIcon", Model)
        </td>
        <td>
            @Html.Partial("MapInfoBox", Model.Resource)
        </td>
        <td>
            <ul>
                @foreach (Link p in Model.LinksByPlanetID1.Union(Model.LinksByPlanetID2)) {
                    Planet planet = p.PlanetByPlanetID1 == Model ? p.PlanetByPlanetID2 : p.PlanetByPlanetID1;
                    <li>@Html.PrintPlanet(planet)</li>
                }
            </ul>
        </td>
    </tr>
</table>
@if (Model.OwnerAccountID == Global.AccountID && Global.Clan != null) {
    <form method="post" action="@Url.Action("SubmitRenamePlanet")">
        <input type="hidden" name="planetID" value="@Model.PlanetID"/>
        <input type="text" name="newName" value="@Model.Name"/>
        <input type='submit' value="Rename Planet" />
    </form>
}
@if (autohost != null) {
    <b>
        @if (autohost.IsInGame) {
            <a href='spring://@Url.Action("Planet", "Planetwars", new { id = Model.PlanetID }, Request.Url.Scheme)@@join_player:@autohost.Founder'>
                Battle in progress, JOIN TO WATCH</a>
        }
        else {
            <a href='spring://@Url.Action("Planet", "Planetwars", new { id = Model.PlanetID }, Request.Url.Scheme)@@join_player:@autohost.Founder'>
                Battle has @autohost.Users.Count players waiting, JOIN IT</a>
        }
    </b>
}
@{
    Galaxy galaxy = db.Galaxies.Single(g => g.IsDefault);
    int mapWidth = 700;
    int mapHeight = 500;
}
@section head {
    <script type="text/javascript">
        $(document).ready(function() {
            $("#tabs").tabs();
        });
    </script>
    <script type="text/javascript">
        window.onload = function() {
            var paper = Raphael(document.getElementById("minimap"), @mapWidth, @mapHeight);

            @foreach (Link link in galaxy.Links) {
                Planet p1 = link.PlanetByPlanetID1;
                Planet p2 = link.PlanetByPlanetID2;

                double x1 = p1.X*mapWidth;
                double y1 = p1.Y*mapHeight;
                double x2 = p2.X*mapWidth;
                double y2 = p2.Y*mapHeight;

                int width = 2;
                string color1 = p1.GetColor(Global.Account);
                string color2 = p2.GetColor(Global.Account);
                double angle = -Math.Atan2(x2 - x1, y2 - y1)/Math.PI*180;
                double length = Math.Sqrt((x2 - x1)*(x2 - x1) + (y2 - y1)*(y2 - y1));
                @: var r = paper.rect(@x1-@width/2, @y1, @width, @length);
                @: r.attr({
                @:  "fill": "90-  "fill": olor1",
                @:  "stroke": "none"
                @: });
                @: r.rotate(@angle, @x1, @y1);
            };
            @foreach (Planet planet in galaxy.Planets) {
                int mapIconSize = 10;
                string stroke = "#000000";
                if (planet.PlanetID == Model.PlanetID) {
                    mapIconSize *= 2;
                    stroke = "#ffffff";
                }
                @: vplanet.Y*mapHeightplanet.Y*mapHeightidth), @(planet.Y * mapHeight), @mapIconSize);
                @: circle.attr({
                @:  "fill": "@planet.GetColor(Glob  "fill": )",
                @:  "stro  "stroke": e",
                @:  "stroke-width": "3"
                @: });
            };
        };
    </script>
}
@Html.Partial("PlanetSummary", Model)
<div id="tabs">
    <ul>
        <li><a href="#influence"><span>Influence</span></a></li>
        <li><a href="#dropships"><span>Starships</span></a></li>
        <li><a href="#structures"><span>Structures</span></a></li>
        <li><a href="#events"><span>Events</span></a></li>
        <li><a href="#minimap"><span>Navigation</span></a></li>
    </ul>
    <div id="influence">
        
        @Html.Partial("InfluenceList", Model.PlanetFactions)
    </div>
    <div id="dropships">
        @Html.Partial("PlanetDropships", Model)
        @if (Global.IsAccountAuthorized) {
            if (Global.Account.GetDropshipsAvailable() <= 0) {
                <span>You have no free starships - fight more battles</span>
            }
            else {
                bool isAccessible = Model.CanDropshipsAttack(Global.Account.Faction);
                double defs = Model.PlanetStructures.Where(x => x.IsActive).Sum(x => x.StructureType.EffectDropshipDefense) ?? 0;
                double bombNeed = 3 + defs/3;
                if (isAccessible) {
                    double avail = Global.Account.GetDropshipsAvailable();
                    <form action='@Url.Action("SendDropships", "Planetwars", new { planetID = Model.PlanetID })' method="post">
                        Invade planet (@avail) @(!isAccessible ? "JUMPGATE" : ""):
                        <input type="text" name="count" />
                        <input type="submit" value="send" />
                    </form>
                    <br />

                    if (avail >= bombNeed) {
                        @Html.ActionLink("Bombard planet with " + bombNeed + " ships", "BombPlanet", new { planetID = Model.PlanetID, title = "Destroys random structure and reduces 3% of influence. If there is no structure on planet, reduces 10% of influence. Bombing needs 3 + planet defense/3 ships. " })<br/>
                    }
                }
                else {
                    <span>You cannot access this planet through link of wormholes</span>
                }
            }
        }
    </div>
    <div id="minimap">
    </div>
    <div id="structures">
        @foreach (PlanetStructure structure in Model.PlanetStructures) {
            <p>
                <img  width="80" height="80" src='@structure.GetImageUrl()'/>
                @if (!structure.IsActive) {
                    <span style='color: red'>DISABLED</span>
                }
                @structure.StructureType.Name
                (@structure.StructureType.Description)</p>
        }
        @if (Model.Account != null && Global.FactionID == Model.OwnerFactionID) {
            <h2>Construction</h2>

            Planet planet = db.Planets.Single(p => p.PlanetID == Model.PlanetID);
            foreach (StructureType structureType in db.StructureTypes.Where(s => s.IsBuildable)) {
                if (!planet.PlanetStructures.Any(x => x.StructureTypeID == structureType.StructureTypeID)) {
                    if (structureType.Cost > Global.Account.GetMetalAvailable()) {
                        <p>@String.Format("Build {0} (requires {1}) - {2}", structureType.Name, structureType.Cost, structureType.Description)</p>
                    }
                    else {
                        string linkText = String.Format("Build {0} ({1:C0}) - {2}", structureType.Name, structureType.Cost, structureType.Description);
                        <p>@Html.ActionLink(linkText, "BuildStructure", new { planetID = Model.PlanetID, structureTypeID = structureType.StructureTypeID })</p>
                    }
                }
            }

            foreach (StructureType structureType in db.StructureTypes.Where(s => s.IsBuildable)) {
                if (planet.PlanetStructures.Any(x => x.StructureTypeID == structureType.StructureTypeID)) {
                    string linkText = String.Format("Destroy {0} ({1})", structureType.Name, structureType.Cost);
                    string question = String.Format("Confirm destruction of {0}?", structureType.Name);
                    <p>@Html.ActionLink(linkText, "DestroyStructure", new { planetID = Model.PlanetID, structureTypeID = structureType.StructureTypeID }, new { @onclick = String.Format("return confirm('{0}')", question) })</p>
                }
            }
        }
    </div>
    <div id="events">
        @Html.Action("Events", new { planetID = Model.PlanetID, partial = true })
    </div>

</div>
<br />
@Html.Partial("CommentList", new CommentList { Thread = Model.ForumThread, ActionData = new { planetID = Model.PlanetID, threadID = Model.ForumThreadID } })