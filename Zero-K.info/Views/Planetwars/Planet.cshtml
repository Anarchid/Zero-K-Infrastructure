@using ZkData
@using ZeroKWeb
@model Planet
@{
    ViewBag.Title = "Planet";
    Page.Title = "Planet " + Model.Name;
    var autohost = Model.PlanetWarsHosts.FirstOrDefault();
}

<h1>
  @Html.Partial("PlanetIcon", Model)
  Planet @Model.Name
</h1>
@if (Model.OwnerAccountID == Global.AccountID)
{
  <form method="post" action="@Url.Action("SubmitRenamePlanet")">
  <input type="hidden" name="planetID" value="@Model.PlanetID"/>
  <input type="text" name="newName" value="@Model.Name"/>
  <input type='submit' value="Rename Planet" />
  </form>
}

@if (autohost != null)
{ 
  <b>
  @if (autohost.InGame)
  {
    <a href='spring://@Url.Action("Planet", "Planetwars", new { id = Model.PlanetID }, Request.Url.Scheme)@@join_player:@autohost.Account.Name'>Battle in progress, JOIN TO WATCH</a>
  }
  else
  {
    <a href='spring://@Url.Action("Planet", "Planetwars", new { id = Model.PlanetID }, Request.Url.Scheme)@@join_player:@autohost.Account.Name'>Battle has @autohost.Players players wiating, JOIN IT</a>
  }
  </b>
}



@section head {
  <script>
      $(document).ready(function () {
          $("#tabs").tabs();
      });
  </script>
}

@Html.Partial("PlanetSummary", Model)

<div id="tabs">
    <ul>
        <li><a href="#influence"><span>Influence</span></a></li>
        <li><a href="#dropships"><span>Dropships</span></a></li>
        <li><a href="#map"><span>Surface Scan</span></a></li>
        <li><a href="#navigation"><span>Navigation</span></a></li>
        <li><a href="#structures"><span>Structures</span></a></li>
        <li><a href="#trade"><span>Trade</span></a></li>
        <li><a href="#events"><span>Events</span></a></li>
    </ul>
    <div id="influence">
        @Html.Partial("InfluenceList", Model.AccountPlanets)
    </div>
    <div id="dropships">
      @Html.Partial("PlanetDropships", Model) 
      @if (Global.IsAccountAuthorized)
        {
            if (Global.Account.DropshipCount <= 0)
            {
           <span>You have no free dropships to send here</span>
            }
            else
            {
          <form action='@Url.Action("SendDropships", "Planetwars", new { planetID = Model.PlanetID })' method="post">
          Number of dropships to send (@Global.Account.DropshipCount ready): <input type="text" name="count" /> <input type="submit" value="send" />
          </form>
                                  if (!Galaxy.AccessiblePlanets(new ZkDataContext(), Global.ClanID, AllyStatus.Alliance).Any(x => x.PlanetID == Model.PlanetID))
                                  {
            <span>You cannot access this planet through wormholes - jumpgate must be used</span>  
                                  }
            }
        }
    </div>
    <div id="map">
          @Html.ActionLink(Model.Resource.InternalName, "Detail", "Maps", new { id = Model.MapResourceID }, new { title = "$map$" + Model.MapResourceID })
      <table>
        <tr>
          <td valign='top'>
            <span style="margin: 0; padding: 0; border: 1px dashed gray; display: table-cell;
              text-align: center; vertical-align: middle; width: 96px; height: 96px;" title="$map$@Model.MapResourceID"><a href='@Url.Action("Detail", "Maps", new { id = Model.Resource.ResourceID })'>
                <img src='http://zero-k.info/Resources/@Model.Resource.ThumbnailName' style="margin:0px;padding:0px;"/>
              </a></span>
          </td>
          <td valign='top'>
            <table>
              <tr>
                <td>
                  Size:
                </td>
                <td>@Model.Resource.MapWidth x @Model.Resource.MapHeight
                </td>
              </tr>
              <tr>
                <td colspan='2'>
                  <small>
                    @{Html.RenderPartial("~/Views/Maps/MapTags.cshtml", Model.Resource);}
                  </small>
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </div>
    <div id="navigation">
    @foreach (var p in Model.LinksByPlanetID1.Union(Model.LinksByPlanetID2))
    {
        var planet = p.PlanetByPlanetID1 == Model ? p.PlanetByPlanetID2 : p.PlanetByPlanetID1;
      <li style='color:@(p.LinktStrength > 0 ? "" : "red")'>@Html.PrintPlanet(planet) - link @(p.LinktStrength * 100)%</li>
    }
    </div>
    <div id="structures">
        @if (Model.Account != null && Global.ClanID == Model.Account.ClanID)
        {
            <h2>Construction</h2>
            foreach (var structure in Model.PlanetStructures.Where(s => s.IsDestroyed))
            {
                if (structure.StructureType.Cost > Global.Account.Credits)
                {
                        <p>@String.Format("Repair {0} (requires {1:C0})", structure.StructureType.Name, structure.StructureType.Cost)</p>
                }
                else
                {
                    var linkText = String.Format("Repair {0} ({1:C0})", structure.StructureType.Name, structure.StructureType.Cost);
                        <p>@Html.ActionLink(linkText, "RepairStructure", new { planetID = Model.PlanetID, structureTypeID = structure.StructureTypeID })</p>
                }
            }
            foreach (var structure in Model.PlanetStructures.Where(s => !s.IsDestroyed))
            {

                var upgrade = structure.StructureType.ParentStructureTypeByUpgradesToStructureID;
                if (upgrade != null)
                {
                    if (upgrade.Cost > Global.Account.Credits)
                    {
                        <p>@String.Format("Upgrade {0} to {1} (requires {2:C0})", structure.StructureType.Name, upgrade.Name, upgrade.Cost)</p>
                    }
                    else
                    {
                        var linkText = String.Format("Upgrade {0} to {1} ({2:C0})", structure.StructureType.Name, upgrade.Name, upgrade.Cost);
                        <p>@Html.ActionLink(linkText, "UpgradeStructure", new { planetID = Model.PlanetID, structureTypeID = structure.StructureTypeID })</p>
                    }

                }
            }
            using (var db = new ZkDataContext())
            {
                var planet = db.Planets.Single(p => p.PlanetID == Model.PlanetID);
                foreach (var structureType in db.StructureTypes.Where(s => s.IsBuildable))
                {
                    if (!StructureType.HasStructureOrUpgrades(db, planet, structureType))
                    {
                        if (structureType.Cost > Global.Account.Credits)
                        {
                            <p>@String.Format("Build {0} (requires {1:C0})", structureType.Name, structureType.Cost)</p>
                        }
                        else
                        {
                            var linkText = String.Format("Build {0} ({1:C0})", structureType.Name, structureType.Cost);
                            <p>@Html.ActionLink(linkText, "BuildStructure", new { planetID = Model.PlanetID, structureTypeID = structureType.StructureTypeID })</p>
                        }
                    }
                }
            }
        }
    </div>
    <div id="trade">
        @if (Global.Account != null) 
        {
            @Html.ActionLink("Go to Trade Office", "Trade", "PlanetWars", new { username = Global.Account.Name }, null)
        }
        <h3>Sell Offers</h3>
              <table>
                <tr>
                    <th>Seller</th>
                    <th>Ordered</th>
                    <th>Allowed</th>
                    <th>Price</th>
                    <th>Buy</th>
                    <th>Buy Specific Amount</th>
                </tr>
            @foreach (var offer in Model.MarketOffers.Where(o => o.IsSell && o.DateAccepted == null).OrderBy(o => o.Price))
            {
                @Html.Partial("TradeOffer", new ViewDataDictionary(offer) { { "hidePlanet", true } })
            }
            </table>

        @if (Global.Account != null)
        {
            var temp = Model.AccountPlanets.SingleOrDefault(ap => ap.AccountID == Global.AccountID);
            var myInfluence = 0;
            if (temp != null)
            {
                myInfluence = temp.Influence;
            }
          <br />
          <form method="post" action="@Url.Action("SubmitSellOrder")">
              <input type="hidden" name="planetID" value="@Model.PlanetID"/>
              <input type='submit' value="Create New Sell Offer" />
              Influence: <input type="text" name="quantity" value="@myInfluence"/>
              Unit Price: <input type="text" name="price" value=""/>
          </form>
        }

         <br />

        <h3>Buy Offers</h3>
              <table>
                <tr>
                    <th>Buyer</th>
                    <th>Ordered</th>
                    <th>Allowed</th>
                    <th>Price</th>
                    <th>Sell</th>
                    <th>Sell Specific Amount</th>
                </tr>
            @foreach (var offer in Model.MarketOffers.Where(o => !o.IsSell && o.DateAccepted == null).OrderByDescending(o => o.Price))
            {
                @Html.Partial("TradeOffer", new ViewDataDictionary(offer) { { "hidePlanet", true } })
            }
            </table>
            @if (Global.Account != null)
            {
                  <br />
            <form method="post" action="@Url.Action("SubmitBuyOrder")">
                <input type='submit' value="Create New Buy Offer" />
                <input type="hidden" name="planetID" value="@Model.PlanetID"/>
                Influence: <input type="text" name="quantity" value="0"/>
                Unit Price: <input type="text" name="price" value="0"/>
            </form>
            }    
    </div>
    <div id="structures">
        @foreach (var structure in Model.PlanetStructures)
    {
     
      <p>
        <img  width="32" height="32" src='@structure.GetImageUrl()'/>@structure.StructureType.Name
        (@structure.StructureType.Description)</p>
    }
    </div>
    <div id="events">
        @Html.Action("Events", new { planetID = Model.PlanetID, partial = true })
    </div>

    

</div>

@Html.Partial("CommentList", new ZeroKWeb.Models.CommentList() { Thread = Model.ForumThread, ActionData = new { planetID = Model.PlanetID, threadID = Model.ForumThreadID } })




