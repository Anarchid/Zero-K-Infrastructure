//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40818.0
// 
namespace PlanetWars.ServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BodyResponse", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class BodyResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PlanetWars.ServiceReference.CelestialObject BodyField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipOption> NewShipOptionsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureOption> NewStructureOptionsField;
        
        private PlanetWars.ServiceReference.Player PlayerField;
        
        private PlanetWars.ServiceReference.BuildResponse ResponseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.CelestialObject Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipOption> NewShipOptions {
            get {
                return this.NewShipOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewShipOptionsField, value) != true)) {
                    this.NewShipOptionsField = value;
                    this.RaisePropertyChanged("NewShipOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureOption> NewStructureOptions {
            get {
                return this.NewStructureOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewStructureOptionsField, value) != true)) {
                    this.NewStructureOptionsField = value;
                    this.RaisePropertyChanged("NewStructureOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.Player Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.BuildResponse Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((this.ResponseField.Equals(value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CelestialObject", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class CelestialObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CelestialObjectIDField;
        
        private PlanetWars.ServiceReference.CelestialObjectType CelestialObjectTypeField;
        
        private double OrbitSpeedField;
        
        private double OrbitDistanceField;
        
        private double OrbitInitialAngleField;
        
        private System.Nullable<int> ParentObjectField;
        
        private string NameField;
        
        private double XField;
        
        private double YField;
        
        private double MetalDensityField;
        
        private double FoodDensityField;
        
        private double QuantiumDensityField;
        
        private double DarkMatterDensityField;
        
        private int SizeField;
        
        private System.Nullable<int> OwnerIDField;
        
        private bool IsStargateField;
        
        private int PopulationField;
        
        private double HitpointsDamagedField;
        
        private bool IsConnectedField;
        
        private int MaxPopulationField;
        
        private double MetalIncomeField;
        
        private double FoodIncomeField;
        
        private double QuantiumIncomeField;
        
        private double DarkMatterIncomeField;
        
        private double EfficiencyField;
        
        private double BuildpowerField;
        
        private double ResearchIncomeField;
        
        private double BuildpowerUsedField;
        
        private bool CanBeRenamedField;
        
        private bool CanMapBeChangedField;
        
        private string MapNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Battle> BattlesField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectEvent> CelestialObjectEventsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectLink> CelestialObjectLinksByFirstObjectIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectLink> CelestialObjectLinksBySecondObjectIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectStructure> CelestialObjectStructuresField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectShip> CelestialObjectShipsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> TransitsByFromObjectIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> TransitsByToObjectIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> TransitsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StarSystem> StarSystemsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObject> ChildCelestialObjectsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> PlayersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CelestialObjectID {
            get {
                return this.CelestialObjectIDField;
            }
            set {
                if ((this.CelestialObjectIDField.Equals(value) != true)) {
                    this.CelestialObjectIDField = value;
                    this.RaisePropertyChanged("CelestialObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.CelestialObjectType CelestialObjectType {
            get {
                return this.CelestialObjectTypeField;
            }
            set {
                if ((this.CelestialObjectTypeField.Equals(value) != true)) {
                    this.CelestialObjectTypeField = value;
                    this.RaisePropertyChanged("CelestialObjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OrbitSpeed {
            get {
                return this.OrbitSpeedField;
            }
            set {
                if ((this.OrbitSpeedField.Equals(value) != true)) {
                    this.OrbitSpeedField = value;
                    this.RaisePropertyChanged("OrbitSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public double OrbitDistance {
            get {
                return this.OrbitDistanceField;
            }
            set {
                if ((this.OrbitDistanceField.Equals(value) != true)) {
                    this.OrbitDistanceField = value;
                    this.RaisePropertyChanged("OrbitDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public double OrbitInitialAngle {
            get {
                return this.OrbitInitialAngleField;
            }
            set {
                if ((this.OrbitInitialAngleField.Equals(value) != true)) {
                    this.OrbitInitialAngleField = value;
                    this.RaisePropertyChanged("OrbitInitialAngle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<int> ParentObject {
            get {
                return this.ParentObjectField;
            }
            set {
                if ((this.ParentObjectField.Equals(value) != true)) {
                    this.ParentObjectField = value;
                    this.RaisePropertyChanged("ParentObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public double MetalDensity {
            get {
                return this.MetalDensityField;
            }
            set {
                if ((this.MetalDensityField.Equals(value) != true)) {
                    this.MetalDensityField = value;
                    this.RaisePropertyChanged("MetalDensity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public double FoodDensity {
            get {
                return this.FoodDensityField;
            }
            set {
                if ((this.FoodDensityField.Equals(value) != true)) {
                    this.FoodDensityField = value;
                    this.RaisePropertyChanged("FoodDensity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public double QuantiumDensity {
            get {
                return this.QuantiumDensityField;
            }
            set {
                if ((this.QuantiumDensityField.Equals(value) != true)) {
                    this.QuantiumDensityField = value;
                    this.RaisePropertyChanged("QuantiumDensity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public double DarkMatterDensity {
            get {
                return this.DarkMatterDensityField;
            }
            set {
                if ((this.DarkMatterDensityField.Equals(value) != true)) {
                    this.DarkMatterDensityField = value;
                    this.RaisePropertyChanged("DarkMatterDensity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public System.Nullable<int> OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((this.OwnerIDField.Equals(value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public bool IsStargate {
            get {
                return this.IsStargateField;
            }
            set {
                if ((this.IsStargateField.Equals(value) != true)) {
                    this.IsStargateField = value;
                    this.RaisePropertyChanged("IsStargate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public int Population {
            get {
                return this.PopulationField;
            }
            set {
                if ((this.PopulationField.Equals(value) != true)) {
                    this.PopulationField = value;
                    this.RaisePropertyChanged("Population");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public double HitpointsDamaged {
            get {
                return this.HitpointsDamagedField;
            }
            set {
                if ((this.HitpointsDamagedField.Equals(value) != true)) {
                    this.HitpointsDamagedField = value;
                    this.RaisePropertyChanged("HitpointsDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public bool IsConnected {
            get {
                return this.IsConnectedField;
            }
            set {
                if ((this.IsConnectedField.Equals(value) != true)) {
                    this.IsConnectedField = value;
                    this.RaisePropertyChanged("IsConnected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public int MaxPopulation {
            get {
                return this.MaxPopulationField;
            }
            set {
                if ((this.MaxPopulationField.Equals(value) != true)) {
                    this.MaxPopulationField = value;
                    this.RaisePropertyChanged("MaxPopulation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public double MetalIncome {
            get {
                return this.MetalIncomeField;
            }
            set {
                if ((this.MetalIncomeField.Equals(value) != true)) {
                    this.MetalIncomeField = value;
                    this.RaisePropertyChanged("MetalIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public double FoodIncome {
            get {
                return this.FoodIncomeField;
            }
            set {
                if ((this.FoodIncomeField.Equals(value) != true)) {
                    this.FoodIncomeField = value;
                    this.RaisePropertyChanged("FoodIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public double QuantiumIncome {
            get {
                return this.QuantiumIncomeField;
            }
            set {
                if ((this.QuantiumIncomeField.Equals(value) != true)) {
                    this.QuantiumIncomeField = value;
                    this.RaisePropertyChanged("QuantiumIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public double DarkMatterIncome {
            get {
                return this.DarkMatterIncomeField;
            }
            set {
                if ((this.DarkMatterIncomeField.Equals(value) != true)) {
                    this.DarkMatterIncomeField = value;
                    this.RaisePropertyChanged("DarkMatterIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public double Efficiency {
            get {
                return this.EfficiencyField;
            }
            set {
                if ((this.EfficiencyField.Equals(value) != true)) {
                    this.EfficiencyField = value;
                    this.RaisePropertyChanged("Efficiency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public double Buildpower {
            get {
                return this.BuildpowerField;
            }
            set {
                if ((this.BuildpowerField.Equals(value) != true)) {
                    this.BuildpowerField = value;
                    this.RaisePropertyChanged("Buildpower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public double ResearchIncome {
            get {
                return this.ResearchIncomeField;
            }
            set {
                if ((this.ResearchIncomeField.Equals(value) != true)) {
                    this.ResearchIncomeField = value;
                    this.RaisePropertyChanged("ResearchIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=27)]
        public double BuildpowerUsed {
            get {
                return this.BuildpowerUsedField;
            }
            set {
                if ((this.BuildpowerUsedField.Equals(value) != true)) {
                    this.BuildpowerUsedField = value;
                    this.RaisePropertyChanged("BuildpowerUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=28)]
        public bool CanBeRenamed {
            get {
                return this.CanBeRenamedField;
            }
            set {
                if ((this.CanBeRenamedField.Equals(value) != true)) {
                    this.CanBeRenamedField = value;
                    this.RaisePropertyChanged("CanBeRenamed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=29)]
        public bool CanMapBeChanged {
            get {
                return this.CanMapBeChangedField;
            }
            set {
                if ((this.CanMapBeChangedField.Equals(value) != true)) {
                    this.CanMapBeChangedField = value;
                    this.RaisePropertyChanged("CanMapBeChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=30)]
        public string MapName {
            get {
                return this.MapNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MapNameField, value) != true)) {
                    this.MapNameField = value;
                    this.RaisePropertyChanged("MapName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=31)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Battle> Battles {
            get {
                return this.BattlesField;
            }
            set {
                if ((object.ReferenceEquals(this.BattlesField, value) != true)) {
                    this.BattlesField = value;
                    this.RaisePropertyChanged("Battles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=32)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectEvent> CelestialObjectEvents {
            get {
                return this.CelestialObjectEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.CelestialObjectEventsField, value) != true)) {
                    this.CelestialObjectEventsField = value;
                    this.RaisePropertyChanged("CelestialObjectEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=33)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectLink> CelestialObjectLinksByFirstObjectID {
            get {
                return this.CelestialObjectLinksByFirstObjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CelestialObjectLinksByFirstObjectIDField, value) != true)) {
                    this.CelestialObjectLinksByFirstObjectIDField = value;
                    this.RaisePropertyChanged("CelestialObjectLinksByFirstObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=34)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectLink> CelestialObjectLinksBySecondObjectID {
            get {
                return this.CelestialObjectLinksBySecondObjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CelestialObjectLinksBySecondObjectIDField, value) != true)) {
                    this.CelestialObjectLinksBySecondObjectIDField = value;
                    this.RaisePropertyChanged("CelestialObjectLinksBySecondObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=35)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectStructure> CelestialObjectStructures {
            get {
                return this.CelestialObjectStructuresField;
            }
            set {
                if ((object.ReferenceEquals(this.CelestialObjectStructuresField, value) != true)) {
                    this.CelestialObjectStructuresField = value;
                    this.RaisePropertyChanged("CelestialObjectStructures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=36)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectShip> CelestialObjectShips {
            get {
                return this.CelestialObjectShipsField;
            }
            set {
                if ((object.ReferenceEquals(this.CelestialObjectShipsField, value) != true)) {
                    this.CelestialObjectShipsField = value;
                    this.RaisePropertyChanged("CelestialObjectShips");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=37)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> TransitsByFromObjectID {
            get {
                return this.TransitsByFromObjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransitsByFromObjectIDField, value) != true)) {
                    this.TransitsByFromObjectIDField = value;
                    this.RaisePropertyChanged("TransitsByFromObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=38)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> TransitsByToObjectID {
            get {
                return this.TransitsByToObjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TransitsByToObjectIDField, value) != true)) {
                    this.TransitsByToObjectIDField = value;
                    this.RaisePropertyChanged("TransitsByToObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=39)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> Transits {
            get {
                return this.TransitsField;
            }
            set {
                if ((object.ReferenceEquals(this.TransitsField, value) != true)) {
                    this.TransitsField = value;
                    this.RaisePropertyChanged("Transits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=40)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StarSystem> StarSystems {
            get {
                return this.StarSystemsField;
            }
            set {
                if ((object.ReferenceEquals(this.StarSystemsField, value) != true)) {
                    this.StarSystemsField = value;
                    this.RaisePropertyChanged("StarSystems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=41)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObject> ChildCelestialObjects {
            get {
                return this.ChildCelestialObjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildCelestialObjectsField, value) != true)) {
                    this.ChildCelestialObjectsField = value;
                    this.RaisePropertyChanged("ChildCelestialObjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=42)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class Player : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private int NextLevelXPField;
        
        private int ThisLevelXPField;
        
        private int PlayerIDField;
        
        private int SystemIDField;
        
        private int SpringAccountIDField;
        
        private bool IsActiveField;
        
        private string MothershipNameField;
        
        private System.Nullable<int> TransitIDField;
        
        private double CreditsField;
        
        private double MetalField;
        
        private double FoodField;
        
        private double MetalIncomeField;
        
        private double FoodIncomeField;
        
        private int PopulationField;
        
        private int PopulationCapacityField;
        
        private double QuantiumField;
        
        private double QuantiumIncomeField;
        
        private double DarkMatterField;
        
        private double DarkMatterIncomeField;
        
        private int XPField;
        
        private int LevelField;
        
        private double ResearchIncomeField;
        
        private double ResearchPointsField;
        
        private System.Nullable<int> HomeworldIDField;
        
        private System.Nullable<int> PresidentVoteField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.PlayerEvent> PlayerEventsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.MothershipStructure> MothershipStructuresField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.PlayerTechSpent> PlayerTechSpentsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Fleet> FleetsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.PopulationTransport> PopulationTransportsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StarSystem> StarSystemsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObject> CelestialObjectsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> ChildPlayersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NextLevelXP {
            get {
                return this.NextLevelXPField;
            }
            set {
                if ((this.NextLevelXPField.Equals(value) != true)) {
                    this.NextLevelXPField = value;
                    this.RaisePropertyChanged("NextLevelXP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThisLevelXP {
            get {
                return this.ThisLevelXPField;
            }
            set {
                if ((this.ThisLevelXPField.Equals(value) != true)) {
                    this.ThisLevelXPField = value;
                    this.RaisePropertyChanged("ThisLevelXP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int PlayerID {
            get {
                return this.PlayerIDField;
            }
            set {
                if ((this.PlayerIDField.Equals(value) != true)) {
                    this.PlayerIDField = value;
                    this.RaisePropertyChanged("PlayerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int SpringAccountID {
            get {
                return this.SpringAccountIDField;
            }
            set {
                if ((this.SpringAccountIDField.Equals(value) != true)) {
                    this.SpringAccountIDField = value;
                    this.RaisePropertyChanged("SpringAccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string MothershipName {
            get {
                return this.MothershipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MothershipNameField, value) != true)) {
                    this.MothershipNameField = value;
                    this.RaisePropertyChanged("MothershipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Nullable<int> TransitID {
            get {
                return this.TransitIDField;
            }
            set {
                if ((this.TransitIDField.Equals(value) != true)) {
                    this.TransitIDField = value;
                    this.RaisePropertyChanged("TransitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public double Credits {
            get {
                return this.CreditsField;
            }
            set {
                if ((this.CreditsField.Equals(value) != true)) {
                    this.CreditsField = value;
                    this.RaisePropertyChanged("Credits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public double Metal {
            get {
                return this.MetalField;
            }
            set {
                if ((this.MetalField.Equals(value) != true)) {
                    this.MetalField = value;
                    this.RaisePropertyChanged("Metal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public double Food {
            get {
                return this.FoodField;
            }
            set {
                if ((this.FoodField.Equals(value) != true)) {
                    this.FoodField = value;
                    this.RaisePropertyChanged("Food");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public double MetalIncome {
            get {
                return this.MetalIncomeField;
            }
            set {
                if ((this.MetalIncomeField.Equals(value) != true)) {
                    this.MetalIncomeField = value;
                    this.RaisePropertyChanged("MetalIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public double FoodIncome {
            get {
                return this.FoodIncomeField;
            }
            set {
                if ((this.FoodIncomeField.Equals(value) != true)) {
                    this.FoodIncomeField = value;
                    this.RaisePropertyChanged("FoodIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public int Population {
            get {
                return this.PopulationField;
            }
            set {
                if ((this.PopulationField.Equals(value) != true)) {
                    this.PopulationField = value;
                    this.RaisePropertyChanged("Population");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public int PopulationCapacity {
            get {
                return this.PopulationCapacityField;
            }
            set {
                if ((this.PopulationCapacityField.Equals(value) != true)) {
                    this.PopulationCapacityField = value;
                    this.RaisePropertyChanged("PopulationCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public double Quantium {
            get {
                return this.QuantiumField;
            }
            set {
                if ((this.QuantiumField.Equals(value) != true)) {
                    this.QuantiumField = value;
                    this.RaisePropertyChanged("Quantium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public double QuantiumIncome {
            get {
                return this.QuantiumIncomeField;
            }
            set {
                if ((this.QuantiumIncomeField.Equals(value) != true)) {
                    this.QuantiumIncomeField = value;
                    this.RaisePropertyChanged("QuantiumIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public double DarkMatter {
            get {
                return this.DarkMatterField;
            }
            set {
                if ((this.DarkMatterField.Equals(value) != true)) {
                    this.DarkMatterField = value;
                    this.RaisePropertyChanged("DarkMatter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public double DarkMatterIncome {
            get {
                return this.DarkMatterIncomeField;
            }
            set {
                if ((this.DarkMatterIncomeField.Equals(value) != true)) {
                    this.DarkMatterIncomeField = value;
                    this.RaisePropertyChanged("DarkMatterIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public int XP {
            get {
                return this.XPField;
            }
            set {
                if ((this.XPField.Equals(value) != true)) {
                    this.XPField = value;
                    this.RaisePropertyChanged("XP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public double ResearchIncome {
            get {
                return this.ResearchIncomeField;
            }
            set {
                if ((this.ResearchIncomeField.Equals(value) != true)) {
                    this.ResearchIncomeField = value;
                    this.RaisePropertyChanged("ResearchIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public double ResearchPoints {
            get {
                return this.ResearchPointsField;
            }
            set {
                if ((this.ResearchPointsField.Equals(value) != true)) {
                    this.ResearchPointsField = value;
                    this.RaisePropertyChanged("ResearchPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public System.Nullable<int> HomeworldID {
            get {
                return this.HomeworldIDField;
            }
            set {
                if ((this.HomeworldIDField.Equals(value) != true)) {
                    this.HomeworldIDField = value;
                    this.RaisePropertyChanged("HomeworldID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public System.Nullable<int> PresidentVote {
            get {
                return this.PresidentVoteField;
            }
            set {
                if ((this.PresidentVoteField.Equals(value) != true)) {
                    this.PresidentVoteField = value;
                    this.RaisePropertyChanged("PresidentVote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=26)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.PlayerEvent> PlayerEvents {
            get {
                return this.PlayerEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerEventsField, value) != true)) {
                    this.PlayerEventsField = value;
                    this.RaisePropertyChanged("PlayerEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=27)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.MothershipStructure> MothershipStructures {
            get {
                return this.MothershipStructuresField;
            }
            set {
                if ((object.ReferenceEquals(this.MothershipStructuresField, value) != true)) {
                    this.MothershipStructuresField = value;
                    this.RaisePropertyChanged("MothershipStructures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=28)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.PlayerTechSpent> PlayerTechSpents {
            get {
                return this.PlayerTechSpentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerTechSpentsField, value) != true)) {
                    this.PlayerTechSpentsField = value;
                    this.RaisePropertyChanged("PlayerTechSpents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=29)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Fleet> Fleets {
            get {
                return this.FleetsField;
            }
            set {
                if ((object.ReferenceEquals(this.FleetsField, value) != true)) {
                    this.FleetsField = value;
                    this.RaisePropertyChanged("Fleets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=30)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.PopulationTransport> PopulationTransports {
            get {
                return this.PopulationTransportsField;
            }
            set {
                if ((object.ReferenceEquals(this.PopulationTransportsField, value) != true)) {
                    this.PopulationTransportsField = value;
                    this.RaisePropertyChanged("PopulationTransports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=31)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StarSystem> StarSystems {
            get {
                return this.StarSystemsField;
            }
            set {
                if ((object.ReferenceEquals(this.StarSystemsField, value) != true)) {
                    this.StarSystemsField = value;
                    this.RaisePropertyChanged("StarSystems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=32)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObject> CelestialObjects {
            get {
                return this.CelestialObjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.CelestialObjectsField, value) != true)) {
                    this.CelestialObjectsField = value;
                    this.RaisePropertyChanged("CelestialObjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=33)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> ChildPlayers {
            get {
                return this.ChildPlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildPlayersField, value) != true)) {
                    this.ChildPlayersField = value;
                    this.RaisePropertyChanged("ChildPlayers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipOption", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class ShipOption : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PlanetWars.ServiceReference.BuildResponse CanBuildField;
        
        private PlanetWars.ServiceReference.ShipType ShipTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.BuildResponse CanBuild {
            get {
                return this.CanBuildField;
            }
            set {
                if ((this.CanBuildField.Equals(value) != true)) {
                    this.CanBuildField = value;
                    this.RaisePropertyChanged("CanBuild");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.ShipType ShipType {
            get {
                return this.ShipTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipTypeField, value) != true)) {
                    this.ShipTypeField = value;
                    this.RaisePropertyChanged("ShipType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructureOption", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class StructureOption : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PlanetWars.ServiceReference.BuildResponse CanBuildField;
        
        private PlanetWars.ServiceReference.StructureType StructureTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.BuildResponse CanBuild {
            get {
                return this.CanBuildField;
            }
            set {
                if ((this.CanBuildField.Equals(value) != true)) {
                    this.CanBuildField = value;
                    this.RaisePropertyChanged("CanBuild");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.StructureType StructureType {
            get {
                return this.StructureTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StructureTypeField, value) != true)) {
                    this.StructureTypeField = value;
                    this.RaisePropertyChanged("StructureType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuildResponse", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public enum BuildResponse : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotEnoughRoomOrBuildpower = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotEnoughResources = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoesNotExist = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CelestialObjectType", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public enum CelestialObjectType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Star = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Planet = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Moon = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Asteroid = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Battle", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class Battle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BattleIDField;
        
        private System.Nullable<int> CelestialObjectIDField;
        
        private bool IsDoneField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.BattleEvent> BattleEventsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BattleID {
            get {
                return this.BattleIDField;
            }
            set {
                if ((this.BattleIDField.Equals(value) != true)) {
                    this.BattleIDField = value;
                    this.RaisePropertyChanged("BattleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CelestialObjectID {
            get {
                return this.CelestialObjectIDField;
            }
            set {
                if ((this.CelestialObjectIDField.Equals(value) != true)) {
                    this.CelestialObjectIDField = value;
                    this.RaisePropertyChanged("CelestialObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDone {
            get {
                return this.IsDoneField;
            }
            set {
                if ((this.IsDoneField.Equals(value) != true)) {
                    this.IsDoneField = value;
                    this.RaisePropertyChanged("IsDone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.BattleEvent> BattleEvents {
            get {
                return this.BattleEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.BattleEventsField, value) != true)) {
                    this.BattleEventsField = value;
                    this.RaisePropertyChanged("BattleEvents");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CelestialObjectEvent", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class CelestialObjectEvent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ObjectIDField;
        
        private int EventIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ObjectID {
            get {
                return this.ObjectIDField;
            }
            set {
                if ((this.ObjectIDField.Equals(value) != true)) {
                    this.ObjectIDField = value;
                    this.RaisePropertyChanged("ObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CelestialObjectLink", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class CelestialObjectLink : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int FirstObjectIDField;
        
        private int SecondObjectIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FirstObjectID {
            get {
                return this.FirstObjectIDField;
            }
            set {
                if ((this.FirstObjectIDField.Equals(value) != true)) {
                    this.FirstObjectIDField = value;
                    this.RaisePropertyChanged("FirstObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecondObjectID {
            get {
                return this.SecondObjectIDField;
            }
            set {
                if ((this.SecondObjectIDField.Equals(value) != true)) {
                    this.SecondObjectIDField = value;
                    this.RaisePropertyChanged("SecondObjectID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CelestialObjectStructure", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class CelestialObjectStructure : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CelestialObjectIDField;
        
        private int StructureTypeIDField;
        
        private int CountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CelestialObjectID {
            get {
                return this.CelestialObjectIDField;
            }
            set {
                if ((this.CelestialObjectIDField.Equals(value) != true)) {
                    this.CelestialObjectIDField = value;
                    this.RaisePropertyChanged("CelestialObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StructureTypeID {
            get {
                return this.StructureTypeIDField;
            }
            set {
                if ((this.StructureTypeIDField.Equals(value) != true)) {
                    this.StructureTypeIDField = value;
                    this.RaisePropertyChanged("StructureTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CelestialObjectShip", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class CelestialObjectShip : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CelestialObjectIDField;
        
        private int ShipTypeIDField;
        
        private int CountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CelestialObjectID {
            get {
                return this.CelestialObjectIDField;
            }
            set {
                if ((this.CelestialObjectIDField.Equals(value) != true)) {
                    this.CelestialObjectIDField = value;
                    this.RaisePropertyChanged("CelestialObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipTypeID {
            get {
                return this.ShipTypeIDField;
            }
            set {
                if ((this.ShipTypeIDField.Equals(value) != true)) {
                    this.ShipTypeIDField = value;
                    this.RaisePropertyChanged("ShipTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transit", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class Transit : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int TransitIDField;
        
        private System.Nullable<int> FromObjectIDField;
        
        private System.Nullable<int> ToObjectIDField;
        
        private float FromXField;
        
        private float FromYField;
        
        private float ToXField;
        
        private float ToYField;
        
        private int StartBattleTurnField;
        
        private int EndBattleTurnField;
        
        private int WarpField;
        
        private System.Nullable<int> OrbitsObjectIDField;
        
        private PlanetWars.ServiceReference.Fleet FleetsField;
        
        private PlanetWars.ServiceReference.PopulationTransport PopulationTransportsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> PlayersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransitID {
            get {
                return this.TransitIDField;
            }
            set {
                if ((this.TransitIDField.Equals(value) != true)) {
                    this.TransitIDField = value;
                    this.RaisePropertyChanged("TransitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<int> FromObjectID {
            get {
                return this.FromObjectIDField;
            }
            set {
                if ((this.FromObjectIDField.Equals(value) != true)) {
                    this.FromObjectIDField = value;
                    this.RaisePropertyChanged("FromObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<int> ToObjectID {
            get {
                return this.ToObjectIDField;
            }
            set {
                if ((this.ToObjectIDField.Equals(value) != true)) {
                    this.ToObjectIDField = value;
                    this.RaisePropertyChanged("ToObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public float FromX {
            get {
                return this.FromXField;
            }
            set {
                if ((this.FromXField.Equals(value) != true)) {
                    this.FromXField = value;
                    this.RaisePropertyChanged("FromX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public float FromY {
            get {
                return this.FromYField;
            }
            set {
                if ((this.FromYField.Equals(value) != true)) {
                    this.FromYField = value;
                    this.RaisePropertyChanged("FromY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public float ToX {
            get {
                return this.ToXField;
            }
            set {
                if ((this.ToXField.Equals(value) != true)) {
                    this.ToXField = value;
                    this.RaisePropertyChanged("ToX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public float ToY {
            get {
                return this.ToYField;
            }
            set {
                if ((this.ToYField.Equals(value) != true)) {
                    this.ToYField = value;
                    this.RaisePropertyChanged("ToY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int StartBattleTurn {
            get {
                return this.StartBattleTurnField;
            }
            set {
                if ((this.StartBattleTurnField.Equals(value) != true)) {
                    this.StartBattleTurnField = value;
                    this.RaisePropertyChanged("StartBattleTurn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int EndBattleTurn {
            get {
                return this.EndBattleTurnField;
            }
            set {
                if ((this.EndBattleTurnField.Equals(value) != true)) {
                    this.EndBattleTurnField = value;
                    this.RaisePropertyChanged("EndBattleTurn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int Warp {
            get {
                return this.WarpField;
            }
            set {
                if ((this.WarpField.Equals(value) != true)) {
                    this.WarpField = value;
                    this.RaisePropertyChanged("Warp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Nullable<int> OrbitsObjectID {
            get {
                return this.OrbitsObjectIDField;
            }
            set {
                if ((this.OrbitsObjectIDField.Equals(value) != true)) {
                    this.OrbitsObjectIDField = value;
                    this.RaisePropertyChanged("OrbitsObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public PlanetWars.ServiceReference.Fleet Fleets {
            get {
                return this.FleetsField;
            }
            set {
                if ((object.ReferenceEquals(this.FleetsField, value) != true)) {
                    this.FleetsField = value;
                    this.RaisePropertyChanged("Fleets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public PlanetWars.ServiceReference.PopulationTransport PopulationTransports {
            get {
                return this.PopulationTransportsField;
            }
            set {
                if ((object.ReferenceEquals(this.PopulationTransportsField, value) != true)) {
                    this.PopulationTransportsField = value;
                    this.RaisePropertyChanged("PopulationTransports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StarSystem", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class StarSystem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int SystemIDField;
        
        private int HomeStarIDField;
        
        private string NameField;
        
        private System.Nullable<int> PresidentIDField;
        
        private System.Nullable<int> CoalitionIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StarSystemTech> StarSystemTechesField;
        
        private PlanetWars.ServiceReference.StarSystem ChildStarSystemsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> PlayersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SystemID {
            get {
                return this.SystemIDField;
            }
            set {
                if ((this.SystemIDField.Equals(value) != true)) {
                    this.SystemIDField = value;
                    this.RaisePropertyChanged("SystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int HomeStarID {
            get {
                return this.HomeStarIDField;
            }
            set {
                if ((this.HomeStarIDField.Equals(value) != true)) {
                    this.HomeStarIDField = value;
                    this.RaisePropertyChanged("HomeStarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> PresidentID {
            get {
                return this.PresidentIDField;
            }
            set {
                if ((this.PresidentIDField.Equals(value) != true)) {
                    this.PresidentIDField = value;
                    this.RaisePropertyChanged("PresidentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<int> CoalitionID {
            get {
                return this.CoalitionIDField;
            }
            set {
                if ((this.CoalitionIDField.Equals(value) != true)) {
                    this.CoalitionIDField = value;
                    this.RaisePropertyChanged("CoalitionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StarSystemTech> StarSystemTeches {
            get {
                return this.StarSystemTechesField;
            }
            set {
                if ((object.ReferenceEquals(this.StarSystemTechesField, value) != true)) {
                    this.StarSystemTechesField = value;
                    this.RaisePropertyChanged("StarSystemTeches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public PlanetWars.ServiceReference.StarSystem ChildStarSystems {
            get {
                return this.ChildStarSystemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildStarSystemsField, value) != true)) {
                    this.ChildStarSystemsField = value;
                    this.RaisePropertyChanged("ChildStarSystems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BattleEvent", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class BattleEvent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BattleIDField;
        
        private int EventIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BattleID {
            get {
                return this.BattleIDField;
            }
            set {
                if ((this.BattleIDField.Equals(value) != true)) {
                    this.BattleIDField = value;
                    this.RaisePropertyChanged("BattleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fleet", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class Fleet : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int FleetIDField;
        
        private System.Nullable<int> OwnerIDField;
        
        private int TacticsField;
        
        private int TransitIDField;
        
        private string CustomNameField;
        
        private bool CanPresidentControlField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.FleetShip> FleetShipsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.FleetEvent> FleetEventsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FleetID {
            get {
                return this.FleetIDField;
            }
            set {
                if ((this.FleetIDField.Equals(value) != true)) {
                    this.FleetIDField = value;
                    this.RaisePropertyChanged("FleetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((this.OwnerIDField.Equals(value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Tactics {
            get {
                return this.TacticsField;
            }
            set {
                if ((this.TacticsField.Equals(value) != true)) {
                    this.TacticsField = value;
                    this.RaisePropertyChanged("Tactics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransitID {
            get {
                return this.TransitIDField;
            }
            set {
                if ((this.TransitIDField.Equals(value) != true)) {
                    this.TransitIDField = value;
                    this.RaisePropertyChanged("TransitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string CustomName {
            get {
                return this.CustomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomNameField, value) != true)) {
                    this.CustomNameField = value;
                    this.RaisePropertyChanged("CustomName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool CanPresidentControl {
            get {
                return this.CanPresidentControlField;
            }
            set {
                if ((this.CanPresidentControlField.Equals(value) != true)) {
                    this.CanPresidentControlField = value;
                    this.RaisePropertyChanged("CanPresidentControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.FleetShip> FleetShips {
            get {
                return this.FleetShipsField;
            }
            set {
                if ((object.ReferenceEquals(this.FleetShipsField, value) != true)) {
                    this.FleetShipsField = value;
                    this.RaisePropertyChanged("FleetShips");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.FleetEvent> FleetEvents {
            get {
                return this.FleetEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.FleetEventsField, value) != true)) {
                    this.FleetEventsField = value;
                    this.RaisePropertyChanged("FleetEvents");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PopulationTransport", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class PopulationTransport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PopulationTransportIDField;
        
        private int OwnerIDField;
        
        private int TransitIDField;
        
        private int CountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PopulationTransportID {
            get {
                return this.PopulationTransportIDField;
            }
            set {
                if ((this.PopulationTransportIDField.Equals(value) != true)) {
                    this.PopulationTransportIDField = value;
                    this.RaisePropertyChanged("PopulationTransportID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((this.OwnerIDField.Equals(value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int TransitID {
            get {
                return this.TransitIDField;
            }
            set {
                if ((this.TransitIDField.Equals(value) != true)) {
                    this.TransitIDField = value;
                    this.RaisePropertyChanged("TransitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetShip", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class FleetShip : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int FleetIDField;
        
        private int ShipTypeIDField;
        
        private int CountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FleetID {
            get {
                return this.FleetIDField;
            }
            set {
                if ((this.FleetIDField.Equals(value) != true)) {
                    this.FleetIDField = value;
                    this.RaisePropertyChanged("FleetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipTypeID {
            get {
                return this.ShipTypeIDField;
            }
            set {
                if ((this.ShipTypeIDField.Equals(value) != true)) {
                    this.ShipTypeIDField = value;
                    this.RaisePropertyChanged("ShipTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FleetEvent", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class FleetEvent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int FleetIDField;
        
        private int EventIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FleetID {
            get {
                return this.FleetIDField;
            }
            set {
                if ((this.FleetIDField.Equals(value) != true)) {
                    this.FleetIDField = value;
                    this.RaisePropertyChanged("FleetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerEvent", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class PlayerEvent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PlayerIDField;
        
        private int EventIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID {
            get {
                return this.PlayerIDField;
            }
            set {
                if ((this.PlayerIDField.Equals(value) != true)) {
                    this.PlayerIDField = value;
                    this.RaisePropertyChanged("PlayerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MothershipStructure", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class MothershipStructure : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PlayerIDField;
        
        private int StructureTypeIDField;
        
        private int CountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID {
            get {
                return this.PlayerIDField;
            }
            set {
                if ((this.PlayerIDField.Equals(value) != true)) {
                    this.PlayerIDField = value;
                    this.RaisePropertyChanged("PlayerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StructureTypeID {
            get {
                return this.StructureTypeIDField;
            }
            set {
                if ((this.StructureTypeIDField.Equals(value) != true)) {
                    this.StructureTypeIDField = value;
                    this.RaisePropertyChanged("StructureTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerTechSpent", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class PlayerTechSpent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PlayerIDField;
        
        private int TechIDField;
        
        private int SpentResearchField;
        
        private int SpentQuantiumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID {
            get {
                return this.PlayerIDField;
            }
            set {
                if ((this.PlayerIDField.Equals(value) != true)) {
                    this.PlayerIDField = value;
                    this.RaisePropertyChanged("PlayerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TechID {
            get {
                return this.TechIDField;
            }
            set {
                if ((this.TechIDField.Equals(value) != true)) {
                    this.TechIDField = value;
                    this.RaisePropertyChanged("TechID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int SpentResearch {
            get {
                return this.SpentResearchField;
            }
            set {
                if ((this.SpentResearchField.Equals(value) != true)) {
                    this.SpentResearchField = value;
                    this.RaisePropertyChanged("SpentResearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int SpentQuantium {
            get {
                return this.SpentQuantiumField;
            }
            set {
                if ((this.SpentQuantiumField.Equals(value) != true)) {
                    this.SpentQuantiumField = value;
                    this.RaisePropertyChanged("SpentQuantium");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StarSystemTech", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class StarSystemTech : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int StarSystemIDField;
        
        private int TechIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StarSystemID {
            get {
                return this.StarSystemIDField;
            }
            set {
                if ((this.StarSystemIDField.Equals(value) != true)) {
                    this.StarSystemIDField = value;
                    this.RaisePropertyChanged("StarSystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TechID {
            get {
                return this.TechIDField;
            }
            set {
                if ((this.TechIDField.Equals(value) != true)) {
                    this.TechIDField = value;
                    this.RaisePropertyChanged("TechID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipType", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class ShipType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ShipTypeIDField;
        
        private int Class1Field;
        
        private int LaserDamageField;
        
        private int MissileDamageField;
        
        private int BombDamageField;
        
        private string NameField;
        
        private string ShortcutField;
        
        private System.Nullable<int> NeedsTechIDField;
        
        private int MetalCostField;
        
        private int HitpointsField;
        
        private int QuantiumCostField;
        
        private int DarkMetalCostField;
        
        private bool IsInterdictorField;
        
        private bool IsStealthyField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.FleetShip> FleetShipsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectShip> CelestialObjectShipsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipTypeID {
            get {
                return this.ShipTypeIDField;
            }
            set {
                if ((this.ShipTypeIDField.Equals(value) != true)) {
                    this.ShipTypeIDField = value;
                    this.RaisePropertyChanged("ShipTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Class1 {
            get {
                return this.Class1Field;
            }
            set {
                if ((this.Class1Field.Equals(value) != true)) {
                    this.Class1Field = value;
                    this.RaisePropertyChanged("Class1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int LaserDamage {
            get {
                return this.LaserDamageField;
            }
            set {
                if ((this.LaserDamageField.Equals(value) != true)) {
                    this.LaserDamageField = value;
                    this.RaisePropertyChanged("LaserDamage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int MissileDamage {
            get {
                return this.MissileDamageField;
            }
            set {
                if ((this.MissileDamageField.Equals(value) != true)) {
                    this.MissileDamageField = value;
                    this.RaisePropertyChanged("MissileDamage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int BombDamage {
            get {
                return this.BombDamageField;
            }
            set {
                if ((this.BombDamageField.Equals(value) != true)) {
                    this.BombDamageField = value;
                    this.RaisePropertyChanged("BombDamage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Shortcut {
            get {
                return this.ShortcutField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortcutField, value) != true)) {
                    this.ShortcutField = value;
                    this.RaisePropertyChanged("Shortcut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<int> NeedsTechID {
            get {
                return this.NeedsTechIDField;
            }
            set {
                if ((this.NeedsTechIDField.Equals(value) != true)) {
                    this.NeedsTechIDField = value;
                    this.RaisePropertyChanged("NeedsTechID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int MetalCost {
            get {
                return this.MetalCostField;
            }
            set {
                if ((this.MetalCostField.Equals(value) != true)) {
                    this.MetalCostField = value;
                    this.RaisePropertyChanged("MetalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int Hitpoints {
            get {
                return this.HitpointsField;
            }
            set {
                if ((this.HitpointsField.Equals(value) != true)) {
                    this.HitpointsField = value;
                    this.RaisePropertyChanged("Hitpoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int QuantiumCost {
            get {
                return this.QuantiumCostField;
            }
            set {
                if ((this.QuantiumCostField.Equals(value) != true)) {
                    this.QuantiumCostField = value;
                    this.RaisePropertyChanged("QuantiumCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int DarkMetalCost {
            get {
                return this.DarkMetalCostField;
            }
            set {
                if ((this.DarkMetalCostField.Equals(value) != true)) {
                    this.DarkMetalCostField = value;
                    this.RaisePropertyChanged("DarkMetalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public bool IsInterdictor {
            get {
                return this.IsInterdictorField;
            }
            set {
                if ((this.IsInterdictorField.Equals(value) != true)) {
                    this.IsInterdictorField = value;
                    this.RaisePropertyChanged("IsInterdictor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public bool IsStealthy {
            get {
                return this.IsStealthyField;
            }
            set {
                if ((this.IsStealthyField.Equals(value) != true)) {
                    this.IsStealthyField = value;
                    this.RaisePropertyChanged("IsStealthy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.FleetShip> FleetShips {
            get {
                return this.FleetShipsField;
            }
            set {
                if ((object.ReferenceEquals(this.FleetShipsField, value) != true)) {
                    this.FleetShipsField = value;
                    this.RaisePropertyChanged("FleetShips");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectShip> CelestialObjectShips {
            get {
                return this.CelestialObjectShipsField;
            }
            set {
                if ((object.ReferenceEquals(this.CelestialObjectShipsField, value) != true)) {
                    this.CelestialObjectShipsField = value;
                    this.RaisePropertyChanged("CelestialObjectShips");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructureType", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class StructureType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int StructureTypeIDField;
        
        private string NameField;
        
        private int CostMetalField;
        
        private int MakesMetalField;
        
        private int MakesFoodField;
        
        private int BuildsMetalField;
        
        private int MakesPeopleField;
        
        private int NeedsPeopleField;
        
        private int StoresPeopleField;
        
        private System.Nullable<int> NeedsTechIDField;
        
        private int HitPointsField;
        
        private int MakesResearchField;
        
        private int LaserDamageField;
        
        private int MissileDamageField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectStructure> CelestialObjectStructuresField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.MothershipStructure> MothershipStructuresField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StructureTypeID {
            get {
                return this.StructureTypeIDField;
            }
            set {
                if ((this.StructureTypeIDField.Equals(value) != true)) {
                    this.StructureTypeIDField = value;
                    this.RaisePropertyChanged("StructureTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int CostMetal {
            get {
                return this.CostMetalField;
            }
            set {
                if ((this.CostMetalField.Equals(value) != true)) {
                    this.CostMetalField = value;
                    this.RaisePropertyChanged("CostMetal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int MakesMetal {
            get {
                return this.MakesMetalField;
            }
            set {
                if ((this.MakesMetalField.Equals(value) != true)) {
                    this.MakesMetalField = value;
                    this.RaisePropertyChanged("MakesMetal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int MakesFood {
            get {
                return this.MakesFoodField;
            }
            set {
                if ((this.MakesFoodField.Equals(value) != true)) {
                    this.MakesFoodField = value;
                    this.RaisePropertyChanged("MakesFood");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int BuildsMetal {
            get {
                return this.BuildsMetalField;
            }
            set {
                if ((this.BuildsMetalField.Equals(value) != true)) {
                    this.BuildsMetalField = value;
                    this.RaisePropertyChanged("BuildsMetal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int MakesPeople {
            get {
                return this.MakesPeopleField;
            }
            set {
                if ((this.MakesPeopleField.Equals(value) != true)) {
                    this.MakesPeopleField = value;
                    this.RaisePropertyChanged("MakesPeople");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int NeedsPeople {
            get {
                return this.NeedsPeopleField;
            }
            set {
                if ((this.NeedsPeopleField.Equals(value) != true)) {
                    this.NeedsPeopleField = value;
                    this.RaisePropertyChanged("NeedsPeople");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int StoresPeople {
            get {
                return this.StoresPeopleField;
            }
            set {
                if ((this.StoresPeopleField.Equals(value) != true)) {
                    this.StoresPeopleField = value;
                    this.RaisePropertyChanged("StoresPeople");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.Nullable<int> NeedsTechID {
            get {
                return this.NeedsTechIDField;
            }
            set {
                if ((this.NeedsTechIDField.Equals(value) != true)) {
                    this.NeedsTechIDField = value;
                    this.RaisePropertyChanged("NeedsTechID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int HitPoints {
            get {
                return this.HitPointsField;
            }
            set {
                if ((this.HitPointsField.Equals(value) != true)) {
                    this.HitPointsField = value;
                    this.RaisePropertyChanged("HitPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int MakesResearch {
            get {
                return this.MakesResearchField;
            }
            set {
                if ((this.MakesResearchField.Equals(value) != true)) {
                    this.MakesResearchField = value;
                    this.RaisePropertyChanged("MakesResearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public int LaserDamage {
            get {
                return this.LaserDamageField;
            }
            set {
                if ((this.LaserDamageField.Equals(value) != true)) {
                    this.LaserDamageField = value;
                    this.RaisePropertyChanged("LaserDamage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public int MissileDamage {
            get {
                return this.MissileDamageField;
            }
            set {
                if ((this.MissileDamageField.Equals(value) != true)) {
                    this.MissileDamageField = value;
                    this.RaisePropertyChanged("MissileDamage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectStructure> CelestialObjectStructures {
            get {
                return this.CelestialObjectStructuresField;
            }
            set {
                if ((object.ReferenceEquals(this.CelestialObjectStructuresField, value) != true)) {
                    this.CelestialObjectStructuresField = value;
                    this.RaisePropertyChanged("CelestialObjectStructures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.MothershipStructure> MothershipStructures {
            get {
                return this.MothershipStructuresField;
            }
            set {
                if ((object.ReferenceEquals(this.MothershipStructuresField, value) != true)) {
                    this.MothershipStructuresField = value;
                    this.RaisePropertyChanged("MothershipStructures");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipTypeCount", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class ShipTypeCount : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CountField;
        
        private int ShipTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipTypeID {
            get {
                return this.ShipTypeIDField;
            }
            set {
                if ((this.ShipTypeIDField.Equals(value) != true)) {
                    this.ShipTypeIDField = value;
                    this.RaisePropertyChanged("ShipTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfPopulationTransport_Ps_PKwJ3X", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PlanetWars.ServiceReference.TupleOfPopulationTransportCelestialObjectzDaz1WLz))]
    public partial class TupleOfPopulationTransport_Ps_PKwJ3X : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PlanetWars.ServiceReference.PopulationTransport FirstField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.PopulationTransport First {
            get {
                return this.FirstField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstField, value) != true)) {
                    this.FirstField = value;
                    this.RaisePropertyChanged("First");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfPopulationTransportCelestialObjectzDaz1WLz", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class TupleOfPopulationTransportCelestialObjectzDaz1WLz : PlanetWars.ServiceReference.TupleOfPopulationTransport_Ps_PKwJ3X {
        
        private PlanetWars.ServiceReference.CelestialObject SecondField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.CelestialObject Second {
            get {
                return this.SecondField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondField, value) != true)) {
                    this.SecondField = value;
                    this.RaisePropertyChanged("Second");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event1", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class Event1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int EventIDField;
        
        private string TextField;
        
        private int EventTypeField;
        
        private System.DateTime TimeField;
        
        private int BattleTurnField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.BattleEvent> BattleEventsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectEvent> CelestialObjectEventsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.PlayerEvent> PlayerEventsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.FleetEvent> FleetEventsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((this.EventTypeField.Equals(value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int BattleTurn {
            get {
                return this.BattleTurnField;
            }
            set {
                if ((this.BattleTurnField.Equals(value) != true)) {
                    this.BattleTurnField = value;
                    this.RaisePropertyChanged("BattleTurn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.BattleEvent> BattleEvents {
            get {
                return this.BattleEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.BattleEventsField, value) != true)) {
                    this.BattleEventsField = value;
                    this.RaisePropertyChanged("BattleEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectEvent> CelestialObjectEvents {
            get {
                return this.CelestialObjectEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.CelestialObjectEventsField, value) != true)) {
                    this.CelestialObjectEventsField = value;
                    this.RaisePropertyChanged("CelestialObjectEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.PlayerEvent> PlayerEvents {
            get {
                return this.PlayerEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerEventsField, value) != true)) {
                    this.PlayerEventsField = value;
                    this.RaisePropertyChanged("PlayerEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.FleetEvent> FleetEvents {
            get {
                return this.FleetEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.FleetEventsField, value) != true)) {
                    this.FleetEventsField = value;
                    this.RaisePropertyChanged("FleetEvents");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StarMap", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class StarMap : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObject> CelestialObjectsField;
        
        private PlanetWars.ServiceReference.Config ConfigField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectLink> ObjectLinksField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> PlayersField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StarSystem> StarSystemsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> TransitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObject> CelestialObjects {
            get {
                return this.CelestialObjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.CelestialObjectsField, value) != true)) {
                    this.CelestialObjectsField = value;
                    this.RaisePropertyChanged("CelestialObjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.Config Config {
            get {
                return this.ConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigField, value) != true)) {
                    this.ConfigField = value;
                    this.RaisePropertyChanged("Config");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.CelestialObjectLink> ObjectLinks {
            get {
                return this.ObjectLinksField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectLinksField, value) != true)) {
                    this.ObjectLinksField = value;
                    this.RaisePropertyChanged("ObjectLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StarSystem> StarSystems {
            get {
                return this.StarSystemsField;
            }
            set {
                if ((object.ReferenceEquals(this.StarSystemsField, value) != true)) {
                    this.StarSystemsField = value;
                    this.RaisePropertyChanged("StarSystems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> Transits {
            get {
                return this.TransitsField;
            }
            set {
                if ((object.ReferenceEquals(this.TransitsField, value) != true)) {
                    this.TransitsField = value;
                    this.RaisePropertyChanged("Transits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Config", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class Config : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int GameSecondField;
        
        private System.Nullable<System.DateTime> StartedField;
        
        private int CombatTurnField;
        
        private System.Nullable<System.DateTime> StartOnField;
        
        private int GameIDField;
        
        private int SecondsPerTurnField;
        
        private int ResourceTickField;
        
        private int PopulationTickField;
        
        private int WarpDistanceField;
        
        private int DirtySecondField;
        
        private System.Nullable<System.DateTime> TurnStartedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameSecond {
            get {
                return this.GameSecondField;
            }
            set {
                if ((this.GameSecondField.Equals(value) != true)) {
                    this.GameSecondField = value;
                    this.RaisePropertyChanged("GameSecond");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Started {
            get {
                return this.StartedField;
            }
            set {
                if ((this.StartedField.Equals(value) != true)) {
                    this.StartedField = value;
                    this.RaisePropertyChanged("Started");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int CombatTurn {
            get {
                return this.CombatTurnField;
            }
            set {
                if ((this.CombatTurnField.Equals(value) != true)) {
                    this.CombatTurnField = value;
                    this.RaisePropertyChanged("CombatTurn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<System.DateTime> StartOn {
            get {
                return this.StartOnField;
            }
            set {
                if ((this.StartOnField.Equals(value) != true)) {
                    this.StartOnField = value;
                    this.RaisePropertyChanged("StartOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int GameID {
            get {
                return this.GameIDField;
            }
            set {
                if ((this.GameIDField.Equals(value) != true)) {
                    this.GameIDField = value;
                    this.RaisePropertyChanged("GameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int SecondsPerTurn {
            get {
                return this.SecondsPerTurnField;
            }
            set {
                if ((this.SecondsPerTurnField.Equals(value) != true)) {
                    this.SecondsPerTurnField = value;
                    this.RaisePropertyChanged("SecondsPerTurn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int ResourceTick {
            get {
                return this.ResourceTickField;
            }
            set {
                if ((this.ResourceTickField.Equals(value) != true)) {
                    this.ResourceTickField = value;
                    this.RaisePropertyChanged("ResourceTick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int PopulationTick {
            get {
                return this.PopulationTickField;
            }
            set {
                if ((this.PopulationTickField.Equals(value) != true)) {
                    this.PopulationTickField = value;
                    this.RaisePropertyChanged("PopulationTick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int WarpDistance {
            get {
                return this.WarpDistanceField;
            }
            set {
                if ((this.WarpDistanceField.Equals(value) != true)) {
                    this.WarpDistanceField = value;
                    this.RaisePropertyChanged("WarpDistance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int DirtySecond {
            get {
                return this.DirtySecondField;
            }
            set {
                if ((this.DirtySecondField.Equals(value) != true)) {
                    this.DirtySecondField = value;
                    this.RaisePropertyChanged("DirtySecond");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Nullable<System.DateTime> TurnStarted {
            get {
                return this.TurnStartedField;
            }
            set {
                if ((this.TurnStartedField.Equals(value) != true)) {
                    this.TurnStartedField = value;
                    this.RaisePropertyChanged("TurnStarted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invariants", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class Invariants : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipType> ShipTypesField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureType> StructureTypesField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Tech> TechnologiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipType> ShipTypes {
            get {
                return this.ShipTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipTypesField, value) != true)) {
                    this.ShipTypesField = value;
                    this.RaisePropertyChanged("ShipTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureType> StructureTypes {
            get {
                return this.StructureTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.StructureTypesField, value) != true)) {
                    this.StructureTypesField = value;
                    this.RaisePropertyChanged("StructureTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Tech> Technologies {
            get {
                return this.TechnologiesField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnologiesField, value) != true)) {
                    this.TechnologiesField = value;
                    this.RaisePropertyChanged("Technologies");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tech", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class Tech : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int TechIDField;
        
        private string NameField;
        
        private string DescriptionField;
        
        private System.Nullable<int> NeedsTechIDField;
        
        private int CostResearchField;
        
        private int CostQuantiumField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StarSystemTech> StarSystemTechesField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.PlayerTechSpent> PlayerTechSpentsField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureType> StructureTypesField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipType> ShipTypesField;
        
        private System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Tech> TechesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TechID {
            get {
                return this.TechIDField;
            }
            set {
                if ((this.TechIDField.Equals(value) != true)) {
                    this.TechIDField = value;
                    this.RaisePropertyChanged("TechID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> NeedsTechID {
            get {
                return this.NeedsTechIDField;
            }
            set {
                if ((this.NeedsTechIDField.Equals(value) != true)) {
                    this.NeedsTechIDField = value;
                    this.RaisePropertyChanged("NeedsTechID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int CostResearch {
            get {
                return this.CostResearchField;
            }
            set {
                if ((this.CostResearchField.Equals(value) != true)) {
                    this.CostResearchField = value;
                    this.RaisePropertyChanged("CostResearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int CostQuantium {
            get {
                return this.CostQuantiumField;
            }
            set {
                if ((this.CostQuantiumField.Equals(value) != true)) {
                    this.CostQuantiumField = value;
                    this.RaisePropertyChanged("CostQuantium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StarSystemTech> StarSystemTeches {
            get {
                return this.StarSystemTechesField;
            }
            set {
                if ((object.ReferenceEquals(this.StarSystemTechesField, value) != true)) {
                    this.StarSystemTechesField = value;
                    this.RaisePropertyChanged("StarSystemTeches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.PlayerTechSpent> PlayerTechSpents {
            get {
                return this.PlayerTechSpentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerTechSpentsField, value) != true)) {
                    this.PlayerTechSpentsField = value;
                    this.RaisePropertyChanged("PlayerTechSpents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureType> StructureTypes {
            get {
                return this.StructureTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.StructureTypesField, value) != true)) {
                    this.StructureTypesField = value;
                    this.RaisePropertyChanged("StructureTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipType> ShipTypes {
            get {
                return this.ShipTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipTypesField, value) != true)) {
                    this.ShipTypesField = value;
                    this.RaisePropertyChanged("ShipTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Tech> Teches {
            get {
                return this.TechesField;
            }
            set {
                if ((object.ReferenceEquals(this.TechesField, value) != true)) {
                    this.TechesField = value;
                    this.RaisePropertyChanged("Teches");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResponse", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public enum LoginResponse : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidPassword = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidLogin = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unregistered = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfPlayer_Ps_PKwJ3X", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PlanetWars.ServiceReference.TupleOfPlayerCelestialObjectzDaz1WLz))]
    public partial class TupleOfPlayer_Ps_PKwJ3X : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PlanetWars.ServiceReference.Player FirstField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.Player First {
            get {
                return this.FirstField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstField, value) != true)) {
                    this.FirstField = value;
                    this.RaisePropertyChanged("First");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfPlayerCelestialObjectzDaz1WLz", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public partial class TupleOfPlayerCelestialObjectzDaz1WLz : PlanetWars.ServiceReference.TupleOfPlayer_Ps_PKwJ3X {
        
        private PlanetWars.ServiceReference.CelestialObject SecondField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetWars.ServiceReference.CelestialObject Second {
            get {
                return this.SecondField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondField, value) != true)) {
                    this.SecondField = value;
                    this.RaisePropertyChanged("Second");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterResponse", Namespace="http://schemas.datacontract.org/2004/07/ServiceData")]
    public enum RegisterResponse : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyRegistered = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsSmurf = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotValidSpringLogin = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotValidSpringPassword = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IPlanetWarsService")]
    public interface IPlanetWarsService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/BuildMothershipModule", ReplyAction="http://tempuri.org/IPlanetWarsService/BuildMothershipModuleResponse")]
        System.IAsyncResult BeginBuildMothershipModule(string playerName, string password, int structureType, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.BodyResponse EndBuildMothershipModule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/BuildShip", ReplyAction="http://tempuri.org/IPlanetWarsService/BuildShipResponse")]
        System.IAsyncResult BeginBuildShip(string playerName, string password, int celestialObjectID, int shipType, int count, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.BodyResponse EndBuildShip(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/BuildStructure", ReplyAction="http://tempuri.org/IPlanetWarsService/BuildStructureResponse")]
        System.IAsyncResult BeginBuildStructure(string playerName, string password, int celestialObjectID, int structureTypeID, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.BodyResponse EndBuildStructure(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/CreateFleet", ReplyAction="http://tempuri.org/IPlanetWarsService/CreateFleetResponse")]
        System.IAsyncResult BeginCreateFleet(string playerName, string password, int bodyID, System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount> fleetShips, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.Fleet EndCreateFleet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/CreatePopulationTransport", ReplyAction="http://tempuri.org/IPlanetWarsService/CreatePopulationTransportResponse")]
        System.IAsyncResult BeginCreatePopulationTransport(string playerName, string password, int fromBodyID, int toBodyID, int count, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.TupleOfPopulationTransportCelestialObjectzDaz1WLz EndCreatePopulationTransport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/FakeTurn", ReplyAction="http://tempuri.org/IPlanetWarsService/FakeTurnResponse")]
        System.IAsyncResult BeginFakeTurn(int count, System.AsyncCallback callback, object asyncState);
        
        void EndFakeTurn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetBattleEvents", ReplyAction="http://tempuri.org/IPlanetWarsService/GetBattleEventsResponse")]
        System.IAsyncResult BeginGetBattleEvents(int battleID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> EndGetBattleEvents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetBodyEvents", ReplyAction="http://tempuri.org/IPlanetWarsService/GetBodyEventsResponse")]
        System.IAsyncResult BeginGetBodyEvents(int bodyID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> EndGetBodyEvents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetBodyOptions", ReplyAction="http://tempuri.org/IPlanetWarsService/GetBodyOptionsResponse")]
        System.IAsyncResult BeginGetBodyOptions(string playerName, string password, int bodyID, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.BodyResponse EndGetBodyOptions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetLoginHint", ReplyAction="http://tempuri.org/IPlanetWarsService/GetLoginHintResponse")]
        System.IAsyncResult BeginGetLoginHint(System.AsyncCallback callback, object asyncState);
        
        string EndGetLoginHint(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetMapData", ReplyAction="http://tempuri.org/IPlanetWarsService/GetMapDataResponse")]
        System.IAsyncResult BeginGetMapData(string playerName, string password, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.StarMap EndGetMapData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetMotherhipModuleBuildOptions", ReplyAction="http://tempuri.org/IPlanetWarsService/GetMotherhipModuleBuildOptionsResponse")]
        System.IAsyncResult BeginGetMotherhipModuleBuildOptions(string playerName, string password, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureOption> EndGetMotherhipModuleBuildOptions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetInvariants", ReplyAction="http://tempuri.org/IPlanetWarsService/GetInvariantsResponse")]
        System.IAsyncResult BeginGetInvariants(System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.Invariants EndGetInvariants(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetPlayerData", ReplyAction="http://tempuri.org/IPlanetWarsService/GetPlayerDataResponse")]
        System.IAsyncResult BeginGetPlayerData(string playerName, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.Player EndGetPlayerData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetPlayerEvents", ReplyAction="http://tempuri.org/IPlanetWarsService/GetPlayerEventsResponse")]
        System.IAsyncResult BeginGetPlayerEvents(int playerID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> EndGetPlayerEvents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetPlayerList", ReplyAction="http://tempuri.org/IPlanetWarsService/GetPlayerListResponse")]
        System.IAsyncResult BeginGetPlayerList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> EndGetPlayerList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetStarSystemEvents", ReplyAction="http://tempuri.org/IPlanetWarsService/GetStarSystemEventsResponse")]
        System.IAsyncResult BeginGetStarSystemEvents(int starSystemID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> EndGetStarSystemEvents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetTransits", ReplyAction="http://tempuri.org/IPlanetWarsService/GetTransitsResponse")]
        System.IAsyncResult BeginGetTransits(string playerName, string password, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> EndGetTransits(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/Login", ReplyAction="http://tempuri.org/IPlanetWarsService/LoginResponse")]
        System.IAsyncResult BeginLogin(string login, string password, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.LoginResponse EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/ModifyFleet", ReplyAction="http://tempuri.org/IPlanetWarsService/ModifyFleetResponse")]
        System.IAsyncResult BeginModifyFleet(string playerName, string password, int fleetID, System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount> fleetShips, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.Fleet EndModifyFleet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/OrderFleet", ReplyAction="http://tempuri.org/IPlanetWarsService/OrderFleetResponse")]
        System.IAsyncResult BeginOrderFleet(string playerName, string password, int fleetID, int toBodyID, int futureOffset, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.Fleet EndOrderFleet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/OrderMothership", ReplyAction="http://tempuri.org/IPlanetWarsService/OrderMothershipResponse")]
        System.IAsyncResult BeginOrderMothership(string playerName, string password, int toBodyID, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.TupleOfPlayerCelestialObjectzDaz1WLz EndOrderMothership(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/Register", ReplyAction="http://tempuri.org/IPlanetWarsService/RegisterResponse")]
        System.IAsyncResult BeginRegister(string login, string password, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.RegisterResponse EndRegister(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/SellMotherhipModule", ReplyAction="http://tempuri.org/IPlanetWarsService/SellMotherhipModuleResponse")]
        System.IAsyncResult BeginSellMotherhipModule(string playerName, string password, int structureTypeID, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.BodyResponse EndSellMotherhipModule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/SellStructure", ReplyAction="http://tempuri.org/IPlanetWarsService/SellStructureResponse")]
        System.IAsyncResult BeginSellStructure(string playerName, string password, int celestialObjectID, int structureTypeID, System.AsyncCallback callback, object asyncState);
        
        PlanetWars.ServiceReference.BodyResponse EndSellStructure(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlanetWarsService/GetDirtyGameSecond", ReplyAction="http://tempuri.org/IPlanetWarsService/GetDirtyGameSecondResponse")]
        System.IAsyncResult BeginGetDirtyGameSecond(System.AsyncCallback callback, object asyncState);
        
        int EndGetDirtyGameSecond(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlanetWarsServiceChannel : PlanetWars.ServiceReference.IPlanetWarsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BuildMothershipModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BuildMothershipModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.BodyResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.BodyResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BuildShipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BuildShipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.BodyResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.BodyResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BuildStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BuildStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.BodyResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.BodyResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateFleetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateFleetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.Fleet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.Fleet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreatePopulationTransportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreatePopulationTransportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.TupleOfPopulationTransportCelestialObjectzDaz1WLz Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.TupleOfPopulationTransportCelestialObjectzDaz1WLz)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBattleEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBattleEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBodyEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBodyEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBodyOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBodyOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.BodyResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.BodyResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoginHintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoginHintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMapDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMapDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.StarMap Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.StarMap)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMotherhipModuleBuildOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMotherhipModuleBuildOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureOption> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureOption>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInvariantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInvariantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.Invariants Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.Invariants)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.Player Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.Player)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayerEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayerEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPlayerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPlayerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStarSystemEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStarSystemEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTransitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTransitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.LoginResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.LoginResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModifyFleetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ModifyFleetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.Fleet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.Fleet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderFleetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OrderFleetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.Fleet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.Fleet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderMothershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OrderMothershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.TupleOfPlayerCelestialObjectzDaz1WLz Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.TupleOfPlayerCelestialObjectzDaz1WLz)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.RegisterResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.RegisterResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SellMotherhipModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SellMotherhipModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.BodyResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.BodyResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SellStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SellStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlanetWars.ServiceReference.BodyResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlanetWars.ServiceReference.BodyResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDirtyGameSecondCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDirtyGameSecondCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlanetWarsServiceClient : System.ServiceModel.ClientBase<PlanetWars.ServiceReference.IPlanetWarsService>, PlanetWars.ServiceReference.IPlanetWarsService {
        
        private BeginOperationDelegate onBeginBuildMothershipModuleDelegate;
        
        private EndOperationDelegate onEndBuildMothershipModuleDelegate;
        
        private System.Threading.SendOrPostCallback onBuildMothershipModuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginBuildShipDelegate;
        
        private EndOperationDelegate onEndBuildShipDelegate;
        
        private System.Threading.SendOrPostCallback onBuildShipCompletedDelegate;
        
        private BeginOperationDelegate onBeginBuildStructureDelegate;
        
        private EndOperationDelegate onEndBuildStructureDelegate;
        
        private System.Threading.SendOrPostCallback onBuildStructureCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateFleetDelegate;
        
        private EndOperationDelegate onEndCreateFleetDelegate;
        
        private System.Threading.SendOrPostCallback onCreateFleetCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreatePopulationTransportDelegate;
        
        private EndOperationDelegate onEndCreatePopulationTransportDelegate;
        
        private System.Threading.SendOrPostCallback onCreatePopulationTransportCompletedDelegate;
        
        private BeginOperationDelegate onBeginFakeTurnDelegate;
        
        private EndOperationDelegate onEndFakeTurnDelegate;
        
        private System.Threading.SendOrPostCallback onFakeTurnCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBattleEventsDelegate;
        
        private EndOperationDelegate onEndGetBattleEventsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBattleEventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBodyEventsDelegate;
        
        private EndOperationDelegate onEndGetBodyEventsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBodyEventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBodyOptionsDelegate;
        
        private EndOperationDelegate onEndGetBodyOptionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBodyOptionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoginHintDelegate;
        
        private EndOperationDelegate onEndGetLoginHintDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoginHintCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMapDataDelegate;
        
        private EndOperationDelegate onEndGetMapDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetMapDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMotherhipModuleBuildOptionsDelegate;
        
        private EndOperationDelegate onEndGetMotherhipModuleBuildOptionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMotherhipModuleBuildOptionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInvariantsDelegate;
        
        private EndOperationDelegate onEndGetInvariantsDelegate;
        
        private System.Threading.SendOrPostCallback onGetInvariantsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayerDataDelegate;
        
        private EndOperationDelegate onEndGetPlayerDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayerDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayerEventsDelegate;
        
        private EndOperationDelegate onEndGetPlayerEventsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayerEventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPlayerListDelegate;
        
        private EndOperationDelegate onEndGetPlayerListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPlayerListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStarSystemEventsDelegate;
        
        private EndOperationDelegate onEndGetStarSystemEventsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStarSystemEventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTransitsDelegate;
        
        private EndOperationDelegate onEndGetTransitsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTransitsCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginModifyFleetDelegate;
        
        private EndOperationDelegate onEndModifyFleetDelegate;
        
        private System.Threading.SendOrPostCallback onModifyFleetCompletedDelegate;
        
        private BeginOperationDelegate onBeginOrderFleetDelegate;
        
        private EndOperationDelegate onEndOrderFleetDelegate;
        
        private System.Threading.SendOrPostCallback onOrderFleetCompletedDelegate;
        
        private BeginOperationDelegate onBeginOrderMothershipDelegate;
        
        private EndOperationDelegate onEndOrderMothershipDelegate;
        
        private System.Threading.SendOrPostCallback onOrderMothershipCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterDelegate;
        
        private EndOperationDelegate onEndRegisterDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginSellMotherhipModuleDelegate;
        
        private EndOperationDelegate onEndSellMotherhipModuleDelegate;
        
        private System.Threading.SendOrPostCallback onSellMotherhipModuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginSellStructureDelegate;
        
        private EndOperationDelegate onEndSellStructureDelegate;
        
        private System.Threading.SendOrPostCallback onSellStructureCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDirtyGameSecondDelegate;
        
        private EndOperationDelegate onEndGetDirtyGameSecondDelegate;
        
        private System.Threading.SendOrPostCallback onGetDirtyGameSecondCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PlanetWarsServiceClient() {
        }
        
        public PlanetWarsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlanetWarsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlanetWarsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlanetWarsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<BuildMothershipModuleCompletedEventArgs> BuildMothershipModuleCompleted;
        
        public event System.EventHandler<BuildShipCompletedEventArgs> BuildShipCompleted;
        
        public event System.EventHandler<BuildStructureCompletedEventArgs> BuildStructureCompleted;
        
        public event System.EventHandler<CreateFleetCompletedEventArgs> CreateFleetCompleted;
        
        public event System.EventHandler<CreatePopulationTransportCompletedEventArgs> CreatePopulationTransportCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> FakeTurnCompleted;
        
        public event System.EventHandler<GetBattleEventsCompletedEventArgs> GetBattleEventsCompleted;
        
        public event System.EventHandler<GetBodyEventsCompletedEventArgs> GetBodyEventsCompleted;
        
        public event System.EventHandler<GetBodyOptionsCompletedEventArgs> GetBodyOptionsCompleted;
        
        public event System.EventHandler<GetLoginHintCompletedEventArgs> GetLoginHintCompleted;
        
        public event System.EventHandler<GetMapDataCompletedEventArgs> GetMapDataCompleted;
        
        public event System.EventHandler<GetMotherhipModuleBuildOptionsCompletedEventArgs> GetMotherhipModuleBuildOptionsCompleted;
        
        public event System.EventHandler<GetInvariantsCompletedEventArgs> GetInvariantsCompleted;
        
        public event System.EventHandler<GetPlayerDataCompletedEventArgs> GetPlayerDataCompleted;
        
        public event System.EventHandler<GetPlayerEventsCompletedEventArgs> GetPlayerEventsCompleted;
        
        public event System.EventHandler<GetPlayerListCompletedEventArgs> GetPlayerListCompleted;
        
        public event System.EventHandler<GetStarSystemEventsCompletedEventArgs> GetStarSystemEventsCompleted;
        
        public event System.EventHandler<GetTransitsCompletedEventArgs> GetTransitsCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<ModifyFleetCompletedEventArgs> ModifyFleetCompleted;
        
        public event System.EventHandler<OrderFleetCompletedEventArgs> OrderFleetCompleted;
        
        public event System.EventHandler<OrderMothershipCompletedEventArgs> OrderMothershipCompleted;
        
        public event System.EventHandler<RegisterCompletedEventArgs> RegisterCompleted;
        
        public event System.EventHandler<SellMotherhipModuleCompletedEventArgs> SellMotherhipModuleCompleted;
        
        public event System.EventHandler<SellStructureCompletedEventArgs> SellStructureCompleted;
        
        public event System.EventHandler<GetDirtyGameSecondCompletedEventArgs> GetDirtyGameSecondCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginBuildMothershipModule(string playerName, string password, int structureType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBuildMothershipModule(playerName, password, structureType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.BodyResponse PlanetWars.ServiceReference.IPlanetWarsService.EndBuildMothershipModule(System.IAsyncResult result) {
            return base.Channel.EndBuildMothershipModule(result);
        }
        
        private System.IAsyncResult OnBeginBuildMothershipModule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int structureType = ((int)(inValues[2]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginBuildMothershipModule(playerName, password, structureType, callback, asyncState);
        }
        
        private object[] OnEndBuildMothershipModule(System.IAsyncResult result) {
            PlanetWars.ServiceReference.BodyResponse retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndBuildMothershipModule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBuildMothershipModuleCompleted(object state) {
            if ((this.BuildMothershipModuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BuildMothershipModuleCompleted(this, new BuildMothershipModuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BuildMothershipModuleAsync(string playerName, string password, int structureType) {
            this.BuildMothershipModuleAsync(playerName, password, structureType, null);
        }
        
        public void BuildMothershipModuleAsync(string playerName, string password, int structureType, object userState) {
            if ((this.onBeginBuildMothershipModuleDelegate == null)) {
                this.onBeginBuildMothershipModuleDelegate = new BeginOperationDelegate(this.OnBeginBuildMothershipModule);
            }
            if ((this.onEndBuildMothershipModuleDelegate == null)) {
                this.onEndBuildMothershipModuleDelegate = new EndOperationDelegate(this.OnEndBuildMothershipModule);
            }
            if ((this.onBuildMothershipModuleCompletedDelegate == null)) {
                this.onBuildMothershipModuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBuildMothershipModuleCompleted);
            }
            base.InvokeAsync(this.onBeginBuildMothershipModuleDelegate, new object[] {
                        playerName,
                        password,
                        structureType}, this.onEndBuildMothershipModuleDelegate, this.onBuildMothershipModuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginBuildShip(string playerName, string password, int celestialObjectID, int shipType, int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBuildShip(playerName, password, celestialObjectID, shipType, count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.BodyResponse PlanetWars.ServiceReference.IPlanetWarsService.EndBuildShip(System.IAsyncResult result) {
            return base.Channel.EndBuildShip(result);
        }
        
        private System.IAsyncResult OnBeginBuildShip(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int celestialObjectID = ((int)(inValues[2]));
            int shipType = ((int)(inValues[3]));
            int count = ((int)(inValues[4]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginBuildShip(playerName, password, celestialObjectID, shipType, count, callback, asyncState);
        }
        
        private object[] OnEndBuildShip(System.IAsyncResult result) {
            PlanetWars.ServiceReference.BodyResponse retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndBuildShip(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBuildShipCompleted(object state) {
            if ((this.BuildShipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BuildShipCompleted(this, new BuildShipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BuildShipAsync(string playerName, string password, int celestialObjectID, int shipType, int count) {
            this.BuildShipAsync(playerName, password, celestialObjectID, shipType, count, null);
        }
        
        public void BuildShipAsync(string playerName, string password, int celestialObjectID, int shipType, int count, object userState) {
            if ((this.onBeginBuildShipDelegate == null)) {
                this.onBeginBuildShipDelegate = new BeginOperationDelegate(this.OnBeginBuildShip);
            }
            if ((this.onEndBuildShipDelegate == null)) {
                this.onEndBuildShipDelegate = new EndOperationDelegate(this.OnEndBuildShip);
            }
            if ((this.onBuildShipCompletedDelegate == null)) {
                this.onBuildShipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBuildShipCompleted);
            }
            base.InvokeAsync(this.onBeginBuildShipDelegate, new object[] {
                        playerName,
                        password,
                        celestialObjectID,
                        shipType,
                        count}, this.onEndBuildShipDelegate, this.onBuildShipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginBuildStructure(string playerName, string password, int celestialObjectID, int structureTypeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBuildStructure(playerName, password, celestialObjectID, structureTypeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.BodyResponse PlanetWars.ServiceReference.IPlanetWarsService.EndBuildStructure(System.IAsyncResult result) {
            return base.Channel.EndBuildStructure(result);
        }
        
        private System.IAsyncResult OnBeginBuildStructure(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int celestialObjectID = ((int)(inValues[2]));
            int structureTypeID = ((int)(inValues[3]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginBuildStructure(playerName, password, celestialObjectID, structureTypeID, callback, asyncState);
        }
        
        private object[] OnEndBuildStructure(System.IAsyncResult result) {
            PlanetWars.ServiceReference.BodyResponse retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndBuildStructure(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBuildStructureCompleted(object state) {
            if ((this.BuildStructureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BuildStructureCompleted(this, new BuildStructureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BuildStructureAsync(string playerName, string password, int celestialObjectID, int structureTypeID) {
            this.BuildStructureAsync(playerName, password, celestialObjectID, structureTypeID, null);
        }
        
        public void BuildStructureAsync(string playerName, string password, int celestialObjectID, int structureTypeID, object userState) {
            if ((this.onBeginBuildStructureDelegate == null)) {
                this.onBeginBuildStructureDelegate = new BeginOperationDelegate(this.OnBeginBuildStructure);
            }
            if ((this.onEndBuildStructureDelegate == null)) {
                this.onEndBuildStructureDelegate = new EndOperationDelegate(this.OnEndBuildStructure);
            }
            if ((this.onBuildStructureCompletedDelegate == null)) {
                this.onBuildStructureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBuildStructureCompleted);
            }
            base.InvokeAsync(this.onBeginBuildStructureDelegate, new object[] {
                        playerName,
                        password,
                        celestialObjectID,
                        structureTypeID}, this.onEndBuildStructureDelegate, this.onBuildStructureCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginCreateFleet(string playerName, string password, int bodyID, System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount> fleetShips, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateFleet(playerName, password, bodyID, fleetShips, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.Fleet PlanetWars.ServiceReference.IPlanetWarsService.EndCreateFleet(System.IAsyncResult result) {
            return base.Channel.EndCreateFleet(result);
        }
        
        private System.IAsyncResult OnBeginCreateFleet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int bodyID = ((int)(inValues[2]));
            System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount> fleetShips = ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount>)(inValues[3]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginCreateFleet(playerName, password, bodyID, fleetShips, callback, asyncState);
        }
        
        private object[] OnEndCreateFleet(System.IAsyncResult result) {
            PlanetWars.ServiceReference.Fleet retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndCreateFleet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateFleetCompleted(object state) {
            if ((this.CreateFleetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateFleetCompleted(this, new CreateFleetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateFleetAsync(string playerName, string password, int bodyID, System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount> fleetShips) {
            this.CreateFleetAsync(playerName, password, bodyID, fleetShips, null);
        }
        
        public void CreateFleetAsync(string playerName, string password, int bodyID, System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount> fleetShips, object userState) {
            if ((this.onBeginCreateFleetDelegate == null)) {
                this.onBeginCreateFleetDelegate = new BeginOperationDelegate(this.OnBeginCreateFleet);
            }
            if ((this.onEndCreateFleetDelegate == null)) {
                this.onEndCreateFleetDelegate = new EndOperationDelegate(this.OnEndCreateFleet);
            }
            if ((this.onCreateFleetCompletedDelegate == null)) {
                this.onCreateFleetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateFleetCompleted);
            }
            base.InvokeAsync(this.onBeginCreateFleetDelegate, new object[] {
                        playerName,
                        password,
                        bodyID,
                        fleetShips}, this.onEndCreateFleetDelegate, this.onCreateFleetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginCreatePopulationTransport(string playerName, string password, int fromBodyID, int toBodyID, int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreatePopulationTransport(playerName, password, fromBodyID, toBodyID, count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.TupleOfPopulationTransportCelestialObjectzDaz1WLz PlanetWars.ServiceReference.IPlanetWarsService.EndCreatePopulationTransport(System.IAsyncResult result) {
            return base.Channel.EndCreatePopulationTransport(result);
        }
        
        private System.IAsyncResult OnBeginCreatePopulationTransport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int fromBodyID = ((int)(inValues[2]));
            int toBodyID = ((int)(inValues[3]));
            int count = ((int)(inValues[4]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginCreatePopulationTransport(playerName, password, fromBodyID, toBodyID, count, callback, asyncState);
        }
        
        private object[] OnEndCreatePopulationTransport(System.IAsyncResult result) {
            PlanetWars.ServiceReference.TupleOfPopulationTransportCelestialObjectzDaz1WLz retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndCreatePopulationTransport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreatePopulationTransportCompleted(object state) {
            if ((this.CreatePopulationTransportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreatePopulationTransportCompleted(this, new CreatePopulationTransportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreatePopulationTransportAsync(string playerName, string password, int fromBodyID, int toBodyID, int count) {
            this.CreatePopulationTransportAsync(playerName, password, fromBodyID, toBodyID, count, null);
        }
        
        public void CreatePopulationTransportAsync(string playerName, string password, int fromBodyID, int toBodyID, int count, object userState) {
            if ((this.onBeginCreatePopulationTransportDelegate == null)) {
                this.onBeginCreatePopulationTransportDelegate = new BeginOperationDelegate(this.OnBeginCreatePopulationTransport);
            }
            if ((this.onEndCreatePopulationTransportDelegate == null)) {
                this.onEndCreatePopulationTransportDelegate = new EndOperationDelegate(this.OnEndCreatePopulationTransport);
            }
            if ((this.onCreatePopulationTransportCompletedDelegate == null)) {
                this.onCreatePopulationTransportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreatePopulationTransportCompleted);
            }
            base.InvokeAsync(this.onBeginCreatePopulationTransportDelegate, new object[] {
                        playerName,
                        password,
                        fromBodyID,
                        toBodyID,
                        count}, this.onEndCreatePopulationTransportDelegate, this.onCreatePopulationTransportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginFakeTurn(int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFakeTurn(count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PlanetWars.ServiceReference.IPlanetWarsService.EndFakeTurn(System.IAsyncResult result) {
            base.Channel.EndFakeTurn(result);
        }
        
        private System.IAsyncResult OnBeginFakeTurn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int count = ((int)(inValues[0]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginFakeTurn(count, callback, asyncState);
        }
        
        private object[] OnEndFakeTurn(System.IAsyncResult result) {
            ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndFakeTurn(result);
            return null;
        }
        
        private void OnFakeTurnCompleted(object state) {
            if ((this.FakeTurnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FakeTurnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FakeTurnAsync(int count) {
            this.FakeTurnAsync(count, null);
        }
        
        public void FakeTurnAsync(int count, object userState) {
            if ((this.onBeginFakeTurnDelegate == null)) {
                this.onBeginFakeTurnDelegate = new BeginOperationDelegate(this.OnBeginFakeTurn);
            }
            if ((this.onEndFakeTurnDelegate == null)) {
                this.onEndFakeTurnDelegate = new EndOperationDelegate(this.OnEndFakeTurn);
            }
            if ((this.onFakeTurnCompletedDelegate == null)) {
                this.onFakeTurnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFakeTurnCompleted);
            }
            base.InvokeAsync(this.onBeginFakeTurnDelegate, new object[] {
                        count}, this.onEndFakeTurnDelegate, this.onFakeTurnCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetBattleEvents(int battleID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBattleEvents(battleID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> PlanetWars.ServiceReference.IPlanetWarsService.EndGetBattleEvents(System.IAsyncResult result) {
            return base.Channel.EndGetBattleEvents(result);
        }
        
        private System.IAsyncResult OnBeginGetBattleEvents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int battleID = ((int)(inValues[0]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetBattleEvents(battleID, callback, asyncState);
        }
        
        private object[] OnEndGetBattleEvents(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetBattleEvents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBattleEventsCompleted(object state) {
            if ((this.GetBattleEventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBattleEventsCompleted(this, new GetBattleEventsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBattleEventsAsync(int battleID) {
            this.GetBattleEventsAsync(battleID, null);
        }
        
        public void GetBattleEventsAsync(int battleID, object userState) {
            if ((this.onBeginGetBattleEventsDelegate == null)) {
                this.onBeginGetBattleEventsDelegate = new BeginOperationDelegate(this.OnBeginGetBattleEvents);
            }
            if ((this.onEndGetBattleEventsDelegate == null)) {
                this.onEndGetBattleEventsDelegate = new EndOperationDelegate(this.OnEndGetBattleEvents);
            }
            if ((this.onGetBattleEventsCompletedDelegate == null)) {
                this.onGetBattleEventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBattleEventsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBattleEventsDelegate, new object[] {
                        battleID}, this.onEndGetBattleEventsDelegate, this.onGetBattleEventsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetBodyEvents(int bodyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBodyEvents(bodyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> PlanetWars.ServiceReference.IPlanetWarsService.EndGetBodyEvents(System.IAsyncResult result) {
            return base.Channel.EndGetBodyEvents(result);
        }
        
        private System.IAsyncResult OnBeginGetBodyEvents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int bodyID = ((int)(inValues[0]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetBodyEvents(bodyID, callback, asyncState);
        }
        
        private object[] OnEndGetBodyEvents(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetBodyEvents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBodyEventsCompleted(object state) {
            if ((this.GetBodyEventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBodyEventsCompleted(this, new GetBodyEventsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBodyEventsAsync(int bodyID) {
            this.GetBodyEventsAsync(bodyID, null);
        }
        
        public void GetBodyEventsAsync(int bodyID, object userState) {
            if ((this.onBeginGetBodyEventsDelegate == null)) {
                this.onBeginGetBodyEventsDelegate = new BeginOperationDelegate(this.OnBeginGetBodyEvents);
            }
            if ((this.onEndGetBodyEventsDelegate == null)) {
                this.onEndGetBodyEventsDelegate = new EndOperationDelegate(this.OnEndGetBodyEvents);
            }
            if ((this.onGetBodyEventsCompletedDelegate == null)) {
                this.onGetBodyEventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBodyEventsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBodyEventsDelegate, new object[] {
                        bodyID}, this.onEndGetBodyEventsDelegate, this.onGetBodyEventsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetBodyOptions(string playerName, string password, int bodyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBodyOptions(playerName, password, bodyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.BodyResponse PlanetWars.ServiceReference.IPlanetWarsService.EndGetBodyOptions(System.IAsyncResult result) {
            return base.Channel.EndGetBodyOptions(result);
        }
        
        private System.IAsyncResult OnBeginGetBodyOptions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int bodyID = ((int)(inValues[2]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetBodyOptions(playerName, password, bodyID, callback, asyncState);
        }
        
        private object[] OnEndGetBodyOptions(System.IAsyncResult result) {
            PlanetWars.ServiceReference.BodyResponse retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetBodyOptions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBodyOptionsCompleted(object state) {
            if ((this.GetBodyOptionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBodyOptionsCompleted(this, new GetBodyOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBodyOptionsAsync(string playerName, string password, int bodyID) {
            this.GetBodyOptionsAsync(playerName, password, bodyID, null);
        }
        
        public void GetBodyOptionsAsync(string playerName, string password, int bodyID, object userState) {
            if ((this.onBeginGetBodyOptionsDelegate == null)) {
                this.onBeginGetBodyOptionsDelegate = new BeginOperationDelegate(this.OnBeginGetBodyOptions);
            }
            if ((this.onEndGetBodyOptionsDelegate == null)) {
                this.onEndGetBodyOptionsDelegate = new EndOperationDelegate(this.OnEndGetBodyOptions);
            }
            if ((this.onGetBodyOptionsCompletedDelegate == null)) {
                this.onGetBodyOptionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBodyOptionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBodyOptionsDelegate, new object[] {
                        playerName,
                        password,
                        bodyID}, this.onEndGetBodyOptionsDelegate, this.onGetBodyOptionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetLoginHint(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLoginHint(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string PlanetWars.ServiceReference.IPlanetWarsService.EndGetLoginHint(System.IAsyncResult result) {
            return base.Channel.EndGetLoginHint(result);
        }
        
        private System.IAsyncResult OnBeginGetLoginHint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetLoginHint(callback, asyncState);
        }
        
        private object[] OnEndGetLoginHint(System.IAsyncResult result) {
            string retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetLoginHint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLoginHintCompleted(object state) {
            if ((this.GetLoginHintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoginHintCompleted(this, new GetLoginHintCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoginHintAsync() {
            this.GetLoginHintAsync(null);
        }
        
        public void GetLoginHintAsync(object userState) {
            if ((this.onBeginGetLoginHintDelegate == null)) {
                this.onBeginGetLoginHintDelegate = new BeginOperationDelegate(this.OnBeginGetLoginHint);
            }
            if ((this.onEndGetLoginHintDelegate == null)) {
                this.onEndGetLoginHintDelegate = new EndOperationDelegate(this.OnEndGetLoginHint);
            }
            if ((this.onGetLoginHintCompletedDelegate == null)) {
                this.onGetLoginHintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoginHintCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoginHintDelegate, null, this.onEndGetLoginHintDelegate, this.onGetLoginHintCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetMapData(string playerName, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMapData(playerName, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.StarMap PlanetWars.ServiceReference.IPlanetWarsService.EndGetMapData(System.IAsyncResult result) {
            return base.Channel.EndGetMapData(result);
        }
        
        private System.IAsyncResult OnBeginGetMapData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetMapData(playerName, password, callback, asyncState);
        }
        
        private object[] OnEndGetMapData(System.IAsyncResult result) {
            PlanetWars.ServiceReference.StarMap retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetMapData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMapDataCompleted(object state) {
            if ((this.GetMapDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMapDataCompleted(this, new GetMapDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMapDataAsync(string playerName, string password) {
            this.GetMapDataAsync(playerName, password, null);
        }
        
        public void GetMapDataAsync(string playerName, string password, object userState) {
            if ((this.onBeginGetMapDataDelegate == null)) {
                this.onBeginGetMapDataDelegate = new BeginOperationDelegate(this.OnBeginGetMapData);
            }
            if ((this.onEndGetMapDataDelegate == null)) {
                this.onEndGetMapDataDelegate = new EndOperationDelegate(this.OnEndGetMapData);
            }
            if ((this.onGetMapDataCompletedDelegate == null)) {
                this.onGetMapDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMapDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetMapDataDelegate, new object[] {
                        playerName,
                        password}, this.onEndGetMapDataDelegate, this.onGetMapDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetMotherhipModuleBuildOptions(string playerName, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMotherhipModuleBuildOptions(playerName, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureOption> PlanetWars.ServiceReference.IPlanetWarsService.EndGetMotherhipModuleBuildOptions(System.IAsyncResult result) {
            return base.Channel.EndGetMotherhipModuleBuildOptions(result);
        }
        
        private System.IAsyncResult OnBeginGetMotherhipModuleBuildOptions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetMotherhipModuleBuildOptions(playerName, password, callback, asyncState);
        }
        
        private object[] OnEndGetMotherhipModuleBuildOptions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureOption> retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetMotherhipModuleBuildOptions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMotherhipModuleBuildOptionsCompleted(object state) {
            if ((this.GetMotherhipModuleBuildOptionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMotherhipModuleBuildOptionsCompleted(this, new GetMotherhipModuleBuildOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMotherhipModuleBuildOptionsAsync(string playerName, string password) {
            this.GetMotherhipModuleBuildOptionsAsync(playerName, password, null);
        }
        
        public void GetMotherhipModuleBuildOptionsAsync(string playerName, string password, object userState) {
            if ((this.onBeginGetMotherhipModuleBuildOptionsDelegate == null)) {
                this.onBeginGetMotherhipModuleBuildOptionsDelegate = new BeginOperationDelegate(this.OnBeginGetMotherhipModuleBuildOptions);
            }
            if ((this.onEndGetMotherhipModuleBuildOptionsDelegate == null)) {
                this.onEndGetMotherhipModuleBuildOptionsDelegate = new EndOperationDelegate(this.OnEndGetMotherhipModuleBuildOptions);
            }
            if ((this.onGetMotherhipModuleBuildOptionsCompletedDelegate == null)) {
                this.onGetMotherhipModuleBuildOptionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMotherhipModuleBuildOptionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMotherhipModuleBuildOptionsDelegate, new object[] {
                        playerName,
                        password}, this.onEndGetMotherhipModuleBuildOptionsDelegate, this.onGetMotherhipModuleBuildOptionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetInvariants(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInvariants(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.Invariants PlanetWars.ServiceReference.IPlanetWarsService.EndGetInvariants(System.IAsyncResult result) {
            return base.Channel.EndGetInvariants(result);
        }
        
        private System.IAsyncResult OnBeginGetInvariants(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetInvariants(callback, asyncState);
        }
        
        private object[] OnEndGetInvariants(System.IAsyncResult result) {
            PlanetWars.ServiceReference.Invariants retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetInvariants(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInvariantsCompleted(object state) {
            if ((this.GetInvariantsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInvariantsCompleted(this, new GetInvariantsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInvariantsAsync() {
            this.GetInvariantsAsync(null);
        }
        
        public void GetInvariantsAsync(object userState) {
            if ((this.onBeginGetInvariantsDelegate == null)) {
                this.onBeginGetInvariantsDelegate = new BeginOperationDelegate(this.OnBeginGetInvariants);
            }
            if ((this.onEndGetInvariantsDelegate == null)) {
                this.onEndGetInvariantsDelegate = new EndOperationDelegate(this.OnEndGetInvariants);
            }
            if ((this.onGetInvariantsCompletedDelegate == null)) {
                this.onGetInvariantsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInvariantsCompleted);
            }
            base.InvokeAsync(this.onBeginGetInvariantsDelegate, null, this.onEndGetInvariantsDelegate, this.onGetInvariantsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetPlayerData(string playerName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayerData(playerName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.Player PlanetWars.ServiceReference.IPlanetWarsService.EndGetPlayerData(System.IAsyncResult result) {
            return base.Channel.EndGetPlayerData(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayerData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetPlayerData(playerName, callback, asyncState);
        }
        
        private object[] OnEndGetPlayerData(System.IAsyncResult result) {
            PlanetWars.ServiceReference.Player retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetPlayerData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayerDataCompleted(object state) {
            if ((this.GetPlayerDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayerDataCompleted(this, new GetPlayerDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayerDataAsync(string playerName) {
            this.GetPlayerDataAsync(playerName, null);
        }
        
        public void GetPlayerDataAsync(string playerName, object userState) {
            if ((this.onBeginGetPlayerDataDelegate == null)) {
                this.onBeginGetPlayerDataDelegate = new BeginOperationDelegate(this.OnBeginGetPlayerData);
            }
            if ((this.onEndGetPlayerDataDelegate == null)) {
                this.onEndGetPlayerDataDelegate = new EndOperationDelegate(this.OnEndGetPlayerData);
            }
            if ((this.onGetPlayerDataCompletedDelegate == null)) {
                this.onGetPlayerDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayerDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayerDataDelegate, new object[] {
                        playerName}, this.onEndGetPlayerDataDelegate, this.onGetPlayerDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetPlayerEvents(int playerID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayerEvents(playerID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> PlanetWars.ServiceReference.IPlanetWarsService.EndGetPlayerEvents(System.IAsyncResult result) {
            return base.Channel.EndGetPlayerEvents(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayerEvents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int playerID = ((int)(inValues[0]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetPlayerEvents(playerID, callback, asyncState);
        }
        
        private object[] OnEndGetPlayerEvents(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetPlayerEvents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayerEventsCompleted(object state) {
            if ((this.GetPlayerEventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayerEventsCompleted(this, new GetPlayerEventsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayerEventsAsync(int playerID) {
            this.GetPlayerEventsAsync(playerID, null);
        }
        
        public void GetPlayerEventsAsync(int playerID, object userState) {
            if ((this.onBeginGetPlayerEventsDelegate == null)) {
                this.onBeginGetPlayerEventsDelegate = new BeginOperationDelegate(this.OnBeginGetPlayerEvents);
            }
            if ((this.onEndGetPlayerEventsDelegate == null)) {
                this.onEndGetPlayerEventsDelegate = new EndOperationDelegate(this.OnEndGetPlayerEvents);
            }
            if ((this.onGetPlayerEventsCompletedDelegate == null)) {
                this.onGetPlayerEventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayerEventsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayerEventsDelegate, new object[] {
                        playerID}, this.onEndGetPlayerEventsDelegate, this.onGetPlayerEventsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetPlayerList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPlayerList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> PlanetWars.ServiceReference.IPlanetWarsService.EndGetPlayerList(System.IAsyncResult result) {
            return base.Channel.EndGetPlayerList(result);
        }
        
        private System.IAsyncResult OnBeginGetPlayerList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetPlayerList(callback, asyncState);
        }
        
        private object[] OnEndGetPlayerList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetPlayerList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPlayerListCompleted(object state) {
            if ((this.GetPlayerListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPlayerListCompleted(this, new GetPlayerListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPlayerListAsync() {
            this.GetPlayerListAsync(null);
        }
        
        public void GetPlayerListAsync(object userState) {
            if ((this.onBeginGetPlayerListDelegate == null)) {
                this.onBeginGetPlayerListDelegate = new BeginOperationDelegate(this.OnBeginGetPlayerList);
            }
            if ((this.onEndGetPlayerListDelegate == null)) {
                this.onEndGetPlayerListDelegate = new EndOperationDelegate(this.OnEndGetPlayerList);
            }
            if ((this.onGetPlayerListCompletedDelegate == null)) {
                this.onGetPlayerListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPlayerListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPlayerListDelegate, null, this.onEndGetPlayerListDelegate, this.onGetPlayerListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetStarSystemEvents(int starSystemID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStarSystemEvents(starSystemID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> PlanetWars.ServiceReference.IPlanetWarsService.EndGetStarSystemEvents(System.IAsyncResult result) {
            return base.Channel.EndGetStarSystemEvents(result);
        }
        
        private System.IAsyncResult OnBeginGetStarSystemEvents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int starSystemID = ((int)(inValues[0]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetStarSystemEvents(starSystemID, callback, asyncState);
        }
        
        private object[] OnEndGetStarSystemEvents(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetStarSystemEvents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStarSystemEventsCompleted(object state) {
            if ((this.GetStarSystemEventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStarSystemEventsCompleted(this, new GetStarSystemEventsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStarSystemEventsAsync(int starSystemID) {
            this.GetStarSystemEventsAsync(starSystemID, null);
        }
        
        public void GetStarSystemEventsAsync(int starSystemID, object userState) {
            if ((this.onBeginGetStarSystemEventsDelegate == null)) {
                this.onBeginGetStarSystemEventsDelegate = new BeginOperationDelegate(this.OnBeginGetStarSystemEvents);
            }
            if ((this.onEndGetStarSystemEventsDelegate == null)) {
                this.onEndGetStarSystemEventsDelegate = new EndOperationDelegate(this.OnEndGetStarSystemEvents);
            }
            if ((this.onGetStarSystemEventsCompletedDelegate == null)) {
                this.onGetStarSystemEventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStarSystemEventsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStarSystemEventsDelegate, new object[] {
                        starSystemID}, this.onEndGetStarSystemEventsDelegate, this.onGetStarSystemEventsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetTransits(string playerName, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTransits(playerName, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> PlanetWars.ServiceReference.IPlanetWarsService.EndGetTransits(System.IAsyncResult result) {
            return base.Channel.EndGetTransits(result);
        }
        
        private System.IAsyncResult OnBeginGetTransits(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetTransits(playerName, password, callback, asyncState);
        }
        
        private object[] OnEndGetTransits(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetTransits(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTransitsCompleted(object state) {
            if ((this.GetTransitsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTransitsCompleted(this, new GetTransitsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTransitsAsync(string playerName, string password) {
            this.GetTransitsAsync(playerName, password, null);
        }
        
        public void GetTransitsAsync(string playerName, string password, object userState) {
            if ((this.onBeginGetTransitsDelegate == null)) {
                this.onBeginGetTransitsDelegate = new BeginOperationDelegate(this.OnBeginGetTransits);
            }
            if ((this.onEndGetTransitsDelegate == null)) {
                this.onEndGetTransitsDelegate = new EndOperationDelegate(this.OnEndGetTransits);
            }
            if ((this.onGetTransitsCompletedDelegate == null)) {
                this.onGetTransitsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTransitsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTransitsDelegate, new object[] {
                        playerName,
                        password}, this.onEndGetTransitsDelegate, this.onGetTransitsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginLogin(string login, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(login, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.LoginResponse PlanetWars.ServiceReference.IPlanetWarsService.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginLogin(login, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            PlanetWars.ServiceReference.LoginResponse retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string login, string password) {
            this.LoginAsync(login, password, null);
        }
        
        public void LoginAsync(string login, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        login,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginModifyFleet(string playerName, string password, int fleetID, System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount> fleetShips, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModifyFleet(playerName, password, fleetID, fleetShips, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.Fleet PlanetWars.ServiceReference.IPlanetWarsService.EndModifyFleet(System.IAsyncResult result) {
            return base.Channel.EndModifyFleet(result);
        }
        
        private System.IAsyncResult OnBeginModifyFleet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int fleetID = ((int)(inValues[2]));
            System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount> fleetShips = ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount>)(inValues[3]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginModifyFleet(playerName, password, fleetID, fleetShips, callback, asyncState);
        }
        
        private object[] OnEndModifyFleet(System.IAsyncResult result) {
            PlanetWars.ServiceReference.Fleet retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndModifyFleet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnModifyFleetCompleted(object state) {
            if ((this.ModifyFleetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModifyFleetCompleted(this, new ModifyFleetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModifyFleetAsync(string playerName, string password, int fleetID, System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount> fleetShips) {
            this.ModifyFleetAsync(playerName, password, fleetID, fleetShips, null);
        }
        
        public void ModifyFleetAsync(string playerName, string password, int fleetID, System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount> fleetShips, object userState) {
            if ((this.onBeginModifyFleetDelegate == null)) {
                this.onBeginModifyFleetDelegate = new BeginOperationDelegate(this.OnBeginModifyFleet);
            }
            if ((this.onEndModifyFleetDelegate == null)) {
                this.onEndModifyFleetDelegate = new EndOperationDelegate(this.OnEndModifyFleet);
            }
            if ((this.onModifyFleetCompletedDelegate == null)) {
                this.onModifyFleetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModifyFleetCompleted);
            }
            base.InvokeAsync(this.onBeginModifyFleetDelegate, new object[] {
                        playerName,
                        password,
                        fleetID,
                        fleetShips}, this.onEndModifyFleetDelegate, this.onModifyFleetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginOrderFleet(string playerName, string password, int fleetID, int toBodyID, int futureOffset, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOrderFleet(playerName, password, fleetID, toBodyID, futureOffset, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.Fleet PlanetWars.ServiceReference.IPlanetWarsService.EndOrderFleet(System.IAsyncResult result) {
            return base.Channel.EndOrderFleet(result);
        }
        
        private System.IAsyncResult OnBeginOrderFleet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int fleetID = ((int)(inValues[2]));
            int toBodyID = ((int)(inValues[3]));
            int futureOffset = ((int)(inValues[4]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginOrderFleet(playerName, password, fleetID, toBodyID, futureOffset, callback, asyncState);
        }
        
        private object[] OnEndOrderFleet(System.IAsyncResult result) {
            PlanetWars.ServiceReference.Fleet retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndOrderFleet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOrderFleetCompleted(object state) {
            if ((this.OrderFleetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OrderFleetCompleted(this, new OrderFleetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OrderFleetAsync(string playerName, string password, int fleetID, int toBodyID, int futureOffset) {
            this.OrderFleetAsync(playerName, password, fleetID, toBodyID, futureOffset, null);
        }
        
        public void OrderFleetAsync(string playerName, string password, int fleetID, int toBodyID, int futureOffset, object userState) {
            if ((this.onBeginOrderFleetDelegate == null)) {
                this.onBeginOrderFleetDelegate = new BeginOperationDelegate(this.OnBeginOrderFleet);
            }
            if ((this.onEndOrderFleetDelegate == null)) {
                this.onEndOrderFleetDelegate = new EndOperationDelegate(this.OnEndOrderFleet);
            }
            if ((this.onOrderFleetCompletedDelegate == null)) {
                this.onOrderFleetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOrderFleetCompleted);
            }
            base.InvokeAsync(this.onBeginOrderFleetDelegate, new object[] {
                        playerName,
                        password,
                        fleetID,
                        toBodyID,
                        futureOffset}, this.onEndOrderFleetDelegate, this.onOrderFleetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginOrderMothership(string playerName, string password, int toBodyID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOrderMothership(playerName, password, toBodyID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.TupleOfPlayerCelestialObjectzDaz1WLz PlanetWars.ServiceReference.IPlanetWarsService.EndOrderMothership(System.IAsyncResult result) {
            return base.Channel.EndOrderMothership(result);
        }
        
        private System.IAsyncResult OnBeginOrderMothership(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int toBodyID = ((int)(inValues[2]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginOrderMothership(playerName, password, toBodyID, callback, asyncState);
        }
        
        private object[] OnEndOrderMothership(System.IAsyncResult result) {
            PlanetWars.ServiceReference.TupleOfPlayerCelestialObjectzDaz1WLz retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndOrderMothership(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOrderMothershipCompleted(object state) {
            if ((this.OrderMothershipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OrderMothershipCompleted(this, new OrderMothershipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OrderMothershipAsync(string playerName, string password, int toBodyID) {
            this.OrderMothershipAsync(playerName, password, toBodyID, null);
        }
        
        public void OrderMothershipAsync(string playerName, string password, int toBodyID, object userState) {
            if ((this.onBeginOrderMothershipDelegate == null)) {
                this.onBeginOrderMothershipDelegate = new BeginOperationDelegate(this.OnBeginOrderMothership);
            }
            if ((this.onEndOrderMothershipDelegate == null)) {
                this.onEndOrderMothershipDelegate = new EndOperationDelegate(this.OnEndOrderMothership);
            }
            if ((this.onOrderMothershipCompletedDelegate == null)) {
                this.onOrderMothershipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOrderMothershipCompleted);
            }
            base.InvokeAsync(this.onBeginOrderMothershipDelegate, new object[] {
                        playerName,
                        password,
                        toBodyID}, this.onEndOrderMothershipDelegate, this.onOrderMothershipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginRegister(string login, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegister(login, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.RegisterResponse PlanetWars.ServiceReference.IPlanetWarsService.EndRegister(System.IAsyncResult result) {
            return base.Channel.EndRegister(result);
        }
        
        private System.IAsyncResult OnBeginRegister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginRegister(login, password, callback, asyncState);
        }
        
        private object[] OnEndRegister(System.IAsyncResult result) {
            PlanetWars.ServiceReference.RegisterResponse retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndRegister(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterCompleted(object state) {
            if ((this.RegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterAsync(string login, string password) {
            this.RegisterAsync(login, password, null);
        }
        
        public void RegisterAsync(string login, string password, object userState) {
            if ((this.onBeginRegisterDelegate == null)) {
                this.onBeginRegisterDelegate = new BeginOperationDelegate(this.OnBeginRegister);
            }
            if ((this.onEndRegisterDelegate == null)) {
                this.onEndRegisterDelegate = new EndOperationDelegate(this.OnEndRegister);
            }
            if ((this.onRegisterCompletedDelegate == null)) {
                this.onRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterDelegate, new object[] {
                        login,
                        password}, this.onEndRegisterDelegate, this.onRegisterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginSellMotherhipModule(string playerName, string password, int structureTypeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSellMotherhipModule(playerName, password, structureTypeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.BodyResponse PlanetWars.ServiceReference.IPlanetWarsService.EndSellMotherhipModule(System.IAsyncResult result) {
            return base.Channel.EndSellMotherhipModule(result);
        }
        
        private System.IAsyncResult OnBeginSellMotherhipModule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int structureTypeID = ((int)(inValues[2]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginSellMotherhipModule(playerName, password, structureTypeID, callback, asyncState);
        }
        
        private object[] OnEndSellMotherhipModule(System.IAsyncResult result) {
            PlanetWars.ServiceReference.BodyResponse retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndSellMotherhipModule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSellMotherhipModuleCompleted(object state) {
            if ((this.SellMotherhipModuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SellMotherhipModuleCompleted(this, new SellMotherhipModuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SellMotherhipModuleAsync(string playerName, string password, int structureTypeID) {
            this.SellMotherhipModuleAsync(playerName, password, structureTypeID, null);
        }
        
        public void SellMotherhipModuleAsync(string playerName, string password, int structureTypeID, object userState) {
            if ((this.onBeginSellMotherhipModuleDelegate == null)) {
                this.onBeginSellMotherhipModuleDelegate = new BeginOperationDelegate(this.OnBeginSellMotherhipModule);
            }
            if ((this.onEndSellMotherhipModuleDelegate == null)) {
                this.onEndSellMotherhipModuleDelegate = new EndOperationDelegate(this.OnEndSellMotherhipModule);
            }
            if ((this.onSellMotherhipModuleCompletedDelegate == null)) {
                this.onSellMotherhipModuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSellMotherhipModuleCompleted);
            }
            base.InvokeAsync(this.onBeginSellMotherhipModuleDelegate, new object[] {
                        playerName,
                        password,
                        structureTypeID}, this.onEndSellMotherhipModuleDelegate, this.onSellMotherhipModuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginSellStructure(string playerName, string password, int celestialObjectID, int structureTypeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSellStructure(playerName, password, celestialObjectID, structureTypeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetWars.ServiceReference.BodyResponse PlanetWars.ServiceReference.IPlanetWarsService.EndSellStructure(System.IAsyncResult result) {
            return base.Channel.EndSellStructure(result);
        }
        
        private System.IAsyncResult OnBeginSellStructure(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string playerName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            int celestialObjectID = ((int)(inValues[2]));
            int structureTypeID = ((int)(inValues[3]));
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginSellStructure(playerName, password, celestialObjectID, structureTypeID, callback, asyncState);
        }
        
        private object[] OnEndSellStructure(System.IAsyncResult result) {
            PlanetWars.ServiceReference.BodyResponse retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndSellStructure(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSellStructureCompleted(object state) {
            if ((this.SellStructureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SellStructureCompleted(this, new SellStructureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SellStructureAsync(string playerName, string password, int celestialObjectID, int structureTypeID) {
            this.SellStructureAsync(playerName, password, celestialObjectID, structureTypeID, null);
        }
        
        public void SellStructureAsync(string playerName, string password, int celestialObjectID, int structureTypeID, object userState) {
            if ((this.onBeginSellStructureDelegate == null)) {
                this.onBeginSellStructureDelegate = new BeginOperationDelegate(this.OnBeginSellStructure);
            }
            if ((this.onEndSellStructureDelegate == null)) {
                this.onEndSellStructureDelegate = new EndOperationDelegate(this.OnEndSellStructure);
            }
            if ((this.onSellStructureCompletedDelegate == null)) {
                this.onSellStructureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSellStructureCompleted);
            }
            base.InvokeAsync(this.onBeginSellStructureDelegate, new object[] {
                        playerName,
                        password,
                        celestialObjectID,
                        structureTypeID}, this.onEndSellStructureDelegate, this.onSellStructureCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlanetWars.ServiceReference.IPlanetWarsService.BeginGetDirtyGameSecond(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDirtyGameSecond(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int PlanetWars.ServiceReference.IPlanetWarsService.EndGetDirtyGameSecond(System.IAsyncResult result) {
            return base.Channel.EndGetDirtyGameSecond(result);
        }
        
        private System.IAsyncResult OnBeginGetDirtyGameSecond(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).BeginGetDirtyGameSecond(callback, asyncState);
        }
        
        private object[] OnEndGetDirtyGameSecond(System.IAsyncResult result) {
            int retVal = ((PlanetWars.ServiceReference.IPlanetWarsService)(this)).EndGetDirtyGameSecond(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDirtyGameSecondCompleted(object state) {
            if ((this.GetDirtyGameSecondCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDirtyGameSecondCompleted(this, new GetDirtyGameSecondCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDirtyGameSecondAsync() {
            this.GetDirtyGameSecondAsync(null);
        }
        
        public void GetDirtyGameSecondAsync(object userState) {
            if ((this.onBeginGetDirtyGameSecondDelegate == null)) {
                this.onBeginGetDirtyGameSecondDelegate = new BeginOperationDelegate(this.OnBeginGetDirtyGameSecond);
            }
            if ((this.onEndGetDirtyGameSecondDelegate == null)) {
                this.onEndGetDirtyGameSecondDelegate = new EndOperationDelegate(this.OnEndGetDirtyGameSecond);
            }
            if ((this.onGetDirtyGameSecondCompletedDelegate == null)) {
                this.onGetDirtyGameSecondCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDirtyGameSecondCompleted);
            }
            base.InvokeAsync(this.onBeginGetDirtyGameSecondDelegate, null, this.onEndGetDirtyGameSecondDelegate, this.onGetDirtyGameSecondCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override PlanetWars.ServiceReference.IPlanetWarsService CreateChannel() {
            return new PlanetWarsServiceClientChannel(this);
        }
        
        private class PlanetWarsServiceClientChannel : ChannelBase<PlanetWars.ServiceReference.IPlanetWarsService>, PlanetWars.ServiceReference.IPlanetWarsService {
            
            public PlanetWarsServiceClientChannel(System.ServiceModel.ClientBase<PlanetWars.ServiceReference.IPlanetWarsService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginBuildMothershipModule(string playerName, string password, int structureType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = playerName;
                _args[1] = password;
                _args[2] = structureType;
                System.IAsyncResult _result = base.BeginInvoke("BuildMothershipModule", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.BodyResponse EndBuildMothershipModule(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.BodyResponse _result = ((PlanetWars.ServiceReference.BodyResponse)(base.EndInvoke("BuildMothershipModule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBuildShip(string playerName, string password, int celestialObjectID, int shipType, int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = playerName;
                _args[1] = password;
                _args[2] = celestialObjectID;
                _args[3] = shipType;
                _args[4] = count;
                System.IAsyncResult _result = base.BeginInvoke("BuildShip", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.BodyResponse EndBuildShip(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.BodyResponse _result = ((PlanetWars.ServiceReference.BodyResponse)(base.EndInvoke("BuildShip", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBuildStructure(string playerName, string password, int celestialObjectID, int structureTypeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = playerName;
                _args[1] = password;
                _args[2] = celestialObjectID;
                _args[3] = structureTypeID;
                System.IAsyncResult _result = base.BeginInvoke("BuildStructure", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.BodyResponse EndBuildStructure(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.BodyResponse _result = ((PlanetWars.ServiceReference.BodyResponse)(base.EndInvoke("BuildStructure", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateFleet(string playerName, string password, int bodyID, System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount> fleetShips, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = playerName;
                _args[1] = password;
                _args[2] = bodyID;
                _args[3] = fleetShips;
                System.IAsyncResult _result = base.BeginInvoke("CreateFleet", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.Fleet EndCreateFleet(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.Fleet _result = ((PlanetWars.ServiceReference.Fleet)(base.EndInvoke("CreateFleet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreatePopulationTransport(string playerName, string password, int fromBodyID, int toBodyID, int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = playerName;
                _args[1] = password;
                _args[2] = fromBodyID;
                _args[3] = toBodyID;
                _args[4] = count;
                System.IAsyncResult _result = base.BeginInvoke("CreatePopulationTransport", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.TupleOfPopulationTransportCelestialObjectzDaz1WLz EndCreatePopulationTransport(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.TupleOfPopulationTransportCelestialObjectzDaz1WLz _result = ((PlanetWars.ServiceReference.TupleOfPopulationTransportCelestialObjectzDaz1WLz)(base.EndInvoke("CreatePopulationTransport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFakeTurn(int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = count;
                System.IAsyncResult _result = base.BeginInvoke("FakeTurn", _args, callback, asyncState);
                return _result;
            }
            
            public void EndFakeTurn(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("FakeTurn", _args, result);
            }
            
            public System.IAsyncResult BeginGetBattleEvents(int battleID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = battleID;
                System.IAsyncResult _result = base.BeginInvoke("GetBattleEvents", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> EndGetBattleEvents(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> _result = ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1>)(base.EndInvoke("GetBattleEvents", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBodyEvents(int bodyID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = bodyID;
                System.IAsyncResult _result = base.BeginInvoke("GetBodyEvents", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> EndGetBodyEvents(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> _result = ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1>)(base.EndInvoke("GetBodyEvents", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBodyOptions(string playerName, string password, int bodyID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = playerName;
                _args[1] = password;
                _args[2] = bodyID;
                System.IAsyncResult _result = base.BeginInvoke("GetBodyOptions", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.BodyResponse EndGetBodyOptions(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.BodyResponse _result = ((PlanetWars.ServiceReference.BodyResponse)(base.EndInvoke("GetBodyOptions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLoginHint(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLoginHint", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetLoginHint(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetLoginHint", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMapData(string playerName, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = playerName;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("GetMapData", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.StarMap EndGetMapData(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.StarMap _result = ((PlanetWars.ServiceReference.StarMap)(base.EndInvoke("GetMapData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMotherhipModuleBuildOptions(string playerName, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = playerName;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("GetMotherhipModuleBuildOptions", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureOption> EndGetMotherhipModuleBuildOptions(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureOption> _result = ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.StructureOption>)(base.EndInvoke("GetMotherhipModuleBuildOptions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInvariants(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetInvariants", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.Invariants EndGetInvariants(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.Invariants _result = ((PlanetWars.ServiceReference.Invariants)(base.EndInvoke("GetInvariants", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayerData(string playerName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = playerName;
                System.IAsyncResult _result = base.BeginInvoke("GetPlayerData", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.Player EndGetPlayerData(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.Player _result = ((PlanetWars.ServiceReference.Player)(base.EndInvoke("GetPlayerData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayerEvents(int playerID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = playerID;
                System.IAsyncResult _result = base.BeginInvoke("GetPlayerEvents", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> EndGetPlayerEvents(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> _result = ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1>)(base.EndInvoke("GetPlayerEvents", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPlayerList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPlayerList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> EndGetPlayerList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player> _result = ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Player>)(base.EndInvoke("GetPlayerList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStarSystemEvents(int starSystemID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = starSystemID;
                System.IAsyncResult _result = base.BeginInvoke("GetStarSystemEvents", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> EndGetStarSystemEvents(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1> _result = ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Event1>)(base.EndInvoke("GetStarSystemEvents", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTransits(string playerName, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = playerName;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("GetTransits", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> EndGetTransits(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit> _result = ((System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.Transit>)(base.EndInvoke("GetTransits", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogin(string login, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = login;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.LoginResponse EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.LoginResponse _result = ((PlanetWars.ServiceReference.LoginResponse)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginModifyFleet(string playerName, string password, int fleetID, System.Collections.ObjectModel.ObservableCollection<PlanetWars.ServiceReference.ShipTypeCount> fleetShips, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = playerName;
                _args[1] = password;
                _args[2] = fleetID;
                _args[3] = fleetShips;
                System.IAsyncResult _result = base.BeginInvoke("ModifyFleet", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.Fleet EndModifyFleet(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.Fleet _result = ((PlanetWars.ServiceReference.Fleet)(base.EndInvoke("ModifyFleet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginOrderFleet(string playerName, string password, int fleetID, int toBodyID, int futureOffset, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = playerName;
                _args[1] = password;
                _args[2] = fleetID;
                _args[3] = toBodyID;
                _args[4] = futureOffset;
                System.IAsyncResult _result = base.BeginInvoke("OrderFleet", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.Fleet EndOrderFleet(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.Fleet _result = ((PlanetWars.ServiceReference.Fleet)(base.EndInvoke("OrderFleet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginOrderMothership(string playerName, string password, int toBodyID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = playerName;
                _args[1] = password;
                _args[2] = toBodyID;
                System.IAsyncResult _result = base.BeginInvoke("OrderMothership", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.TupleOfPlayerCelestialObjectzDaz1WLz EndOrderMothership(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.TupleOfPlayerCelestialObjectzDaz1WLz _result = ((PlanetWars.ServiceReference.TupleOfPlayerCelestialObjectzDaz1WLz)(base.EndInvoke("OrderMothership", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegister(string login, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = login;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Register", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.RegisterResponse EndRegister(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.RegisterResponse _result = ((PlanetWars.ServiceReference.RegisterResponse)(base.EndInvoke("Register", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSellMotherhipModule(string playerName, string password, int structureTypeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = playerName;
                _args[1] = password;
                _args[2] = structureTypeID;
                System.IAsyncResult _result = base.BeginInvoke("SellMotherhipModule", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.BodyResponse EndSellMotherhipModule(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.BodyResponse _result = ((PlanetWars.ServiceReference.BodyResponse)(base.EndInvoke("SellMotherhipModule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSellStructure(string playerName, string password, int celestialObjectID, int structureTypeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = playerName;
                _args[1] = password;
                _args[2] = celestialObjectID;
                _args[3] = structureTypeID;
                System.IAsyncResult _result = base.BeginInvoke("SellStructure", _args, callback, asyncState);
                return _result;
            }
            
            public PlanetWars.ServiceReference.BodyResponse EndSellStructure(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlanetWars.ServiceReference.BodyResponse _result = ((PlanetWars.ServiceReference.BodyResponse)(base.EndInvoke("SellStructure", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDirtyGameSecond(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDirtyGameSecond", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetDirtyGameSecond(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetDirtyGameSecond", _args, result)));
                return _result;
            }
        }
    }
}
